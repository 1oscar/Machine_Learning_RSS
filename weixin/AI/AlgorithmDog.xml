<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>AlgorithmDog</title>
    <link>http://www.iwgc.cn/list/5566</link>
    <description>AlgorithmDog 讲述机器学习和系统研发的轶事,希望把这些事讲得生动有趣.每周日更新哦.欢迎关注.</description>
    <item>
      <title>游戏智能系列之三:有限状态自动机</title>
      <link>http://www.iwgc.cn/link/3310976</link>
      <description>&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 游戏智能是很传统的领域，有限状态机和行为树是两种主要方法。&lt;span&gt;&lt;/span&gt;今天这篇博客主要介绍有限状态自动机。&lt;/p&gt;&lt;p&gt;&lt;a rel="attachment wp-att-3322" style="border: 0px; vertical-align: baseline; color: rgb(116, 51, 153); background: transparent;"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Q3H1TCddfvOGTQibwZlSgMfRFiczrqjNsPIHia7nPnxV8w1fBCicwBaHBxhygKy1zkh6bz5w4btDwoDMspN0IkusDQ/0?wx_fmt=jpeg"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3 style="border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em;"&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3 style="border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em;"&gt;&lt;span&gt;1. 有限状态机&lt;/span&gt;&lt;/h3&gt;&lt;hr&gt;&lt;h3 style="border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em;"&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;有限状态机 (Finite-state machine，FSM)，又称有限状态自动机，是表示有限个状态以及状态之间转移和动作等行为的数学模型。从它的定义，我们可以看到有限状态机的几个重要概念。&lt;/p&gt;&lt;blockquote style="border: 0px; padding-right: 3em; padding-left: 3em; vertical-align: baseline; quotes: none; font-style: italic; color: rgb(51, 51, 51);"&gt;&lt;p&gt;1.状态：表示对象的某种形态，在当前形态下可能会拥有不同的行为和属性;&lt;br/&gt;2.转移：表示状态变更，并且必须满足确使转移发生的条件来执行;&lt;br/&gt;3.动作：表示在给定时刻要进行的活动;&lt;br/&gt;4.事件：事件通常会引起状态的变迁，促使状态机从一种状态切换到另一种状态。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;下图是一个典型的有限状态机，描述了一个简单的对战逻辑。&lt;/p&gt;&lt;p&gt;&lt;a rel="attachment wp-att-3514" style="border: 0px; vertical-align: baseline; color: rgb(116, 51, 153); background: transparent;"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvOGTQibwZlSgMfRFiczrqjNsPOmicnicPbSKq0ohMdvNLnRfM3ApCURNpwibgf6FbXrq7yG2tkl8HlVeFQ/0?wx_fmt=png"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;这个有限状态机有三个状态，分别是 idle, escape 和 attack; 不同状态之间的转换是通过动作进行的，比如 idle 状态看到哥布林就会进入 attack 状态。&lt;/p&gt;&lt;h3 style="border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em;"&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3 style="border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em;"&gt;&lt;span&gt;2. Clashjs 游戏中的有限状态机&lt;/span&gt;&lt;/h3&gt;&lt;hr&gt;&lt;h3 style="border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em;"&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;但是在 Clashjs 游戏中，有限状态机需要一些变化。因为 Clashjs 游戏中，一架飞机的状态不仅由它本身采取的动作决定，还由它所处的环境（包括敌机和弹药包）决定。这时候的有限状态机反而简单了，不考虑状态之间的切换，只考虑在每个状态下应该采取什么动作。Clashjs 游戏中的有限状态机的实现代码如下所示。完整的代码已经传到 GitHub 上了（&lt;a style="border: 0px; vertical-align: baseline; color: rgb(116, 51, 153); background: transparent;"&gt;https://github.com/algorithmdog/gameai/tree/master/3.fsm&lt;/a&gt;）。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvOGTQibwZlSgMfRFiczrqjNsP2sNAuFuE0v7vJN0ltnxsQgDHgANQZ9FvOZJ2aicIvWicBGXkGmSJqb7A/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;由于状态转移部分在游戏逻辑中，有限状态机代码退化成什么状态采取什么动作的 if-else 语句了。上图实现的有限状态机的示意图如下。&lt;/p&gt;&lt;p&gt;&lt;a rel="attachment wp-att-3532" style="border: 0px; vertical-align: baseline; color: rgb(116, 51, 153); background: transparent;"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvOGTQibwZlSgMfRFiczrqjNsPzeyibdGfWaBRk6zPqJFw7QwZnFOwppbibrDrnvq7GEpTj2sD2v99rqww/0?wx_fmt=png"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3 style="border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em;"&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3 style="border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em;"&gt;&lt;span&gt;3. 总结&lt;/span&gt;&lt;/h3&gt;&lt;hr&gt;&lt;h3 style="border: 0px; margin-bottom: 10px; vertical-align: baseline; clear: both; line-height: 1.5em;"&gt;&lt;span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;最近为了写游戏智能系列文章，我了解了一些游戏智能相关知识。我发现和如火如荼的机器学习和虚拟现实一比，游戏智能简直就是南极的冰窟窿。例如，我们很难找到这个领域的好资料和交流圈，特别是有关实操相关的资料。我想原因有两个。第一，游戏智能不 sexy。游戏智能的算法都只是一个框架，具体游戏行为逻辑需要大量人力物力填写，比端到端的深度学习不知道低到哪里去了。第二，游戏智能不容易复现因此比较难学习。机器学习有很多公开的数据集。拿到这些数据集，我们就可以写代码调参数了。但是游戏智能和游戏紧密结合，大部分好的游戏不提供游戏智能的接口，大部分提供接口的游戏质量差强人意。这使得非游戏开发商内部人员很难有机会实践游戏智能，从而很难产生好的实操分享。虽然说了那么多坑，但自己选得路，跪着也要走完。我会努力写完游戏智能系列。&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;欢迎关注 AlgorithmDog。&lt;/p&gt;&lt;p&gt;&lt;a rel="attachment wp-att-2360" style="border: 0px; vertical-align: baseline; color: rgb(116, 51, 153); background: transparent;"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Q3H1TCddfvOGTQibwZlSgMfRFiczrqjNsPmne9rKcKIC0yZQHR3hrVCYkvrZGgwaq173MwriadsZS7h8whosGhzlA/0?wx_fmt=png"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Tue, 01 Nov 2016 01:07:21 +0800</pubDate>
    </item>
  </channel>
</rss>
