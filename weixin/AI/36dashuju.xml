<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>36大数据</title>
    <link>http://www.iwgc.cn/list/1149</link>
    <description>关注大数据和互联网趋势,最大,最权威,最干货的大数据微信号(dashuju36).大数据第一科技媒体.不发软文,只做知识分享.</description>
    <item>
      <title>什么是数据挖掘?</title>
      <link>http://www.iwgc.cn/link/2868347</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibzpyGgaW8gibtWo2U3BCRc02ognuOJzcaSic5vmjm6CZ7qWsxAZYAPkxmPd67yyYiclSJYibcRvpZVJKg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;作者：Han Hsiao&lt;/p&gt;&lt;p&gt;由于数据科学刚刚兴起，数据科学家作为一种新生职业被提出，数据研究高级科学家Rachel Schutt将其定义为”计算机科学家、软件工程师和统计学家的混合体“。数据挖掘作为一个学术领域，横跨多个学科，涵盖了统计学、数学、机器学习和数据库等，此外还包括各类专业方向比如从油田电力、海洋生物、历史文本、电子通讯、法律税务等的各个专业领域。注意每一分类都需要相当的行业经验。&lt;/p&gt;&lt;p&gt;而要明白某一事物的本质，就需要通过另一些近似的事物特性对比来说明。&lt;/p&gt;&lt;p&gt;就好像你单独提问什么是男人?很难解释对不对。&lt;/p&gt;&lt;p&gt;所以咱们来举个栗子简单看看：&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;一、分析报告&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;在《大闹天宫》里孙悟空跟二郎神在花果山下大战三百回合，咱来写一篇文章分析。&lt;/p&gt;&lt;p&gt;孙悟空有金刚不坏火眼金睛筋斗云七十二般变化加上定海神针身法灵活。&lt;/p&gt;&lt;p&gt;二郎神杨戬有三只眼缚妖索哮天犬银袍金甲加上三尖两刃四窍八环刀力量无穷。&lt;/p&gt;&lt;p&gt;所以在大战开始三百回合时候不相上下，结果后来二郎神派出天兵天将放火烧花果山让大圣慌了心神被偷袭得手&lt;/p&gt;&lt;p&gt;最后二郎神赢了。分析报告完成。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;二、统计分析&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;大圣二战杨戬。这次在二位大战之前做个数理统计来预测结果。&lt;/p&gt;&lt;p&gt;首先根据历史样本史书记载发现两人在之前的五百年里打过100次，其中孙悟空赢60次。&lt;/p&gt;&lt;p&gt;然后有记录显示，之前孙悟空和牛魔王战斗的胜率是80%，而杨戬斗牛魔王胜率是70%。&lt;/p&gt;&lt;p&gt;所以可以得出综合预测总体胜率是孙悟空赢面大。&lt;/p&gt;&lt;p&gt;结论依靠历史记录，使用样本预测总体，根据经验做出假设。统计分析完成。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;三、数据挖掘&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;孙悟空和杨戬终极决战。这次咱们根据两位的详细资料(如家庭出身、教育背景、工作经验、婚育情况等)让计算机做协同过滤关联分析。计算机通过数据清洗建模后发现：&lt;/p&gt;&lt;p&gt;贫苦出身的孩子一般比皇亲国戚更能吃苦所以功夫底子更好平时训练更加扎实。&lt;/p&gt;&lt;p&gt;战斗经验丰富的斗战胜佛因为平时经常打架擅长利用天时地利环境因素而胜算更大。&lt;/p&gt;&lt;p&gt;在都得到大师指点的情况下，贫苦出身的孩子可以利用后天的努力来弥补先天悟性的欠缺。&lt;/p&gt;&lt;p&gt;样貌奇特注定孤独终老的神仙总是会比同等条件下美若天仙喜欢拈花惹草处处留情的神仙功夫好。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;综上所述，我们可知道：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;论出身两位大神不分伯仲。一个从石头出来，一个是凡人与神仙结合所生。&lt;/p&gt;&lt;p&gt;悟空的师父菩提老祖(准提道人)和二郎神的师父玉鼎真人的师父元始天尊同为鸿钧老祖的高足所以前者更胜一筹。&lt;/p&gt;&lt;p&gt;斗战胜佛战斗经验相对整日快活逍遥无忧无虑的二郎神来说更加丰富。&lt;/p&gt;&lt;p&gt;另孙行者由于样貌原因始终单身(好伤感)。&lt;/p&gt;&lt;p&gt;所以可以得出结论，这次大战孙悟空赢面大。数据挖掘完成。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;四、最后总结：&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;分析报告一般是整个事件发生结束以后的总结(马后炮)。&lt;/p&gt;&lt;p&gt;统计分析能利用大量的历史样本来预测整个事件总体未来的走向(概率)。&lt;/p&gt;&lt;p&gt;数据挖掘则透过事件的表象发现隐藏在背后的蛛丝马迹，从而找到潜伏的规律以及看似无关事物之间背后的联系。&lt;/p&gt;&lt;p&gt;End.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Wed, 28 Sep 2016 09:53:58 +0800</pubDate>
    </item>
    <item>
      <title>如何搭建一个指标体系</title>
      <link>http://www.iwgc.cn/link/2868348</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/jAqr3XzCYibzpyGgaW8gibtWo2U3BCRc02nPyB0tuzDcZcC77LN5a6o9NIByVfx9AXzRuEh7ib1djxCB1Smr0W7Vw/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;作者：陈丹奕&lt;/p&gt;&lt;p&gt;今天跟大家聊聊，如何搭建一个指标体系。&lt;/p&gt;&lt;p&gt;&lt;span&gt;本文由 作者 授权发布。&lt;/span&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;什么是指标体系&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;“指标体系”这个概念是应用比较广泛的，我们从正式出版物中摘取一个定义：&lt;/p&gt;&lt;p&gt;指标体系，即统计指标体系，是由一系列具有相互联系的指标所组成的整体，可以从各个侧面完整地反映现象总体或样本的数量特征。&lt;/p&gt;&lt;p&gt;统计指标体系从其功能和作用不同，可分为描述统计指标体系，评价统计指标体系和预警统计指标体系三种。描述统计指标体系是由若干对社会经济活动状况做出完整而系统描述的基础指标所组成的。评价统计指标体系是由若干对社会经济行为结果进行比较、评估、考核，以检查其工作和综合效益的统计指标所组成。预警统计指标体系主要用于对社会经济宏观运行的监测，并根据指标值的变化，预报社会经济即将出现的不平衡状态、突发事件及某些结构性障碍等。&lt;/p&gt;&lt;p&gt;引自《统计学教程》(主编：王怀伟 清华大学出版社)&lt;/p&gt;&lt;p&gt;简而言之，指标体系即相互之间有逻辑联系的指标构成的整体，所以一个指标不能叫指标体系，几个毫无关系的指标也不能叫指标体系。&lt;/p&gt;&lt;p&gt;概念说起来比较枯燥，举个大家比较容易理解的例子吧：&lt;/p&gt;&lt;center style="color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/jAqr3XzCYibzpyGgaW8gibtWo2U3BCRc02nCXXDibzbVXrE9dibZibnxuvBFD359cfkKBl3mkbQSKpbTxFgd510qdjQ/0?wx_fmt=png"/&gt;&lt;/center&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;上边这张图是我从新浪财经-行情中心截取的上证指数基本指标，左上红框代表指数趋势，中间红框代表市场活跃度，右侧红框代表当天波动幅度。三个红框中的指标，基本可以构成一个最简单的指标体系，用来描述上证市场的现状，属于描述指标体系。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;插播：指标体系的应用范围&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;这一部分要告诉大家的是：指标体系的应用范围实际上很广泛，从国家到个人都可以用，请看下图：&lt;/p&gt;&lt;center style="color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/jAqr3XzCYibzpyGgaW8gibtWo2U3BCRc02NkR4FTc6AsCdY4M7bJibWqXUXBNX5S3A2KJFg9nNyyTFwrAfuRsqrEg/0?wx_fmt=png"/&gt;&lt;/center&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;(最后一个指标体系算是彩蛋，下次讲)&lt;/p&gt;&lt;p&gt;这一段主要是想告诉大家，除了那些看上去高大上的指标体系之外，生活中有很多事情都可以自己搞个指标体系来量化一下的，比如家庭财务状况啥的……&lt;/p&gt;&lt;p&gt;咳咳……其实你们还是打算看在工作中如何搭指标体系的对吧，下一段就说回正题。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;如何搭建一个指标体系&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;我把搭建一个指标体系的过程总结成12个字：定目标，分指标，找数据，搭体系。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;定目标&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;这是第一步，也是最重要的一步(好像这句话我说过很多次了)，很多指标体系搭起来之后没办法持续应用，问题基本都出在这一步。&lt;/p&gt;&lt;p&gt;首先要明确，我们搭建一个指标体系的目的为何。通常来说，目标可能包括以下几类：&lt;/p&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;展现现有业务状况&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;寻找当前业务问题&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;预测业务的发展趋势&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;评估某个政策/措施/活动是否达到预期目标&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;找出下一步工作的方向&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;…………&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;具体目标可能会包含以上的一类或几类，需要根据目标来确定选择哪些指标。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;分指标&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;明确目标后，需要进行指标选择，从大量的指标中选出或造出可以用于达到目标的指标。&lt;/p&gt;&lt;p&gt;选择指标时，建议分以下三步：&lt;/p&gt;&lt;p&gt;首先，寻找已有的可直接用于满足目标的指标体系，如可以找到，则在上面进行小幅度的修改，以适应目标需求;&lt;/p&gt;&lt;p&gt;其次，如果无法找到直接可用的指标体系(实际操作中这种情况出现比率超过50%)，则参考相近指标体系，构建自己的指标。&lt;/p&gt;&lt;p&gt;最后，如果相近指标体系也没有(…………你在搞创新产品咩?带我一个)，就要深挖问题的根源，然后自己造指标。但现实生活中碰到这种事的几率实在太低了……&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;找数据&lt;/h3&gt;&lt;p&gt;指标定好之后，分类取数，利用数据来计算指标值。&lt;/p&gt;&lt;p&gt;数据来源无外乎以下几种：&lt;/p&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;自有产品/经营数据&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;政府/第三方公开数据&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;自行/委托第三方调研数据&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;购买数据&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;……&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;在此处需要注意，切忌从数据出发制造指标……&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;搭体系&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;搭体系这部分，简单来说就是：要给指标及指标的变动之间提供逻辑解释，要能够以单个或多个指标的组合来给出对现实情况的解释。&lt;/p&gt;&lt;p&gt;上边写了这么多，我估计很多同学没看懂，没关系，我们来举个例子：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;用户消费决策漏斗&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;多年以来，品牌营销人员通过“漏斗模型”来理解消费者决策过程——消费者从脑海中的几个潜在候选品牌开始(漏斗顶端)，然后在自上而下的决策过程中逐步削减品牌的数量，最后选定一个将要购买的品牌——并在漏斗的每个关键节点处对消费者进行单向推送式的营销活动。&lt;/p&gt;&lt;center style="color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibzpyGgaW8gibtWo2U3BCRc02Bwdib5fVZ4TQkUEBDSesk7cA3icRLywIIOkCnTOVEcn2BJREC7Bibl7vQ/0?wx_fmt=jpeg"/&gt;&lt;/center&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;这个漏斗是一个典型的指标体系，里边有两类指标：漏斗每个阶段的消费者数量，以及漏斗层与层之间的转化率。前者代表规模，后者代表效率，这样通过指标之前的组合，可以找到问题的解释。&lt;/p&gt;&lt;p&gt;例如，本月“购买数量”指标有下降且幅度较大，通过其他指标可进行如下分析：&lt;/p&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;是否从考虑到购买的转化率下降了?&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;如转化率不变，是否考虑的群体数量有所减少?原因是因为品牌认知到考虑的转化率下降，还是因为品牌认知的人数变少?&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;如果是因为品牌认知的人数变少，那么原因是什么?&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这样通过指标体系来分析问题，可以深挖问题的根源，避免头疼医头，脚疼医脚的情况。&lt;/p&gt;&lt;p&gt;End.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Wed, 28 Sep 2016 09:53:58 +0800</pubDate>
    </item>
    <item>
      <title>浦发银行金融大数据日志分析的实践情况</title>
      <link>http://www.iwgc.cn/link/2868349</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibzpyGgaW8gibtWo2U3BCRc02jYHFcWo6QAMQG63icy2ZicpRTEQibjJbBrBjRyBzcicQuGvIEl5m79BxwQ/0?wx_fmt=jpeg"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;银行运维人员往往要面对上百个系统、几千甚至上万台主机和设备，压力可以说非常大。那么，能否利用大数据技术预测评估系统问题，减轻银行运维人员的压力呢？ 高伟达软件股份有限公司联手永洪科技，为上海浦东发展银行（以下简称：浦发银行）做了一套大数据智能运维系统。高伟达大数据产品总监方长青以此为例，在永洪科技深圳大数据峰会上为我们介绍金融大数据日志分析的实践情况。&lt;/p&gt;&lt;p&gt;其实银行客户对大数据日志分析的需求还是很强烈的，但是目前市场上确实没有一个成熟的产品。高伟达联手永洪科技，刚给浦发银行做了一个项目落地，当然产品还不是很成熟。我简单地给大家分享一下。&lt;/p&gt;&lt;p&gt;银行IT运维人员遇到的压力。大家都知道，银行不管是主机、服务器还是各种系统都是非常庞大的，应该说是一个天文数字，光系统就有100多个，主机就不用说了，几千台，网络设备也是几千台甚至上万台，但是银行对于可靠性和性能要求非常高，迫切需要利用大数据分析技术，自动地发现一些问题，不要等到问题发生以后他们才知道系统出问题了，最好能提前预测出来。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;大数据运维体系的方法论。&lt;/strong&gt;也叫系统画像，大概分了7个主题，大家可以了解一下。不仅是银行，我相信其它行业只要有数据中心的，都涉及到运维管理的难点难题。这里面包括趋势告警、异常处理、业务洞察、应用分析、智能评估、基线管理、安全审计。趋势告警、异常处理、业务洞察、基线管理、应用分析我们做了一部分，智能评估和安全审计还没有，可能要到更高层次。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibzpyGgaW8gibtWo2U3BCRc02BHNuNdsbUwQDe0Sia5lydApiaAHAeqwTgZpRRqNQHTOaIGmO1PPgTG1g/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;大数据智能运维系统功能&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;有五大部分，第一是日志收集，我们要把各种各样的日志收集上来。第二部分是日志管理处理，第三是日志分析，包括日志的分类加工。第四部分是异常关联分析，第五是BI展现。其中，关联分析和BI展现都是基于永洪科技的产品实现的。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibzpyGgaW8gibtWo2U3BCRc02PQqh3RUNhjAbDtQvcmv2bUOYHWSlPhdT5pgicb7rl5kWepAtRvAkGFw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;以下我们讲一下日志数据采集模块：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1.做原始日志信息采集。&lt;/strong&gt;原始日志是什么意思？当我们的设备或者交易系统在运行的时候，会对运行情况和交易情况实时地产生大量的日志信息，这是我们做数据工作的基础，这也要进行采集。我们分了三部分：&lt;/p&gt;&lt;p&gt;第一采用代理，通过代理把发生的日志信息实时地采集出来。然后利用大数据的组件，把数据采集到服务器里面，最后进行处理。&lt;/p&gt;&lt;p&gt;第二用内存数据库，主要针对实时批量的查询，我们对于实时要求非常高。&lt;/p&gt;&lt;p&gt;第三提供一个Elasticsearch。它可以提供很方便的跨集群分布式的查询，你输入任意的关键字，它可以把海量的日志检索出来。&lt;/p&gt;&lt;p&gt;这里，我要补充说明的是，客户为了灵活使用，临时要求在展示端结合Elasticsearch功能，永洪科技的小伙伴也花了五天时间为我们开发了一个接口。所以，这也是高伟达选择与永洪科技合作的重要原因之一，永洪科技是一家本土公司，产品的代码是自主开发，一方面可以灵活定制，另一方面可以稳定维护，这对很多开源软件和国外产品来说很难同时做到这一步。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibzpyGgaW8gibtWo2U3BCRc02yT0JK73cBlxIOUNXAt0YrjicxylBLUDAR01GSkfsQybMsm6LZORGMkw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.银行的运维系统。&lt;/strong&gt;目前银行的运维系统起码有十几套的监控系统。比如ArcSight、Splunk、OVO、Netcool等比较典型的，但是实际上银行的系统不止这么多。每个系统要做一个标准的接口，实际上这是很难做的，老外的东西就是给你提供几篇英文文档，你自己写去吧。这个时候我们自己要开发一些接口，但是有些系统相对来说比较好一点，他给你一个数据库的接口，我们可以把日志采集出来。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibzpyGgaW8gibtWo2U3BCRc02tA2VTyuhBKLZg5SjZa6y9CTzmciaWzmDBhS7tiaw3qFxK7ssqE3NAjcg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;智能运维系统的的整体构架&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;其中，采集数据分成三大部分。&lt;/p&gt;&lt;p&gt;第一部分是实时采集，实时采集主要是到各个主要主机上布上采集点，我把它采集，采集完之后收集到大数据集群上进行分布式的存储。&lt;/p&gt;&lt;p&gt;第二部分是从各个监控系统上进行获取，当然这个也是实时的，可能这两个实时性不一样，这个能达到秒级，监控系统一般可能是5分钟的级别。&lt;/p&gt;&lt;p&gt;第三部分是历史数据，历史数据我们可以直接从历史数据库抽取过来。抽取过来以后，首先第一步是数据存储架构，比如非结构化数据，原始日志数据采集完之后要做一个结构化的处理，处理完放到SDFS上面，做一个实时的在线查询。中间还要经过一系列复杂的加工，加工完之后放到数据库里面。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibzpyGgaW8gibtWo2U3BCRc02SPu9mSpXvVHYfdDn6Nic3pVDxib6RIvhcvyONK4vPZpHwamJBtibrPxvw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;采集之后进行数据处理。&lt;/strong&gt;数据处理分实时和非实时、离线和非离线的。实时是加工处理完之后，我们立马通过报表工具展现出来。非实时进行一个离线加工，加工完之后也会把结果通过数据库收集起来。之后是分析建模，主要是机器学习探索，上层是BI展现，包括智能运维。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;几个典型应用场景给运维人员带来的用途&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;下面看一下我们做的几个比较系统比较典型的场景，它能给运维人员带来什么样的用途和价值。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;第一个场景，首页。&lt;/strong&gt;首页会进行一个指标推荐，运维人员可能压力非常大，银行里面涉及到100多个系统、几千台主机，按5个指标算也有上万个指标，运维人员一个主机一个主机地去查看，可能会看疯了也找不到问题。&lt;/p&gt;&lt;p&gt;我们的系统会对每个指标进行实时地监控，监控之后我们经过一个特殊的算法，根据系统、指标的重要性和指标的偏离度，把用户最关键的指标推荐到首页上去，用户进入系统以后就可以看到哪个系统有异常，可以看到变化趋势是怎么样的。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibzpyGgaW8gibtWo2U3BCRc02YQ5CWkcyCgl5mzE5ic6dfURGKjB4ulAKgkmEHCVricSUrbMlXORbfRxA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;第二个场景，指标波动分析。&lt;/strong&gt;要判断某一个指标正常还是不正常，我们原来各个运营中心有十几套监控系统，虽然监控得很细，但是报警系统有缺陷。比如设到80%进行报警，这里面有一个问题，不可能每个系统都到80%才报警，那时已经来不及了。这个时候运维人员需要知道，这一天主机历史CPU的运行趋势大概是什么样的，比如大概每天的运行趋势是20%到30%之间，今天突然一下升到50%，这也是明显的异常。运维人员就需要关注为什么出现这种异常，肯定是什么地方出现了问题，或者是其它主机出现问题，然后提前排查原因，不能等报警系统报警之后才进行关注。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibzpyGgaW8gibtWo2U3BCRc02sctttFia0qwgYXficeicVxBvMfnKd4qHDjzClbn4KDTL3sNv23k9ibGAHQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;（基于永洪BI产品做出的指标波动分析模型）&lt;/p&gt;&lt;p&gt;这时候我们要怎么做这个场景呢？首先要算出每个指标历史的基线，比如说算出历史一个周、一个月、一个季度甚至是一年的变化趋势。这个趋势不仅是一条线的，大家可以看一下有三条线：均线、上线、下线，当然涉及到各种各样的算法，然后再和实时的指标运行趋势进行一个比对。当它超过这个上下线的时候系统立马用黄色进行报警，严重超出历史基线值的时间，系统就进行报警，运维人员就可以对它进行强烈的关注。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;第三个场景，文件系统。&lt;/strong&gt;包括磁盘、CPU、交易量，实际上运维人员会定期对它进行关注。当我的存储要满了，达到80%了，就要进行扩容。但是不能等到存储满了以后再走采购流程，一个采购流程可能要走3个月，这就来不及了，所以运维人员需要提前预测一下。包括文件系统、CPU、主机都是这样的，需要提前进行预测。这时候我们需要拿出一部分历史数据，利用一些可能比较复杂的算法，比如时间序列、线性回归等等，算出来以后，我们可以预测出比如说未来一个月、三个月的值，这时候系统会告诉运维人员，磁盘未来一个月增长量是多少，未来三个月会达到什么程度，然后运维人员就可以提前进行准备工作。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;第四个场景，关联分析。&lt;/strong&gt;这里我们是结合了永洪的产品做的，可以把多个指标进行对比，然后进行关联分析。举一个例子，比如CPU和交易量的关系。正常情况它们应该是正相关的关系，比如说CPU上升的时候，交易量应该也是增加的。但是不排除有一些特殊情况，交易量上升的时候，CPU反而下降，这是异常情况，我们对比分析就会找出异常情况。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;第五个场景，故障分析与快速定位。&lt;/strong&gt;故障分析和快速定位也结合了永洪的产品，实际上这是运维用户最感兴趣的场景，也是通过日志分析的最终目标。不管是从关键字、场景分析还是数据库里面，我们在多种分析后进行检测，当发生故障时可以进行快速的故障定位。拿刚才的例子来说，当我们发现异常波动，达到红色警戒线以后，我们需要快速地去查找它到底出了什么问题，如果系统在红色故障时快速地把问题找出来，运维人员就可以缩小问题定位的范围。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibzpyGgaW8gibtWo2U3BCRc02cPNoEItx8u3Lc2qsl0b4qPr8aMicWGDu8evwIoWKscjtq3UwrNoAHUw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;（基于永洪BI产品做出的故障/异常日志定位分析）&lt;/p&gt;&lt;p&gt;&lt;strong&gt;第六个场景，系统临界值分析。&lt;/strong&gt;以前没有量化的分析，通过我们的系统可以抽取各种各样的指标、用户关心的指标，我们通过系统进行大数据分析以后，自动地生成一个值。比方说当这个值达到一定界限之后，可以提醒运维人员进行扩容等等，提前有备无患，这是运维人员比较关心的一个事情。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibzpyGgaW8gibtWo2U3BCRc02vQ7g82VkxUHKGa9n1ibrLQVO4fuPVby38UvW5kB4ojAciblP5UjgolWw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;第七个场景，日志信息快速查询。&lt;/strong&gt;这个功能非常实用，日志查询集成界面以后，因为系统涵盖所有的日志，我们原来查日志要进入到某个系统或者登录到某个主机上面去，现在通过大数据分析平台，我们可以登录到所有系统、主机、设备上，可以查询到各种各样的日志。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibzpyGgaW8gibtWo2U3BCRc02JZfwpGsfqJzV2DvK42ZC5XzQUzdU2M4ulX7lzFO6ha4ObwUGqzWH2A/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;（基于永洪的产品做的日志快速查询功能）&lt;/p&gt;&lt;p&gt;最后总结一下，大数据对IT运维带来的实际价值，分为五大部分：预测故障、发现异常、查找问题、分析性能、优化策略。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibzpyGgaW8gibtWo2U3BCRc02GZribSeI8xAr4xtCia8DehvicjGoaQlWLl5UG8TO0iatkXWlNEgYfic0Enw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;End.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Wed, 28 Sep 2016 09:53:58 +0800</pubDate>
    </item>
    <item>
      <title>百度数据众包平台上线 专注数据源加工与定制</title>
      <link>http://www.iwgc.cn/link/2853025</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArsaMTyzuWh6RcFvNzXIzoZnq14CD5jicFibibqiaE8fYAModGHKd3aicZrTA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;文|&amp;nbsp;以墨茄data&lt;/strong&gt;&amp;nbsp;(任何不表明作者和来源36大数据的转载均为侵权。）&lt;/p&gt;&lt;p&gt;目前市场上专注于数据交易的大数据厂商有很多，每家都有每家的特点。近期我们发现百度数据众包也在买36大数据的关键字，这也引起了我们的关注。通过这篇文章，我们来解析下百度数据众包。&lt;/p&gt;&lt;p&gt;通过我们的调研发现，数据交易厂商聚合数据着重于API的提供，也就是说，聚合数据主要的业务为数据接口，而提供的数据源是流动的数据（数据流）。数据堂着重于数据的粗加工，相当于把数据小麦变成数据面粉的过程。百度数据众包着重于数据的采集与标注，把数据采集过程进行众包任务完成。粗粗的比较起来，数据堂，聚合数据和百度数据众包，从实际业务和商业模式上来都各有千秋，也有自己独到的地方。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;百度数据众包的优势：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;一、 从人才上说，百度拥有&lt;span&gt;&lt;strong&gt;自有底层数据建设团队&lt;/strong&gt;&lt;/span&gt;。数据众包平台拥有日均5000名标注人员，与日均3000名数据采集员，可以及时高效地采集与标注数据。另外，百度其他平台（如百度统计、百度数说、百度站长）也积累了大量拥有数据采集技术和能力的人才，这些人才可以自发的去完成百度数据众包上面的任务。&lt;/p&gt;&lt;p&gt;二、从数据量和数据源来说， 百度数据众包平台作为百度旗下的一个分支，其自身&lt;strong&gt;&lt;span&gt;拥有&lt;/span&gt;&lt;/strong&gt;百度的&lt;span&gt;&lt;strong&gt;海量数据&lt;/strong&gt;&lt;/span&gt;。&lt;/p&gt;&lt;p&gt;三、从运营经验和客户积累角度来说，百度本身就拥有大量的中小型企业客户，百度对于服务2B客户方面经验丰富，所以，百度数据众包平台&lt;span&gt;&lt;strong&gt;更易找到用户和客户&lt;/strong&gt;&lt;/span&gt;。众包平台已为包括百度深度研院、自然语言处理部、大数据部、语音、糯米等多个产品提供数据服务，在&lt;span&gt;&lt;strong&gt;数据服务方面经验丰富&lt;/strong&gt;&lt;/span&gt;。&lt;/p&gt;&lt;p&gt;所以，基于人才、数据源和运营经验三个角度，我们本身是比较看好百度数据众包服务的。下面，小编就从各方搜罗了资料，让大家从这一篇文章中，了解什么是百度众包、百度众包能做什么以及百度众包能给我们带来什么。&lt;/p&gt;&lt;p&gt;首先了解下百度众包平台的概念&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAru13vguGMWz8bBHTFRFMiaU9s2JiaIZaZXscqLBJqD4PxeqPhvhQARUsA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;那么&lt;/p&gt;&lt;h2 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;百度数据众包平台是什么？&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;从宏观来讲，平台是针对于用户所需数据，对数据进行采集、处理与分析，让大数据变成有效数据、高质量数据。&lt;/p&gt;&lt;p&gt;从功能来讲，平台提供数据制作、数据采集与数据标注。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;数据制作&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArXic5TszExxBSAXY0Om1kYWH2BwfWV0B4QfEtdtmSne8iaF4GQSFXJUwg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;数据采集&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;数据标注&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArK157vMIZIXgLz995RQGNy0e3OfTpgkxhWyDqq02szon9LvSeiabISrQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;从以上案例，我们可以看出平台提供以下服务：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArX924YSPSn3e8XMzQ8ibjDVIds9Ul0X6ibCzWFZ06dibSFrGOibWoF73ia5g/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h2 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;服务内容&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1）数据分类/清洗：&lt;/strong&gt;数据主观分类标注，文本图片标签化，文本校验标注，语音内容清洗，垃圾流量；&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2）数据校验/评估：&lt;/strong&gt;数据质量评估&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3）数据内容提取：&lt;/strong&gt;图片内容提取（框标注），网页摘要撰写，文本关键词提取，图片关键词提取，语音文本化；&lt;/p&gt;&lt;p&gt;&lt;strong&gt;4）数据采集/录制：&lt;/strong&gt;特定语音采集（含方言），实体图片采集，视频（如航拍）采集，O2O门店信息采集，LBS类型数据采集。&lt;/p&gt;&lt;p&gt;基于百度数据众包提供的服务，那么我们来比较一下百度数据众包与数据堂和聚合数据的区别&lt;/p&gt;&lt;h2 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;百度数据众包 vs 数据堂 vs 聚合数据&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;1.基于数据的定位&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;百度数据众包：&lt;/strong&gt;数据制作、采集、标注一站完成&lt;/p&gt;&lt;p&gt;&lt;strong&gt;数据堂：&lt;/strong&gt;大数据共享交易平台&lt;/p&gt;&lt;p&gt;&lt;strong&gt;聚合数据：&lt;/strong&gt;数据银行&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;2.提供服务&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;百度数据众包：&lt;/strong&gt;强调数据的分析与处理，标签化&lt;/p&gt;&lt;p&gt;&lt;strong&gt;数据堂：&lt;/strong&gt;主要提供数据交易，自身有数据。强调数据交易与API&lt;/p&gt;&lt;p&gt;&lt;strong&gt;聚合数据：&lt;/strong&gt;是一个为智能手机开发者，网站站长，移动设备开发人员及图商提供原始数据API服务的综合性云数据平台。强调API和基于营销的营销方案&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;3.数据价格&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;百度数据众包&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;文本标注成本约为0.05~0.2元/条，图片标注成本约为0.5元/100张&lt;/p&gt;&lt;p&gt;&lt;strong&gt;数据堂&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArico0mOeaF7ibNDkicIjaQwpdCjFI1bUicp2u5c4zDxZQx10AsPfxvvHlLQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;聚合数据&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArtuU51FgWt4yCd2RFgE2oPHcuoa7frFun6hjbZiasfnDEzuSXmCZwGMw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;由以上可以看出，数据堂与聚合数据主要为用户提供数据采购平台，百度数据众包平台不仅为用户提供数据平台，还为用户提供数据处理、标签平台。&lt;/p&gt;&lt;h2 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;众包用户&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;百度众包有许多用户，包括百度深度研院、自然语言处理部、大数据部、语音、糯米等多个产品，运用众包平台让大数据变成有效数据、高质量数据。&lt;/p&gt;&lt;p&gt;所以可以看来那些对外部数据有需求，尤其是非结构化的数据，需要数据采集、数据处理、标签化，并基于海量数据的外部与内部的数据融合与处理的企业，都是百度数据众包的潜在用户。&lt;/p&gt;&lt;p&gt;那么当你需要百度数据众包的服务时，应该怎样联系或者使用呢，别着急，我们接下来就讲下，在平台上的这些服务与功能，怎样去申请使用。&lt;/p&gt;&lt;p&gt;首先了解在百度众包平台，想要服务，需要哪些必要步骤&lt;/p&gt;&lt;h2 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;众包平台使用步骤&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;1）需求洽谈&lt;/p&gt;&lt;p&gt;填写个人信息及需求，项目专员将迅速与您联系&lt;/p&gt;&lt;p&gt;2）定制化标注采集&lt;/p&gt;&lt;p&gt;根据您的需求，定制高效快速标注采集方案&lt;/p&gt;&lt;p&gt;3）实时审核监控&lt;/p&gt;&lt;p&gt;标注采集开展期间，您可在平台实时监控、审核数据质量&lt;/p&gt;&lt;p&gt;4）交付数据&lt;/p&gt;&lt;p&gt;按照您的需求，交付高质量的数据&lt;/p&gt;&lt;p&gt;在百度数据众包平台中，提供&lt;span&gt;&lt;strong&gt;两种服务模式&lt;/strong&gt;&lt;/span&gt;，一种是自助服务，一种是定制服务。&lt;/p&gt;&lt;h3 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;数据处理–自助服务&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArHcmOjdJ0KvmT1urrfIy1odrol7M6PxEBg94ft7wsQdgy4TWBrQ8wMw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;自助服务类型&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArFspmLdKuZKBkGHoTEwcxibzicSFsResYpCw9b28k3G8WnFeTyulcyRqA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;其中自助服务包括文本处理、图片处理、语音处理及网页处理&lt;/p&gt;&lt;p&gt;文本处理：文本归类、文本提取、文本校正&lt;/p&gt;&lt;p&gt;图片处理：图片归类、图片标签化、图片内容标记、图片采集&lt;/p&gt;&lt;p&gt;语音处理：语音内容提取、语音筛选、预料采集&lt;/p&gt;&lt;p&gt;网页处理：有效网页筛选&lt;/p&gt;&lt;p&gt;如果以上自出数据处理服务不能够帮助解决到你的问题，那么可以选择定制服务。&lt;/p&gt;&lt;h3 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;数据处理—定制服务&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;选择需要定制的服务类型&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArbPxueLPibRAI3msRTP8tIGgicJIANHAFx2E3AIBBEy9SEdy2nkJjzZLA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;其中，定制服务类型支持对文本数据、图片数据、语音视频数据、网页数据、O2O|LBS数据的处理&lt;/p&gt;&lt;p&gt;文本支持处理类型：标注、提取、校验&lt;/p&gt;&lt;p&gt;图片：筛选、内容提取、采集&lt;/p&gt;&lt;p&gt;语音视频：采集、清洗、文本化&lt;/p&gt;&lt;p&gt;网页：对比、清洗&lt;/p&gt;&lt;p&gt;O2O|LBS：O2O信息采集/清洗、POI及AOI挂接&lt;/p&gt;&lt;p&gt;确认好需要的服务后，进行&lt;span&gt;&lt;strong&gt;申请提交&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAr3ohXTjok8OooS2f1qfqd2h75772r0AYJvQV7Cjoqh21GeUoelWWOZQ/0?wx_fmt=jpeg"/&gt;&lt;br/&gt;那么，你用百度数据众包平台之前，是否还想了解下数据质量的问题？&lt;/p&gt;&lt;h2 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;数据质量&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;百度数据众包通过以下几项来保证数据质量。&lt;/p&gt;&lt;p&gt;1）通过专业的标注采集平台支持定制化开发，保证用户数据采集质量。&lt;/p&gt;&lt;p&gt;2）数量庞大的高质量标注采集用户&lt;/p&gt;&lt;p&gt;3）专业项目人员策划方案、实时跟进&lt;/p&gt;&lt;p&gt;4）多重审核机制保障数据高质量&lt;/p&gt;&lt;h2 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;百度大数据+之百度数据众包平台&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;众所周知，百度是应用大数据最早的企业之一，早在20014年4月，百度在第四届“技能敞开日”上就提到要将其大数据才能敞开给社会。百度于2015年推出百度大数据+，旨在面向行业诉求，开放百度大数据核心能力，基于百度海量用户数据，实现行业趋势洞察，客群精准触达，科学营销决策，风险危机防控等核心价值，助力行业实现大数据应用的落地和突破。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArg5ejOlDG6icbJ7dAaAYcmkEbK3t3jnm4HTGqMuW2QQY9gib5yXX1plmw/0?wx_fmt=jpeg"/&gt;&lt;br/&gt;百度数据众包平台在百度大数据中占据举足轻重的位置，相当于上图的数据融合层。数据众包平台为百度大数据提供数据支撑。&lt;/p&gt;&lt;p&gt;以上是百度数据众包平台的基本简介。大家是否有了基本的概念呢？希望有数据采集与数据标注需求的小伙伴去申请试用，也欢迎大家向我们反馈试用结果。各位小伙伴如果还有不了解的地方，同时也欢迎大家留言交流。&lt;/p&gt;&lt;p&gt;百度数据众包平台地址：http://zhongbao.baidu.com/&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Tue, 27 Sep 2016 09:15:16 +0800</pubDate>
    </item>
    <item>
      <title>【美股】国双登陆纳斯达克国内大数据赴美上市第一股诞生！</title>
      <link>http://www.iwgc.cn/link/2853026</link>
      <description>&lt;p&gt;国内大数据赴美上市第一股诞生！&lt;a target="_blank"&gt;美国&lt;/a&gt;当地时间9月23日，北京国双科技有限&lt;a target="_blank"&gt;公司&lt;/a&gt;（简称国双）将登陆&lt;a target="_blank"&gt;纳斯达克&lt;/a&gt;，&lt;a&gt;股票&lt;/a&gt;代码：GSUM，发行价：10.5-12.5&lt;a target="_blank"&gt;美元&lt;/a&gt;。&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;国双到底有多牛？&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;国双是基于云计算和大数据技术的商业智能解决方案提供商，为18个行业600多家知名客户及品牌提供服务。核心业务覆盖商业企业、政府、新&lt;a target="_blank"&gt;媒体&lt;/a&gt;三大领域。&lt;br/&gt;&lt;br/&gt;包括微软、HP、可口可乐、欧莱雅、宝洁、大众、希尔顿、&lt;a target="_blank"&gt;中国&lt;/a&gt;银联、中国移动、中国联通、京东、腾讯、百度等，遍布18个行业600多家国内外知名客户及品牌，都曾是国双的客户，国双为客户提供全流程数字营销技术和服务。&lt;br/&gt;&lt;br/&gt;在政府市场，2012年与国家信息中心联合成立网络政府研究中心，迄今已为全国3000多家政府机构提供大数据分析服务，这其中就包括“中华人民共和国中央人民政府门户网站”(www.GOV.cn)在内；在新媒体领域，与江苏网络电视台、湖南卫视、浙江卫视等20多家省级电视台和网络电视台建立合作，为其提供全媒体大数据分析，热播的《爸爸去哪儿》、《对话》、《中国好声音》中都有国双的技术支持。&lt;br/&gt;&lt;br/&gt;该公司资料显示，经过10年的成长，公司在2015年第四季度实现运营层面盈利，2013年到2015年的净收入复合增长率达到94％，毛利率增长至86％；2016年上半年的研发支出占收入的41％，而收入成长保持在75％。2013年到2016年间，公司申请的发明专利数量超过1200件，是一家典型的高成长科技企业。&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;美国&lt;a target="_blank"&gt;股市&lt;/a&gt;青睐高科技企业&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;近几年，越来越多的中国企业选择在美国上市，尤其是国内&lt;a target="_blank"&gt;互联网&lt;/a&gt;企业对赴美上市偏爱有加；另一方面，海外资本也希望通过投资来赢取中国经济增长与转型所带来的红利。&lt;br/&gt;&lt;br/&gt;对于中国的大多数互联网企业来说，初期基本都处于亏损状态，而美国市场青睐高科技企业，对于企业盈利方面没有硬性要求，因此纳斯达克和纽交所成为优先选择。&lt;/p&gt;</description>
      <pubDate>Tue, 27 Sep 2016 09:15:16 +0800</pubDate>
    </item>
    <item>
      <title>利用众包模式建立智能交通的大数据</title>
      <link>http://www.iwgc.cn/link/2853027</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArciaMYqcdiasUSKGBtyzRmqw4bVDdjD8omVZH4S3Q5LSHQyIznyyfIwCA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;利用汽车电子系统和公路摄像头采集到的数据完成大数据的建立。这种众包模式进行数据收集的方式既能完成大量数据的精确收集，又解决了数据收集成本过高的问题。数据收集完成后将孤立数据进行相互链接和共享，将数据进行社会化从而建立真正的大数据。数据中心利用收集到的大数据进行数据分析和挖掘，从而对交通进行智能调度、监控和管理。&lt;/p&gt;&lt;h2 style=" font-size: 18px; margin-top: 16px; margin-bottom: 16px; padding-top: 10px; padding-bottom: 10px; line-height: 18px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); color: rgb(68, 68, 68) ; ;; white-space: normal; "&gt;&lt;span&gt;&lt;strong&gt;1.概述&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;互联网已经进入大数据时代，物联网的发展，尤其是智能交通的发展也需要建立在大量数据基础上。大量、准确、实时的交通数据是智能交通发展的基础。&lt;/p&gt;&lt;p&gt;要形成巨量的数据规模不但需要采集新的数据，而且需要将已有的数据进行联网和共享。将以前孤立的数据相互连接起来才能更加准确的反映真实的交通情况。我们将孤立数据的共享称为数据的社会化，以前的数据都是为孤立的个体服务，如果将每个个体的孤立数据相连接、相共享，那么这些孤立数据就成为社会化的数据，成为可以反映社会现实的数据，我们将其称为数据的社会化。社会化的数据不是将孤立数据进行叠加，而是可以对其进行数据分析和挖掘，发现社会运行规律，从而可以为社会更好的发展提供指导。&lt;/p&gt;&lt;p&gt;怎样低成本的获取大量交通数据成为制约智能交通发展的一大瓶颈。我们提出众包模式来进行数据采集，就像维基百科一样，利用巨量用户来完成信息的收集。对于智能交通，我们可以利用行驶的每一辆车、公路上的每一个摄像头来完成数据的收集。这就需要移动互联网技术将车辆的数据进行连接，利用模式识别技术对摄像头所拍摄的图像中的信息数据进行提出。&lt;/p&gt;&lt;h2 style=" font-size: 18px; margin-top: 16px; margin-bottom: 16px; padding-top: 10px; padding-bottom: 10px; line-height: 18px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); color: rgb(68, 68, 68) ; ;; white-space: normal; "&gt;&lt;span&gt;&lt;strong&gt;2.城市交通存在的问题&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;城市交通是城市最基础也是最重要的组成部分，与人们生活息息相关。城市交通是城市经济发展的命脉，城市交通在整个社会机制中起着非常重要的纽带作用。随着全球经济发展，城市化进程不断推进，全球出现了众多的超大型城市，比如，纽约、伦敦，以及发展中国家的北京、孟买、墨西哥城等。&lt;br/&gt;随着社会发展，城市规模不断扩大，城市人口呈爆炸式发展，城市的交通状况每况愈下，交通拥堵问题成为制约城市发展的一大瓶颈。&lt;br/&gt;交通拥堵问题造成以下四大弊端：&lt;/p&gt;&lt;p&gt;（1）给人们的生活、工作带来诸多不便，城市居民花在路上的时间越来越多，造成时间大量浪费。根据英国咨询公司雷格斯2010年的一项调查结果显示，北京平均上下班路上时间为52分钟，上海47分钟，深圳46分钟。城市拥堵问题严重的浪费了城市居民的时间，造成巨大的时间浪费，也造成巨大的间接性经济损失。&lt;/p&gt;&lt;p&gt;（2）城市交通拥堵问题还使人们时刻处于一种烦躁、焦虑中。非常多的城市居民患有拥堵焦虑症，严重的影响了城市居民生活。&lt;/p&gt;&lt;p&gt;（3）交通拥堵问题造成巨大的环境污染，汽车排放的大量尾气使城市环境问题更加恶劣。北京雾霾天气频频出现，空气质量频频爆表，主要是由于汽车尾气造成的。&lt;/p&gt;&lt;p&gt;（4）交通拥堵问题造成能源的大量浪费，汽车平均每日花在路上的时间增加，从而使汽车耗油量增加，大大浪费了日益紧缺的能源。&lt;/p&gt;&lt;p&gt;为了治理城市的拥堵问题，各方机构学者纷纷出谋划策，提出很多方案来解决这一世界难题。比如，单双号限行，摇号购车等等，这些政策性的行政手段并没有解决问题，而且引来诸多非议，也对其他行业造成不良影响，这些解决方案都是治标不治本。&lt;/p&gt;&lt;h2 style=" font-size: 18px; margin-top: 16px; margin-bottom: 16px; padding-top: 10px; padding-bottom: 10px; line-height: 18px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); color: rgb(68, 68, 68) ; ;; white-space: normal; "&gt;&lt;span&gt;&lt;strong&gt;3.智能交通发展现状&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;为了从根本上解决城市交通拥堵问题，各国纷纷提出智能交通的发展计划，希望利用智能交通来解决城市的交通问题。&lt;/p&gt;&lt;p&gt;自从美国第一个开始智能交通体系研究以来，日本、欧盟、澳大利亚等国家和地区相继开展了智能交通系统规划、研究及应用。各国政府、各投资主体和系统用户逐渐认识到ITS在缓解城市交通拥堵中所起到的重要作用。下面介绍国外ITS的规划发展情况。&lt;/p&gt;&lt;p&gt;美国：美国运输部于1989 年颁布了《运输部信息资源管理手册》，用于支持运输部各信息系统运转的信息资源统一规划。该《手册》具有很强的权威性和法律效用，对统一和规范运输部的信息化行为，确保信息化目标的实现具有积极的促进和保证作用。目前，美国已经建立了完善的ITS体系结构，其由出行及交通管理、公共交通运营、电子付费服务、商用车辆营运、应急管理、先进的车辆控制与安全系统等七大系统构成。&lt;/p&gt;&lt;p&gt;日本：日本的ITS应用主要是在交通信息提供、电子收费、公共交通、商业车辆管理以及紧急车辆优先等方面。由日本警察厅主持开发的“21世纪交通管理系统UTMS21”是日本ITS的主要组成部分之一。它是由智能交通控制系统和8个子系统组成。智能交通控制系统是UTMS21的核心，它是利用红外车辆检测装置与车辆进行双向通信、高速图像处理，以实现实时信号最佳控制和信息服务。八个子系统分别为：（1）先进的车辆信息系统（2）公交优先系统（3）车辆运行管理系统（4）动态路线诱导系统（5） 紧急救援与公众安全系统（6）环境保护管理系统（7）安全驾驶支持系统（8）智能图像处理系统。&lt;br/&gt;欧盟：欧盟也很重视ITS发展，将其作为欧盟项目，从全欧的角度进行规划和协调，制定统一的框架结构，作为各成员国ITS发展的基础和指导。欧洲重要的ITS发展几乎均需得到欧盟理事会的批准，纳入高层次的经济和社会发展计划，提供财政支持，保证经费供给。为了推进ITS的发展，欧盟国家推出的项目主要有1970-1985年的COST30（Cooperation in the field of Scientific and Technical Research, 科学技术领域研究协作），该项目主要针对车辆、道路与驾驶员的通讯技术进行研究。&lt;/p&gt;&lt;p&gt;澳大利亚：澳大利亚运输与地区服务部(DoTRS) 在交通信息化方面最重要的举措是制定《联机行动计划》，将业务工作通过网络来实现。运输与地区服务部为澳大利亚提供更好的运输系统，以帮助政府实现其在运输与地区服务中的政策目标，并为内阁部长和会议提供政策建议，还提供行政管理、研究、规章、调查、安全、补助与领地的服务。&lt;/p&gt;&lt;h2 style=" font-size: 18px; margin-top: 16px; margin-bottom: 16px; padding-top: 10px; padding-bottom: 10px; line-height: 18px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); color: rgb(68, 68, 68) ; ;; white-space: normal; "&gt;&lt;span&gt;&lt;strong&gt;4.智能交通发展存在的问题&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;智能交通承载着人们从根本上解决交通拥堵问题的梦想，但是智能交通由于成本投入巨大，产业链过长，建设周期过长等原因，并没有在解决城市交通拥堵问题上取得实质性的进展，人们依然生活拥堵、焦虑、污染严重的环境中。&lt;br/&gt;现有的智能交通发展存在如下几点问题：&lt;/p&gt;&lt;p&gt;（1）产业链过长，利益相关方过多，协调难度大。智能交通涉及道路管理部门、交通管理部门、公共交通运营商、汽车生产商、车主等利益相关方，他们各自的诉求难以统一，协调难度巨大。所以，现在的智能交通大多由政府牵头发起，这也从侧面说明协调难度大。虽然，政府主导智能交通建设，但是，各利益相关方在标准上难以达成统一，限制了智能交通的发展。&lt;/p&gt;&lt;p&gt;（2）系统复杂，建设周期过长。智能交通由于其复杂性，以及各方难以统一标准，建设周期太长，各国在上世界80年代开始智能交通研究，直至今天也没解决交通拥堵问题。&lt;/p&gt;&lt;p&gt;（3）成本巨大，现在的智能交通方案由于过于庞大，过于复杂，造成成本巨大，经济可行性不高。&lt;/p&gt;&lt;p&gt;（4）对交通数据的采集问题难以解决，采集大量交通数据这是智能交通的先决条件。要想采集大量车辆的行驶数据，在每个车辆上加装专用设备或者在道路上安装大量传感器，我们不考虑传感器的可操作性及精确度，单是基于成本考虑，这种方案的可行性就比较低。&lt;/p&gt;&lt;h2 style=" font-size: 18px; margin-top: 16px; margin-bottom: 16px; padding-top: 10px; padding-bottom: 10px; line-height: 18px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); color: rgb(68, 68, 68) ; ;; white-space: normal; "&gt;&lt;span&gt;&lt;strong&gt;5.大数据的形成&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;为了促进智能交通的发展，提高智能交通的可行性，必须将智能交通推入大数据时代，必须解决如何低成本建立大数据的问题。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;5.1基于众包模式的数据采集&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;为了解决现有智能交通数据采集方案可操作性过低的问题，提出基于众包模式的数据采集方案。将数据采集的任务交给汽车和公路上的摄像头。&lt;br/&gt;汽车本身具备一个完整的电子系统，这个电子系统收集了发动机、底盘、车速、胎压等各项数据。将汽车电子系统收集到的汽车行驶数据通过移动互联网传输至数据中心，从而完成交通数据的收集问题。&lt;/p&gt;&lt;p&gt;目前，各城市的公路上已经安装了大量的摄像头，可以利用已安装的摄像头并结合模式识别技术，将摄像头图像中的车辆信息提取出来。从而实现对车辆的监控、管理等功能。&lt;/p&gt;&lt;p&gt;这种基于众包模式的数据收集方式不仅解决了数据收集问题，而且数据收集成本非常低。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;5.2 数据的社会化&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;汽车电子系统的数据仅供汽车本身使用，这些数据是封闭的。封闭的数据是难以产生效用的。封闭的数据就像信息孤岛一样，不能进行数据分析和数据挖掘。只有这些数据相互连接、相互共享，这些数据才能反映一个真实的社会。&lt;/p&gt;&lt;p&gt;社会化的数据不是将孤立数据进行叠加，而是可以对其进行数据分析和挖掘，发现社会运行规律，从而可以为社会更好的发展提供指导。所以，汽车的行驶数据进行社会化，对于智能交通具有重要的意义。&lt;/p&gt;&lt;h2 style=" font-size: 18px; margin-top: 16px; margin-bottom: 16px; padding-top: 10px; padding-bottom: 10px; line-height: 18px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); color: rgb(68, 68, 68) ; ;; white-space: normal; "&gt;&lt;span&gt;&lt;strong&gt;6.技术方案&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;技术方案主要包括四部分：汽车电子系统与智能手机接口、智能手机、摄像头、数据中心，如下图。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAr6PQMXfcA4HFLERkD8XIicmQpy6nvDjOmKEcygQicATOWUfc2E0eibGBuA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;图1 结构图&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;汽车电子系统与智能手机接口：为了实现汽车电子系统与智能手机的通信，必须设置一个接口，针对不同的汽车特点，接口设置方式不同，比如蓝牙方式、数据线连接等。这个可以实现将汽车行驶数据传输给智能手机。为了汽车电子系统的安全性，数据传输方式限制为单向传输，只允许将数据由汽车电子系统传输至智能手机，反向传输则为禁止的。&lt;/p&gt;&lt;p&gt;智能手机：一方面接受来自汽车电子系统传输来的数据，一方面利用手机自带的传感器，采集行驶数据，比如定位数据等。将两方面的数据汇总后通过移动互联网传输至数据中心。同时，接受来自数据中心的数据，并将其显示在屏幕上，或者采用语音方式进行提醒。&lt;/p&gt;&lt;p&gt;摄像头：主要是分布在城市公路上的各个摄像头，摄像头将拍摄到的图像传输给数据中心。&lt;/p&gt;&lt;p&gt;数据中心：接受来自大量智能手机和摄像头传输来的数据，并进行数据分析和数据挖掘，并根据数据挖掘结果进行车辆监控、管理、收费以及行车路线建议等功能。&lt;/p&gt;&lt;h2 style=" font-size: 18px; margin-top: 16px; margin-bottom: 16px; padding-top: 10px; padding-bottom: 10px; line-height: 18px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); color: rgb(68, 68, 68) ; ;; white-space: normal; "&gt;&lt;span&gt;&lt;strong&gt;7.应用示例&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;下面提出两个具体应用示例来阐述大数据在智能交通中的具体应用。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;7.1 根据交通拥堵情况进行车辆最优路线导航&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;利用数据中心采集到的大量车辆的定位和车速数据，从而分析出某一路段的交通拥堵情况。并反馈给各手机终端，并结合车主目的地信息给出最佳路线，引导车主以最少时间到达目的地。&lt;/p&gt;&lt;p&gt;在本示例中各部分功能：&lt;/p&gt;&lt;p&gt;汽车电子系统与智能手机接口：将车速数据通过蓝牙或数据线发送给手机终端。&lt;/p&gt;&lt;p&gt;智能手机：利用GPS功能完成车辆定位，并将位置和速度信息发送至数据中心。同时，接受来自数据中心关于交通拥堵情况的信息以及数据中心给出的建议行车路线，并实时显示在手机屏幕上。&lt;/p&gt;&lt;p&gt;数据中心：收集大量手机发送来的定位和速度数据，根据同一路段的大量车速数据分析此路段的拥堵情况，并实时将拥堵情况发送至智能手机上。同时，数据中心会根据目的地和拥堵情况给出建议行车路线，使用户可以以最短的时间到达目的地。&lt;/p&gt;&lt;p&gt;此系统的特点是：使用的用户越多，对拥堵程度的判断就越准确。&lt;/p&gt;&lt;p&gt;此系统的初级阶段（少部分车辆使用此系统）：根据各路段交通拥堵情况，给出最优路线。由于某路段交通畅通，大家得到消息后，可能会出现大量车辆涌向此路段，反而造成交通拥堵的情况。&lt;/p&gt;&lt;p&gt;此系统的终极阶段（大部分车辆使用此系统）：如果大部分车辆使用此系统，数据中心可以根据各路段的车容量给所有在路上行驶的车辆进行路线规划，从而避免出现大量车辆涌向同一路段的情况。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;7.2 利用车牌识别进行车辆出入管理和收费&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;利用居民小区、停车场、高速公路的出入口的摄像头，并结合车牌识别技术，实现对车辆身份的识别，从而进行车辆出入管理、停车场收费、公路收费等功能。&lt;/p&gt;&lt;p&gt;在本示例中各部分功能：&lt;/p&gt;&lt;p&gt;摄像头：当车辆出入时拍摄图像，并将图像传输至数据中心。&lt;/p&gt;&lt;p&gt;数据中心：对各摄像头传输来的图像进行处理，识别车辆身份，并结合出入卡口及计费系统进行出入管理和收费。&lt;/p&gt;&lt;p&gt;此系统的优势：对于小区、写字楼的车辆出入管理，无需车主办理门禁卡，只需要将车牌信息在系统登记即可，既不需要停车刷卡，也不需要办理门禁卡，既方便，又节省成本。对于收费停车场、收费公路，进入时无需取卡，非常快捷方便。相较于ETC系统，无需车主购买车载ETC设备，大大节省成本。&lt;/p&gt;&lt;h2 style=" font-size: 18px; margin-top: 16px; margin-bottom: 16px; padding-top: 10px; padding-bottom: 10px; line-height: 18px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); color: rgb(68, 68, 68) ; ;; white-space: normal; "&gt;&lt;span&gt;&lt;strong&gt;8.总结与展望&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;利用汽车电子系统和公路摄像头采集到的数据完成大数据的建立。利用这种众包模式进行数据收集既能完成大量数据的精确收集，同时，又解决了数据收集成本过高的问题。&lt;/p&gt;&lt;p&gt;数据收集完成后要打破孤立数据之间的藩篱，将数据进行社会化从而建立真正的大数据，将智能交通也推进入大数据时代。&lt;/p&gt;&lt;p&gt;利用收集到的大数据进行数据分析和挖掘，从而对交通进行智能调度、监控和管理。&lt;/p&gt;&lt;p&gt;随着物联网技术的发展，智能交通也将迎来突飞猛进发展。21世纪将是公路交通智能化的世纪，在智能交通系统中，数据中心收集来自各个终端的数据，并对数据进行分析和挖掘，从而将道路交通流量调整至最佳状态，使城市交通更加高效、有序的进行，进而从根本上解决城市交通的拥堵问题。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;End.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Tue, 27 Sep 2016 09:15:16 +0800</pubDate>
    </item>
    <item>
      <title>Python语法总结</title>
      <link>http://www.iwgc.cn/link/2839712</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArjVTTcLjvDpXpIYTrjhMSryYT6VF582o18JjFpZtHuHPSh71iaqDqpdw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;作者：_赖笔小新&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;简单输入输出&lt;/strong&gt;&lt;/h3&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;输出 &amp;nbsp; print 10 , '十'&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;输入 &amp;nbsp; name = raw_input()&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;python基础&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;数据类型和变量&lt;/span&gt;&lt;br/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArH1rpkMiaGT5bXlntenvL4382Fibq9gcZ78cX8WvYMiceKejSxwiawPPGicA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;字符串和编码&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAr2OuqM4wD4pvwXqd8ezNPMVhOMg7KIxGzCGhUzzqMpg0XZnWgBZQuRQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用list和tuple&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAriceeC3o1yoo8SRSvsN1OZ7iaN3hEjuu7iaqibgugR0ZkZmQAtgk7TQDfaA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;条件判断和循环&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArtS0Tg8ZuFtnPF4OrzX7ia8kO0P5AcTYw8kj2m79ibCVHTfhkibHsmU3xw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用dict和set&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArE7vrQlhmibZJe50fM4O3G6AaicwvxMzZO4s2zBjZDdODteCNAxXOR8OA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;函数&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;定义函数&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArqagEXdPAJZ9FXk8PfMebQnwOyrutTIR1Jxq43xTMGIIyEjes2fgAVQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;br/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;高级特性&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;切片&lt;/span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAricqWYIj61QXPZBBgXicmb9iacUcU9JlS7GricgqGFcu3nb3VfF0Fcffywg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;迭代&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArJhmaerlq2kF8Kpia8GGWqwa11E10sE78TtH7fqwTAvxIibCVIIE3s6mw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;列表生成器&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAr0ictI5xzHXrOxWvc16fSb6ITDVu8m1aqkXnvmvphicvcm1vM4bPRa8Qg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;生成器&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArKWa2yt4xosmaMjCTE54Q8yDXoO7GkONuVXL5amv2edqrgjYVz3XTMQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;函数式编程&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;高阶函数&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArD8L0QVEibNZq6elMkbicsmsWf2fQy1Lu6Xg3pebX4P66BgSTdp5AxDQQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;返回函数&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArGoPRx6RlIfC4w2ib9O6t314I4u8OhwQicd36Qt80BG2icEic2y6KPSCibfQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;匿名函数&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArjg1kJSOA1myuBwPqjeMI3vYwWsxkXNob6bPv2kM7bKNUPnxRPgGujg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;装饰器&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAr8B3Na6NiaWjHxEGZ63GgrORHy1RI8tbSZduupyWpAhNLkIcE0iaoQZdg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;实现&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArwRnh1Bhpne9rsPtzpu1EnBlvk3WFLnGSql5R9vq33ofUib7plMVX1Xw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;偏函数&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArlWaB0BPUQD3oyoic7eDj9qb1AAPzibvD6d1veXgZicpSoOdK8kY3kXxsQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;模块&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;模块&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAryhOU0BnlPnrjdaA0xlVK0CSpBWibCG8ibdm24bS2GHJV5uBvxrHjWzLA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用模块&lt;/span&gt;&lt;/p&gt;&lt;p&gt;这是一个标准模块。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAribrucxmqcFXEI6lJJEDZbdsXqzLjSN6I5eXVZnABMRsXA2RFeC6jfhQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArbicibbL1WJfJZa626r2dntfm5bE5W06TrB35AbJksRylTia3gFUvE2d3w/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;安装第三方模块&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArrju8699FofMwqHqkicyEM4taO9mQvOw9IZow9P4TJbf25bJlWFGYePw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用__future__&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAreP0BXHsSVUcWYtvUX3SQxibibWVywP4vXWQoLeaxs5j2rUXrleP7AJQQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;面向对象编程&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;类和实例&lt;/span&gt;&lt;/p&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;定义类&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArsFzhFT95zutF51RMDsdlSSMQ8coxPCicibHTxTnlnNIvU2dJ1jv2cmYg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;访问限制&lt;/span&gt;&lt;/p&gt;&lt;p&gt;使用__双下划线开头可以让变量成为私有，外部无法访问。也可以通过添加getter、setter来控制访问操作。&lt;/p&gt;&lt;p&gt;&lt;span&gt;继承和多态&lt;/span&gt;&lt;/p&gt;&lt;p&gt;继承就在定义的时候写上父类的名称，多态就覆盖父类的方法。&lt;/p&gt;&lt;p&gt;&lt;span&gt;获取对象信息&lt;/span&gt;&lt;/p&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;使用type()判断类型信息&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用isinstance()判断继承关系&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用dir()获取对象的所有方法和属性&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;面向对象高级编程&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;使用slots&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAraqicuEcVTnganPic3CJWylXnz7ZKtibRGvwGkjZ13eeeiaUtaUIQIYbGLw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;使用@property&lt;/p&gt;&lt;p&gt;如下，定义了一个score的属性&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArIUGO6wzA4ysBCPz20t65DpFmZ3IibbrkXfa5cCZhtgQrjzynaibiam3Kg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;多重继承&lt;/span&gt;&lt;/p&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;最好不要用多重继承，用mixin&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;mixin其中概念，用类来提供一组相似功能。类似实现过的接口。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;定制类&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAribOE4W0zkMWWZib31NQiczlBL2zqNfRXF3avSk8GTI5ibWdJExgkNabkDg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用元类&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArg74P7hBdPgdgxA049yOsc75ticu9Voz5joTTZDFEqagz8ia4jcsMdqiag/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;错误、调试和测试&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;错误&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArZCdVE27tXgkgGCibxYrFhD9eaLGVVx9o2VgRm1u6XXbLcMrHcIx0BUw/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAricVXvicpL0iaSia27eTuPGCyrRjtGQ6bAI45EaYHg11picDWKaVFA1v5ciaQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;调试&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArWEXvmukB7ySCrickVVeBaJjgSq64x07OB0SU6f6nFcLJIkc51aYXdBA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;End.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Mon, 26 Sep 2016 09:51:57 +0800</pubDate>
    </item>
    <item>
      <title>几分钟快速入门Python</title>
      <link>http://www.iwgc.cn/link/2839713</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArNtFaOYgmTTmo8N5lpEbgrg0c3PvlcwYkm71QIjrmRsw41voN3R5SGQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;作者：Domon_Lee&lt;/p&gt;&lt;p&gt;Python由Guido Van Rossum在1991年创造的。它是现今存在的最流行的语言之一。我喜欢上Python是因为其简洁的语法。它基本上通过伪代码执行。&lt;/p&gt;&lt;p&gt;注意：这篇文章适用于Python 2.7，但可能适用于Python 2.x。Python 2.7将在2020年停止支持。&lt;/p&gt;&lt;p&gt;写的Python代码，同时兼容Python 2.7 和 3.x是完全有可能的。通过使用Python的futureimports.通过它可以让你通过Python 3写的代码运行在Python 2下。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAraYRcISKF7lPBPuPBBBs65jwFRus4hCgrEhMSxGDibpdLorYenaaWw1Q/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArzL5pAjoiaYutuFS66AZ5uLUMUsuaJ30JdBrEZMeehIDAH6QeZJwc5mg/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArENECh4PowdBQLRuDvuAGxJU5W9y2yqy5g9gsfs7xjZ0Gibe8trEMibjw/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAroVwJ8fp2Fic9akYMvd6XfULNk53BcXTbTLSNAYY2ZtK6frXhBerdgEw/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArJTewicwXxqwWwK9zMExREyLMhGoibqyCd1WIbjicvCDsOXPdC1bm9QspA/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArW1ds07HextfwEfvKSKyG8IHHwg4AJT3Cdn8f7tQM6zseC5xLWwhofA/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArk7hz1Q0Pt3UYSm288EzVnl7pGjtYw3EPx2KTWic18tWvdVtWOwibbXMg/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArvbXFpk4hf4hcWhWZTCFYyaVUcF1T9hibBnOibW6vlerM70UJ7PVZTfsw/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAribVJZ12jEUbIeI9hYkrIbRVGxV57Pv4COAcAw7Xxdh6UqK0Ehm6dGqw/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArjFvGjpgaYhibColTZeQgCV860Z8ItUo5KgD5dgicaWj4K5FHDsLhwcdw/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAriaoqh99FHeIahaduIk7S7mxFX30fXHdIKt4SDia0pGmHjOfsrUrjib39w/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArQ6kPg4jzA41ryTFiaxSW5toYkpMcFK7LtLwicdLeWJuzFZ0VzSVhhtRw/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAricXVtFCekMaB88Rld8ibDREOt3ByKicSI3jexOkFyT0PEl6vG9YR3XNHg/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArsGEx6N2ibT0iasrUkX9GH2v3aN5un8UKAJEO1JYI1H5tucnIPAzOiasoA/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAribfYzyALy50ZRQAVzBialRnuUPNj4kVVjVRsiatNVKX4pG04dhkKAq6og/0?wx_fmt=jpeg"/&gt;End.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Mon, 26 Sep 2016 09:51:57 +0800</pubDate>
    </item>
    <item>
      <title>推荐系统常用的推荐算法</title>
      <link>http://www.iwgc.cn/link/2839714</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArt7Dy5MevFOhTqd5qwUn9AHduVEcnwWCSXiccAU1FKAzSYb0Xzia6H9Sw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;作者：Nicol&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;一、推荐系统概述和常用评价指标&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;1.1 推荐系统的特点&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在知乎搜了一下推荐系统，果真结果比较少，显得小众一些，然后大家对推荐系统普遍的观点是：&lt;/p&gt;&lt;p&gt;&lt;span&gt;(1)重要性UI&amp;gt;数据&amp;gt;算法，&lt;/span&gt;就是推荐系统中一味追求先进的算法算是个误区，通常论文研究类的推荐方法有的带有很多的假设限制，有的考虑工程实现问题较少，推荐系统需要大量的数据整理和转化，同时更需要考虑公司业务特性以及与现有系统的集成，方能形成推荐系统和业务之间的良性循环;&lt;/p&gt;&lt;p&gt;&lt;span&gt;(2)推荐系统离线测试很好，&lt;/span&gt;上线后要么没有严格的测试结果而只能凭感觉，要么实际效果差强人意，我想主要缘于离线测试比较理想，而在线AB冠军测试无论对于前端还是后台要求都很高，没有雄厚的研发实力难以实现;&lt;/p&gt;&lt;p&gt;&lt;span&gt;(3)推荐系统受到的外部干扰因素特别多(季节、流行因素等)，&lt;/span&gt;整个系统需要不断的迭代更新，没有一劳永逸的事情。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArfNSJveCKWaeUGxUAz5nvxMLJVnJ2iaIyd2vHevQWn6x0lnBiaE69NrQw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1.2 推荐系统的评价指标&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;由于推荐系统比较复杂，所以涉及到的评价指标也很多。当然，用户满意度最为的有效，因为这本来就是推荐系统的最终目标，但是奈何资源有限成本太高，推荐系统还依赖于其它客观评价指标。&lt;/p&gt;&lt;p&gt;&lt;span&gt;(1)推荐准确度：&lt;/span&gt;这个参数可以离线计算所得，而且较为的客观，所以是各大研究论文算法最重要的参考指标。&lt;/p&gt;&lt;p&gt;总体来说，推荐系统有两大任务：“预测”和“推荐”，所以推荐系统准确度的评分包括：&lt;/p&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;评分预测：学习用户的评价模型，用于预测用户对于未接触事物的评分，其实可以看作是一个回归模型，一般用均方根误差或者绝对误差来衡量;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;TopN推荐：给用户一个个性化的推荐列表，其一般通过准确度、召回率等指标评估。其中N也是一个可变参数，可以根据不同的N描绘出对应算法的ROC曲线来进一步评价推荐效果;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;(2)覆盖率&lt;/span&gt;：体现了挖掘算法对发掘长尾商品的能力。最简单的定义是，对所有用户推荐出的产品做并集，然后看这个出现的并集产品与总产品数中所占的比例，这种方式比较的粗线条，因为推荐系统中马太效应频繁，所以好的推荐算法应当是所有商品被推荐的几率差不多，都可以找到各自合适的用户，所以实际中会考虑信息熵、基尼系数等指标。&lt;/p&gt;&lt;p&gt;&lt;span&gt;(3)多样性：&lt;/span&gt;其原理可以表述为不在一棵树上吊死。因整个推荐系统涉及到的因素太多，如果只推荐用户一个类别的相似物品，失败风险比较的大，而且也难以实现整个推荐效益的最大化。&lt;/p&gt;&lt;p&gt;&lt;span&gt;(4)新颖性：&lt;/span&gt;原理就是那些用户没有接触过、没有操作过的商品，或者是流行度比较低的商品，对用户来说是比较新鲜的物品，往往会有意外的效果。个人觉得这个指标有点扯~~&lt;/p&gt;&lt;p&gt;&lt;span&gt;(5)信任度：&lt;/span&gt;这个指标比较的主观，就是让用户信任推荐系统做出的推荐是有根据有理由的，以及推荐系统内部是如何运作的。例如亚马逊的商品推荐会给出推荐理由，作为用户的我会觉得很贴心，否则用户会觉得商家的利益驱动而带有抵触心理。&lt;/p&gt;&lt;p&gt;&lt;span&gt;(6)健壮性：&lt;/span&gt;比如针对关联推荐算法，商户恶意下单提高产品的推荐频率，水军恶意评论等。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;二、静态数据推荐&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;基本上绝大多数算法都会利用用户-产品的交互数据动态生成个性化的推荐。而静态数据指还没生成用户交互数据的时候，这种情况在系统冷启动的时候尤为的常见，常常使用的静态数据包括：&lt;/p&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;(1)用户注册时候的性别、年龄、地域、学历、兴趣等人口统计学信息;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;(2)授权的社交网络账号的好友信息;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这类基于推荐方法简单，可以根据每类用户预先设置好推送内容，也可以根据同类用户相互之间进行推送，但是这种方法面临着推荐颗粒度较大，对于涉及个人品味爱好的个性化强的商品，参考价值有限，同时在大家隐私意识加强的情况下，这类数据不见得能够轻易得到;第二类社交网络好友信息效果会比较好，但也需要相应的平台授权接入才可以。&lt;/p&gt;&lt;p&gt;然后这里引申出对于新加入的用户和新加入的商品的冷启动问题：&lt;/p&gt;&lt;p&gt;&lt;span&gt;新加入用户：&lt;/span&gt;推送热门商品;选择用上面人口统计信息进行粗粒度的推送;如果可以得到合作商数据，获取其好友信息，选择接近的好友进行UserCF推荐;向用户展示一些商品(热们常见、具有代表性和区分性、物品要多样性)，得到用户的反馈，然后进行学习(Nadav Golbandi算法);&lt;/p&gt;&lt;p&gt;&lt;span&gt;新加入商品：&lt;/span&gt;UserCF对新加入的物品冷启动不是很敏感，因为只要有用户发现这个新商品，这个新商品就会慢慢扩散开来。对于ItemCF就比较严重，比如可以考虑开始使用基于内容的推荐，等积累数据一定程度后切换成协同过滤推荐。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;三、基于内容的推荐&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;其主要根据用户之前的喜好，推荐相似的物品。&lt;/span&gt;该系统包括用户属性和产品属性两方面构成，前者包括用户的固有属性(比如人口统计信息)以及用户的历史商品交互信息(比如对看过电影的评分，然后得到该用户对于喜欢电影的属性描述)，后者是对商品的本身属性描述，这样通过简单的余弦相似度就可以实现推荐了。&lt;/p&gt;&lt;p&gt;同时也能感觉到，对于同类型的物品描述维度相似，这种算法会工作的比较好，对于电商千奇百怪的商品，可能工作效果一般。&lt;/p&gt;&lt;p&gt;这个方法核心要解决的问题是推荐是否具有扩张性，如果根据用户之前的爱好只不断推荐同类的产品，显然整个推荐系统的价值就十分有限，但是如果能准确推荐其他不同类别的商品就会很好了。&lt;/p&gt;&lt;p&gt;&lt;span&gt;Pandora的音乐推荐就是个典型的基于内容的推荐系统，他们把音乐使用各种维度的属性进行描述，然后根据用户之前的兴趣爱好推荐相似属性风格的音乐。&lt;/span&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;四、协同过滤算法&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;协同过滤算法算是推荐系统中最经典的算法了，也称为基于领域的算法。协同过滤牵涉到用户和商品的交互信息，也就是用户行为，而一般用户对于商品的行为反馈有：&lt;/p&gt;&lt;p&gt;&lt;span&gt;显性反馈行为&lt;/span&gt;——用户明确表现出对某项产品和的喜好，比如用户对商品的打分、评论等信息。&lt;/p&gt;&lt;p&gt;&lt;span&gt;隐性反馈行为&lt;/span&gt;——不能明确代表用户对产品喜好的行为，比如页面浏览行为等，这类数据量的比较多，常常伴有大量的噪音，需要经过处理和转化才可能有实际的用途。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;4.1 基于用户的协同过滤算法(UserCF)&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;其基于的假设是——喜欢类似物品的用户可能有相同或者相似的口味和偏好。UserCF实现的步骤包括：&lt;/p&gt;&lt;p&gt;&lt;span&gt;(1)找到与目标用户兴趣相似的用户群;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;假设用户u和v的正反馈的商品集合为N(u)，N(v)，那么两者兴趣相似度可以记为&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArtncicg3xS2RaibibPOSvwqCiaNnOuSLicUT7qjasjxoEnytmJibYZgFOmUlA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;center style="color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;"&gt;&lt;/center&gt;&lt;p&gt;&lt;span&gt;(2)找到这个集合中用户喜欢的，而目标用户没有听说过得商品推荐之;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;UserCF提供的一个参数K表示要考虑目标用户兴趣最相似的人的个数，在保证精度的同时，K不宜过大，否则推荐结果会趋向于热门商品，流行度指标和覆盖度指标都会降低。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;4.2 基于内容的协同过滤算法(ItemCF)&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;目前用的最广泛的推荐算法，不是通过商品本身，而是通过用户对商品的行为来计算商品之间的相似度，其假设能够引起用户兴趣的商品，必定与其之前评分高的商品相似。ItemCF的操作步骤包括：&lt;/p&gt;&lt;p&gt;&lt;span&gt;(1)计算商品之间的相似度。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;物品相似度可以表示为(其实跟前面的支持度比较像)&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAr1MGsnxvbnjqH0ic6ABZHn4voXkSwYlj0GVT4xg3fNPZMcEGxkicQOY0g/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;第二个式子比第一个式子好在可以惩罚过热产品j。&lt;/p&gt;&lt;p&gt;&lt;span&gt;(2)根据商品的相似度和用户的历史行为，给用户生成推荐列表。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;4.3 基于模型的协同过滤算法&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;User-CF和Item-CF合称为memory-based CF，而model-based CF使用一般机器学习的方式，其基于样本的用户喜好信息，训练出一个推荐模型，然后根据实时的用户喜好的信息进行预测和计算推荐。&lt;/p&gt;&lt;p&gt;常用的模型包括LSI、贝叶斯网络等。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;4.4 UserCF和ItemCF之间的比较&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在现实的情况中，往往物品的个数是远远小于用户的数量的，而且物品的个数和相似度相对比较稳定，可以离线完成工作量最大的相似性计算步骤，从而大大降低了在线计算量，基于用户的实时性更好一些。&lt;/p&gt;&lt;p&gt;但是具体使用的场景，还需要根据具体的业务类型来区分，User-CF偏重于反应用户小群体热点，更具社会化，而Item-CF在于维持用户的历史兴趣，比如：&lt;/p&gt;&lt;p&gt;&lt;span&gt;对于新闻、阅读类的推荐，新闻阅读类的信息是实时更新的，&lt;/span&gt;所以ItemCF在这种情况下需要不断更新，而用户对新闻的个性化推荐不是特别的强烈情况，用户有新行为不会导致相似用户的剧烈运动。&lt;/p&gt;&lt;p&gt;&lt;span&gt;对于电子商务类别的，&lt;/span&gt;由于用户消费代价比较高，所以对个性化的精确程度要求也比较高，而一段用户有新的行为，也会导致推荐内容的实时变化&lt;/p&gt;&lt;p&gt;&lt;span&gt;协同过滤的算法缺点也很明显，除了上面的冷启动之外，往往商家的用户数量和产品数量都很多，所以矩阵的计算量会非常的大，&lt;/span&gt;但某个具体的用户往往买的东西又有限，所以数据同时也是高度稀疏的。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;五、基于标签的推荐方法&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;基于标签的推荐算法也是十分常见的，比如豆瓣网、京东的商品评论等。标签信息一般分为专家、学者类打的标签;一类为普通用户给商品打的标签(UGC, User Generated Content)。而标签的内容一般要么描述商品本身的，比如名字、类别、产地等，也或者用户对商品的观点评价，比如便宜、好用、性能强等，三元组(用户、物品、标签)通过标签将用户和物品进行联系。&lt;/p&gt;&lt;p&gt;基于标签推荐最简单的例子比如：统计一个用户最常用的标签，统计每个物品最常被打的标签，然后两者通过一定的关系推荐起来;当然也可以展现标签云，让用户点击自己感兴趣的标签，然后依此个性化推荐。&lt;/p&gt;&lt;p&gt;国内的京东、淘宝、豆瓣都大量使用标签信息。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArqic6RFuUAHo5pfS1TVLs2ekBHjIAbYU2QZlxicWQILgVkOxVoyYopZVA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;由于标签的评价用户主观性比较强，所以一方面同样意思用户的用语差异性比较大，规范化可以考虑：&lt;span&gt;用户评价的时候提供常用标签，让用户点击可以减少输入差异，而推荐的标签包括该物品描述性较好的标签，以及用户自己常用的标签(用户一致性);人为或者通过自然语言处理技术对标签进行整理，对于用户积极和消极的评价进行区分;标签也有长尾分布效应，所以除了热门标签外怎么提取那些差异化的有用标签进行更精确的推荐也是应当研究的课题(卡方分布/SVD)。&lt;/span&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;参考文献&lt;/strong&gt;&lt;/h3&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;探索推荐引擎内部的秘密，第 {1,2,3} 部分&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;推荐系统实践&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;(2011-)2014 年终总结：技术篇&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Netflix Prize 中的协同过滤算法&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;End.&lt;/p&gt;</description>
      <pubDate>Mon, 26 Sep 2016 09:51:57 +0800</pubDate>
    </item>
    <item>
      <title>数据结构常见的八大排序算法</title>
      <link>http://www.iwgc.cn/link/2804445</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEibdJVVib3nvKgNeico5uPcX26w5cWd94h5SW3zmicSFz3AyKr56t1pvfpQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;作者：LeeLom&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;八大排序，三大查找是《数据结构》当中非常基础的知识点，在这里为了复习顺带总结了一下常见的八种排序算法。&lt;/p&gt;&lt;p&gt;常见的八大排序算法，他们之间关系如下：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEQIbbe1thntHPlUC411znMKPmhP0bCicLdyeubOaGr3W3a72nffJPgCg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;他们的性能比较：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEqOEtPXicYXXpCC59prJpicTMhXaH8CSNg5A77mc2KPwdK0626Im0mLmg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;下面，利用Python分别将他们进行实现。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;直接插入排序&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;算法思想：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEsN513CdpxbIdzuyts3qRudzibFRQkv2YSN4l7O8YpCmNSzRMwDkXdFw/0?wx_fmt=gif"/&gt;&lt;/p&gt;&lt;p&gt;直接插入排序的核心思想就是：将数组中的所有元素依次跟前面已经排好的元素相比较，如果选择的元素比已排序的元素小，则交换，直到全部元素都比较过。&lt;/p&gt;&lt;p&gt;因此，从上面的描述中我们可以发现，直接插入排序可以用两个循环完成：&lt;/p&gt;&lt;p&gt;&lt;span&gt;第一层循环&lt;/span&gt;：遍历待比较的所有数组元素&lt;/p&gt;&lt;p&gt;&lt;span&gt;第二层循环：&lt;/span&gt;将本轮选择的元素(selected)与已经排好序的元素(ordered)相比较。如果：selected &amp;gt; ordered，那么将二者交换&lt;/p&gt;&lt;p&gt;&lt;span&gt;代码实现&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVElNkXbgsoN4rWRQiaECowNYicY0yECeWoIeTibEZOib84ScOxbpKUtia9yvA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;希尔排序&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;算法思想：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEKGmKg0Cwj6kKRdI2YNqPXWonxA4R6ribIoFmJVG21L5w4KbwicNibPObQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;希尔排序的算法思想：将待排序数组按照步长gap进行分组，然后将每组的元素利用直接插入排序的方法进行排序;每次将gap折半减小，循环上述操作;当gap=1时，利用直接插入，完成排序。&lt;/p&gt;&lt;p&gt;同样的：从上面的描述中我们可以发现：希尔排序的总体实现应该由三个循环完成：&lt;/p&gt;&lt;p&gt;&lt;span&gt;第一层循环：&lt;/span&gt;将gap依次折半，对序列进行分组，直到gap=1&lt;/p&gt;&lt;p&gt;&lt;span&gt;第二、三层循环：&lt;/span&gt;也即直接插入排序所需要的两次循环。具体描述见上。&lt;/p&gt;&lt;p&gt;&lt;span&gt;代码实现：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEBiaRIyUu35TpWic6ibDDv3H0sP3nnsrnV8UOOeZ2OujEjgb8VBZBuMuXQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;简单选择排序&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;算法思想&lt;/p&gt;&lt;center style="color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVE8yqPKIexg2nuVhshLL9fhcJzjnxAjNJO27bCMGOTBvr2Uicy3BIrU0Q/0?wx_fmt=gif"/&gt;&lt;/center&gt;&lt;p&gt;&lt;span&gt;简单选择排序的基本思想：比较+交换。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;从待排序序列中，找到关键字最小的元素;&lt;/p&gt;&lt;p&gt;如果最小元素不是待排序序列的第一个元素，将其和第一个元素互换;&lt;/p&gt;&lt;p&gt;从余下的 N - 1 个元素中，找出关键字最小的元素，重复(1)、(2)步，直到排序结束。&lt;/p&gt;&lt;p&gt;因此我们可以发现，简单选择排序也是通过两层循环实现。&lt;/p&gt;&lt;p&gt;&lt;span&gt;第一层循环：&lt;/span&gt;依次遍历序列当中的每一个元素&lt;/p&gt;&lt;p&gt;&lt;span&gt;第二层循环：&lt;/span&gt;将遍历得到的当前元素依次与余下的元素进行比较，符合最小元素的条件，则交换。&lt;/p&gt;&lt;p&gt;&lt;span&gt;代码实现&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEYniaW4hQGH1IWuNSN9N3WkhrhrdiaXvbTQesupEXf0SDQHMooLV6QLhQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;堆排序&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;堆的概念&lt;/span&gt;&lt;/p&gt;&lt;p&gt;堆：本质是一种数组对象。特别重要的一点性质：任意的叶子节点小于(或大于)它所有的父节点。对此，又分为大顶堆和小顶堆，大顶堆要求节点的元素都要大于其孩子，小顶堆要求节点元素都小于其左右孩子，两者对左右孩子的大小关系不做任何要求。&lt;/p&gt;&lt;p&gt;利用堆排序，就是基于大顶堆或者小顶堆的一种排序方法。下面，我们通过大顶堆来实现。&lt;/p&gt;&lt;p&gt;基本思想：&lt;/p&gt;&lt;p&gt;堆排序可以按照以下步骤来完成：&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先将序列构建称为大顶堆;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;(这样满足了大顶堆那条性质：位于根节点的元素一定是当前序列的最大值)&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVE1Dwwo2YOfxibZIxOs1PEEfc4kzd4bpczqNdLrgtWISkJichZQQIegdsA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;取出当前大顶堆的根节点，将其与序列末尾元素进行交换;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;(此时：序列末尾的元素为已排序的最大值;由于交换了元素，当前位于根节点的堆并不一定满足大顶堆的性质)&lt;/p&gt;&lt;p&gt;&lt;span&gt;对交换后的n-1个序列元素进行调整，使其满足大顶堆的性质;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVE34mdnKJr2ibbncID5AHV9OTHKAjibddNnp1MdUTu8iaRakYLW6j3sQNuw/0?wx_fmt=jpeg"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;重复2.3步骤，直至堆中只有1个元素为止&lt;/p&gt;&lt;p&gt;代码实现：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEh1G6YwGMicSaSANzAYAXLefORSsvmTHyGFR24BouPbGo49ibeUwZ6g4w/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEl3AnuiaLMgYr7L0wnkYWXygcDjqyqUFMqtHTUwrkG9m1LTpicYciaTrpA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;冒泡排序&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;基本思想&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVE8ZeliazpGHYiabHK2yL3rXfUvGzoDSA5ViamM3SVAS0nNdgAJtSTwZlew/0?wx_fmt=gif"/&gt;&lt;/p&gt;&lt;p&gt;冒泡排序思路比较简单：&lt;/p&gt;&lt;ol style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;将序列当中的左右元素，依次比较，保证右边的元素始终大于左边的元素;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;( 第一轮结束后，序列最后一个元素一定是当前序列的最大值;)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;对序列当中剩下的n-1个元素再次执行步骤1。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;对于长度为n的序列，一共需要执行n-1轮比较&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;(利用while循环可以减少执行次数)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;*代码实现&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEpRc6dh7I0fD1LCOwtk6sGlp5rsbWMyEzScMiallic30Rib5W1rjibaVseQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;快速排序&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;算法思想：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEntcZM5RlM9cKRloMYPJbcVTxhWdHp6uea4eibtk63TsQpF8A5flxrqg/0?wx_fmt=gif"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;快速排序的基本思想：挖坑填数+分治法&lt;/span&gt;&lt;/p&gt;&lt;ol style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;从序列当中选择一个基准数(pivot)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在这里我们选择序列当中第一个数最为基准数&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;将序列当中的所有数依次遍历，比基准数大的位于其右侧，比基准数小的位于其左侧&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;重复步骤1.2，直到所有子集当中只有一个元素为止。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;用伪代码描述如下：&lt;/p&gt;&lt;p&gt;1.i =L; j = R; 将基准数挖出形成第一个坑a[i]。&lt;/p&gt;&lt;p&gt;2.j--由后向前找比它小的数，找到后挖出此数填前一个坑a[i]中。&lt;/p&gt;&lt;p&gt;3.i++由前向后找比它大的数，找到后也挖出此数填到前一个坑a[j]中。&lt;/p&gt;&lt;p&gt;4.再重复执行2，3二步，直到i==j，将基准数填入a[i]中&lt;/p&gt;&lt;p&gt;&lt;span&gt;代码实现：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEvc7DOedKCwrZ7jDmBda3qAxbMb62pibriaZ5xkJs0fN4afDtLrbiaAZJw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;归并排序&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;算法思想：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEr5JrpiajibawBnhFr9Y7aWuI1AwickJQ7H38FUsBfDMxM66cGBtCRn34Q/0?wx_fmt=gif"/&gt;&lt;/p&gt;&lt;p&gt;归并排序是建立在归并操作上的一种有效的排序算法，该算法是采用分治法的一个典型的应用。它的基本操作是：将已有的子序列合并，达到完全有序的序列;即先使每个子序列有序，再使子序列段间有序。&lt;/p&gt;&lt;p&gt;归并排序其实要做两件事：&lt;/p&gt;&lt;ol style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;分解----将序列每次折半拆分&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;合并----将划分后的序列段两两排序合并&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;因此，归并排序实际上就是两个操作，拆分+合并&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;如何合并?&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;L[first...mid]为第一段，L[mid+1...last]为第二段，并且两端已经有序，现在我们要将两端合成达到L[first...last]并且也有序。&lt;/p&gt;&lt;ol style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;首先依次从第一段与第二段中取出元素比较，将较小的元素赋值给temp[]&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;重复执行上一步，当某一段赋值结束，则将另一段剩下的元素赋值给temp[]&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;此时将temp[]中的元素复制给L[]，则得到的L[first...last]有序&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;如何分解?&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在这里，我们采用递归的方法，首先将待排序列分成A,B两组;然后重复对A、B序列&lt;/p&gt;&lt;p&gt;分组;直到分组后组内只有一个元素，此时我们认为组内所有元素有序，则分组结束。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;代码实现&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEy03gzZVy3zDWQrreflTWanF4ouv0ZfVPicSeckkyXBVAhVQyMIfulTA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;基数排序&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;算法思想&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEWGQAfoaX0gQI91iboPjEPNumhf8VAMSe49CesMLEdQWW5O19v0tt5Yg/0?wx_fmt=gif"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;基数排序：&lt;/span&gt;通过序列中各个元素的值，对排序的N个元素进行若干趟的“分配”与“收集”来实现排序。&lt;/p&gt;&lt;p&gt;&lt;span&gt;分配：&lt;/span&gt;我们将L[i]中的元素取出，首先确定其个位上的数字，根据该数字分配到与之序号相同的桶中&lt;/p&gt;&lt;p&gt;&lt;span&gt;收集：&lt;/span&gt;当序列中所有的元素都分配到对应的桶中，再按照顺序依次将桶中的元素收集形成新的一个待排序列L[ ]&lt;/p&gt;&lt;p&gt;对新形成的序列L[]重复执行分配和收集元素中的十位、百位...直到分配完该序列中的最高位，则排序结束&lt;/p&gt;&lt;p&gt;根据上述“基数排序”的展示，我们可以清楚的看到整个实现的过程&lt;/p&gt;&lt;p&gt;&lt;strong&gt;代码实现&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEBQky0o4ADm7H9w2lzXzIHvdvwTrWogN2Mcfybiaw5IiaUdL6ehnjNwxA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;后记&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;写完之后运行了一下时间比较：&lt;/p&gt;&lt;p&gt;&lt;span&gt;1w个数据时：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEFB9zwf57WqbKOrPu1WKFwVROhJMic31icpTC9vuicbD4bNkDloZ5B2GRg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;10w个数据时：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEz7t8yj6yy5YdqFgyXLxhSKx3wicIziaicnB4KicfqBEc1NMBBou4bv2SIw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;从运行结果上来看，堆排序、归并排序、基数排序真的快。&lt;/p&gt;&lt;p&gt;对于快速排序迭代深度超过的问题，可以将考虑将快排通过非递归的方式进行实现。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;参考资料&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;数据结构可视化：visualgo&lt;/p&gt;&lt;p&gt;希尔排序介绍：希尔排序&lt;/p&gt;&lt;p&gt;堆排序：《算法导论》读书笔记之第6章 堆排序&lt;/p&gt;&lt;p&gt;博客园：静默虚空&lt;/p&gt;&lt;p&gt;参考资料详情请阅读全文。&lt;/p&gt;&lt;p&gt;End.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Fri, 23 Sep 2016 09:30:41 +0800</pubDate>
    </item>
  </channel>
</rss>
