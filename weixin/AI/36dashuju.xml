<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>36大数据</title>
    <link>http://www.iwgc.cn/list/1149</link>
    <description>关注大数据和互联网趋势,最大,最权威,最干货的大数据微信号(dashuju36).大数据第一科技媒体.不发软文,只做知识分享.</description>
    <item>
      <title>百度数据众包平台上线 专注数据源加工与定制</title>
      <link>http://www.iwgc.cn/link/2853025</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArsaMTyzuWh6RcFvNzXIzoZnq14CD5jicFibibqiaE8fYAModGHKd3aicZrTA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;文|&amp;nbsp;以墨茄data&lt;/strong&gt;&amp;nbsp;(任何不表明作者和来源36大数据的转载均为侵权。）&lt;/p&gt;&lt;p&gt;目前市场上专注于数据交易的大数据厂商有很多，每家都有每家的特点。近期我们发现百度数据众包也在买36大数据的关键字，这也引起了我们的关注。通过这篇文章，我们来解析下百度数据众包。&lt;/p&gt;&lt;p&gt;通过我们的调研发现，数据交易厂商聚合数据着重于API的提供，也就是说，聚合数据主要的业务为数据接口，而提供的数据源是流动的数据（数据流）。数据堂着重于数据的粗加工，相当于把数据小麦变成数据面粉的过程。百度数据众包着重于数据的采集与标注，把数据采集过程进行众包任务完成。粗粗的比较起来，数据堂，聚合数据和百度数据众包，从实际业务和商业模式上来都各有千秋，也有自己独到的地方。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;百度数据众包的优势：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;一、 从人才上说，百度拥有&lt;span&gt;&lt;strong&gt;自有底层数据建设团队&lt;/strong&gt;&lt;/span&gt;。数据众包平台拥有日均5000名标注人员，与日均3000名数据采集员，可以及时高效地采集与标注数据。另外，百度其他平台（如百度统计、百度数说、百度站长）也积累了大量拥有数据采集技术和能力的人才，这些人才可以自发的去完成百度数据众包上面的任务。&lt;/p&gt;&lt;p&gt;二、从数据量和数据源来说， 百度数据众包平台作为百度旗下的一个分支，其自身&lt;strong&gt;&lt;span&gt;拥有&lt;/span&gt;&lt;/strong&gt;百度的&lt;span&gt;&lt;strong&gt;海量数据&lt;/strong&gt;&lt;/span&gt;。&lt;/p&gt;&lt;p&gt;三、从运营经验和客户积累角度来说，百度本身就拥有大量的中小型企业客户，百度对于服务2B客户方面经验丰富，所以，百度数据众包平台&lt;span&gt;&lt;strong&gt;更易找到用户和客户&lt;/strong&gt;&lt;/span&gt;。众包平台已为包括百度深度研院、自然语言处理部、大数据部、语音、糯米等多个产品提供数据服务，在&lt;span&gt;&lt;strong&gt;数据服务方面经验丰富&lt;/strong&gt;&lt;/span&gt;。&lt;/p&gt;&lt;p&gt;所以，基于人才、数据源和运营经验三个角度，我们本身是比较看好百度数据众包服务的。下面，小编就从各方搜罗了资料，让大家从这一篇文章中，了解什么是百度众包、百度众包能做什么以及百度众包能给我们带来什么。&lt;/p&gt;&lt;p&gt;首先了解下百度众包平台的概念&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAru13vguGMWz8bBHTFRFMiaU9s2JiaIZaZXscqLBJqD4PxeqPhvhQARUsA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;那么&lt;/p&gt;&lt;h2 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;百度数据众包平台是什么？&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;从宏观来讲，平台是针对于用户所需数据，对数据进行采集、处理与分析，让大数据变成有效数据、高质量数据。&lt;/p&gt;&lt;p&gt;从功能来讲，平台提供数据制作、数据采集与数据标注。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;数据制作&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArXic5TszExxBSAXY0Om1kYWH2BwfWV0B4QfEtdtmSne8iaF4GQSFXJUwg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;数据采集&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;数据标注&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArK157vMIZIXgLz995RQGNy0e3OfTpgkxhWyDqq02szon9LvSeiabISrQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;从以上案例，我们可以看出平台提供以下服务：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArX924YSPSn3e8XMzQ8ibjDVIds9Ul0X6ibCzWFZ06dibSFrGOibWoF73ia5g/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h2 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;服务内容&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1）数据分类/清洗：&lt;/strong&gt;数据主观分类标注，文本图片标签化，文本校验标注，语音内容清洗，垃圾流量；&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2）数据校验/评估：&lt;/strong&gt;数据质量评估&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3）数据内容提取：&lt;/strong&gt;图片内容提取（框标注），网页摘要撰写，文本关键词提取，图片关键词提取，语音文本化；&lt;/p&gt;&lt;p&gt;&lt;strong&gt;4）数据采集/录制：&lt;/strong&gt;特定语音采集（含方言），实体图片采集，视频（如航拍）采集，O2O门店信息采集，LBS类型数据采集。&lt;/p&gt;&lt;p&gt;基于百度数据众包提供的服务，那么我们来比较一下百度数据众包与数据堂和聚合数据的区别&lt;/p&gt;&lt;h2 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;百度数据众包 vs 数据堂 vs 聚合数据&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;1.基于数据的定位&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;百度数据众包：&lt;/strong&gt;数据制作、采集、标注一站完成&lt;/p&gt;&lt;p&gt;&lt;strong&gt;数据堂：&lt;/strong&gt;大数据共享交易平台&lt;/p&gt;&lt;p&gt;&lt;strong&gt;聚合数据：&lt;/strong&gt;数据银行&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;2.提供服务&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;百度数据众包：&lt;/strong&gt;强调数据的分析与处理，标签化&lt;/p&gt;&lt;p&gt;&lt;strong&gt;数据堂：&lt;/strong&gt;主要提供数据交易，自身有数据。强调数据交易与API&lt;/p&gt;&lt;p&gt;&lt;strong&gt;聚合数据：&lt;/strong&gt;是一个为智能手机开发者，网站站长，移动设备开发人员及图商提供原始数据API服务的综合性云数据平台。强调API和基于营销的营销方案&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;3.数据价格&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;百度数据众包&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;文本标注成本约为0.05~0.2元/条，图片标注成本约为0.5元/100张&lt;/p&gt;&lt;p&gt;&lt;strong&gt;数据堂&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArico0mOeaF7ibNDkicIjaQwpdCjFI1bUicp2u5c4zDxZQx10AsPfxvvHlLQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;聚合数据&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArtuU51FgWt4yCd2RFgE2oPHcuoa7frFun6hjbZiasfnDEzuSXmCZwGMw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;由以上可以看出，数据堂与聚合数据主要为用户提供数据采购平台，百度数据众包平台不仅为用户提供数据平台，还为用户提供数据处理、标签平台。&lt;/p&gt;&lt;h2 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;众包用户&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;百度众包有许多用户，包括百度深度研院、自然语言处理部、大数据部、语音、糯米等多个产品，运用众包平台让大数据变成有效数据、高质量数据。&lt;/p&gt;&lt;p&gt;所以可以看来那些对外部数据有需求，尤其是非结构化的数据，需要数据采集、数据处理、标签化，并基于海量数据的外部与内部的数据融合与处理的企业，都是百度数据众包的潜在用户。&lt;/p&gt;&lt;p&gt;那么当你需要百度数据众包的服务时，应该怎样联系或者使用呢，别着急，我们接下来就讲下，在平台上的这些服务与功能，怎样去申请使用。&lt;/p&gt;&lt;p&gt;首先了解在百度众包平台，想要服务，需要哪些必要步骤&lt;/p&gt;&lt;h2 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;众包平台使用步骤&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;1）需求洽谈&lt;/p&gt;&lt;p&gt;填写个人信息及需求，项目专员将迅速与您联系&lt;/p&gt;&lt;p&gt;2）定制化标注采集&lt;/p&gt;&lt;p&gt;根据您的需求，定制高效快速标注采集方案&lt;/p&gt;&lt;p&gt;3）实时审核监控&lt;/p&gt;&lt;p&gt;标注采集开展期间，您可在平台实时监控、审核数据质量&lt;/p&gt;&lt;p&gt;4）交付数据&lt;/p&gt;&lt;p&gt;按照您的需求，交付高质量的数据&lt;/p&gt;&lt;p&gt;在百度数据众包平台中，提供&lt;span&gt;&lt;strong&gt;两种服务模式&lt;/strong&gt;&lt;/span&gt;，一种是自助服务，一种是定制服务。&lt;/p&gt;&lt;h3 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;数据处理–自助服务&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArHcmOjdJ0KvmT1urrfIy1odrol7M6PxEBg94ft7wsQdgy4TWBrQ8wMw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;自助服务类型&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArFspmLdKuZKBkGHoTEwcxibzicSFsResYpCw9b28k3G8WnFeTyulcyRqA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;其中自助服务包括文本处理、图片处理、语音处理及网页处理&lt;/p&gt;&lt;p&gt;文本处理：文本归类、文本提取、文本校正&lt;/p&gt;&lt;p&gt;图片处理：图片归类、图片标签化、图片内容标记、图片采集&lt;/p&gt;&lt;p&gt;语音处理：语音内容提取、语音筛选、预料采集&lt;/p&gt;&lt;p&gt;网页处理：有效网页筛选&lt;/p&gt;&lt;p&gt;如果以上自出数据处理服务不能够帮助解决到你的问题，那么可以选择定制服务。&lt;/p&gt;&lt;h3 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;数据处理—定制服务&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;选择需要定制的服务类型&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArbPxueLPibRAI3msRTP8tIGgicJIANHAFx2E3AIBBEy9SEdy2nkJjzZLA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;其中，定制服务类型支持对文本数据、图片数据、语音视频数据、网页数据、O2O|LBS数据的处理&lt;/p&gt;&lt;p&gt;文本支持处理类型：标注、提取、校验&lt;/p&gt;&lt;p&gt;图片：筛选、内容提取、采集&lt;/p&gt;&lt;p&gt;语音视频：采集、清洗、文本化&lt;/p&gt;&lt;p&gt;网页：对比、清洗&lt;/p&gt;&lt;p&gt;O2O|LBS：O2O信息采集/清洗、POI及AOI挂接&lt;/p&gt;&lt;p&gt;确认好需要的服务后，进行&lt;span&gt;&lt;strong&gt;申请提交&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAr3ohXTjok8OooS2f1qfqd2h75772r0AYJvQV7Cjoqh21GeUoelWWOZQ/0?wx_fmt=jpeg"/&gt;&lt;br/&gt;那么，你用百度数据众包平台之前，是否还想了解下数据质量的问题？&lt;/p&gt;&lt;h2 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;数据质量&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;百度数据众包通过以下几项来保证数据质量。&lt;/p&gt;&lt;p&gt;1）通过专业的标注采集平台支持定制化开发，保证用户数据采集质量。&lt;/p&gt;&lt;p&gt;2）数量庞大的高质量标注采集用户&lt;/p&gt;&lt;p&gt;3）专业项目人员策划方案、实时跟进&lt;/p&gt;&lt;p&gt;4）多重审核机制保障数据高质量&lt;/p&gt;&lt;h2 style=" box-sizing: border-box ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; "&gt;&lt;span&gt;&lt;strong&gt;百度大数据+之百度数据众包平台&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;众所周知，百度是应用大数据最早的企业之一，早在20014年4月，百度在第四届“技能敞开日”上就提到要将其大数据才能敞开给社会。百度于2015年推出百度大数据+，旨在面向行业诉求，开放百度大数据核心能力，基于百度海量用户数据，实现行业趋势洞察，客群精准触达，科学营销决策，风险危机防控等核心价值，助力行业实现大数据应用的落地和突破。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArg5ejOlDG6icbJ7dAaAYcmkEbK3t3jnm4HTGqMuW2QQY9gib5yXX1plmw/0?wx_fmt=jpeg"/&gt;&lt;br/&gt;百度数据众包平台在百度大数据中占据举足轻重的位置，相当于上图的数据融合层。数据众包平台为百度大数据提供数据支撑。&lt;/p&gt;&lt;p&gt;以上是百度数据众包平台的基本简介。大家是否有了基本的概念呢？希望有数据采集与数据标注需求的小伙伴去申请试用，也欢迎大家向我们反馈试用结果。各位小伙伴如果还有不了解的地方，同时也欢迎大家留言交流。&lt;/p&gt;&lt;p&gt;百度数据众包平台地址：http://zhongbao.baidu.com/&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Tue, 27 Sep 2016 09:15:16 +0800</pubDate>
    </item>
    <item>
      <title>【美股】国双登陆纳斯达克国内大数据赴美上市第一股诞生！</title>
      <link>http://www.iwgc.cn/link/2853026</link>
      <description>&lt;p&gt;国内大数据赴美上市第一股诞生！&lt;a target="_blank"&gt;美国&lt;/a&gt;当地时间9月23日，北京国双科技有限&lt;a target="_blank"&gt;公司&lt;/a&gt;（简称国双）将登陆&lt;a target="_blank"&gt;纳斯达克&lt;/a&gt;，&lt;a&gt;股票&lt;/a&gt;代码：GSUM，发行价：10.5-12.5&lt;a target="_blank"&gt;美元&lt;/a&gt;。&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;国双到底有多牛？&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;国双是基于云计算和大数据技术的商业智能解决方案提供商，为18个行业600多家知名客户及品牌提供服务。核心业务覆盖商业企业、政府、新&lt;a target="_blank"&gt;媒体&lt;/a&gt;三大领域。&lt;br/&gt;&lt;br/&gt;包括微软、HP、可口可乐、欧莱雅、宝洁、大众、希尔顿、&lt;a target="_blank"&gt;中国&lt;/a&gt;银联、中国移动、中国联通、京东、腾讯、百度等，遍布18个行业600多家国内外知名客户及品牌，都曾是国双的客户，国双为客户提供全流程数字营销技术和服务。&lt;br/&gt;&lt;br/&gt;在政府市场，2012年与国家信息中心联合成立网络政府研究中心，迄今已为全国3000多家政府机构提供大数据分析服务，这其中就包括“中华人民共和国中央人民政府门户网站”(www.GOV.cn)在内；在新媒体领域，与江苏网络电视台、湖南卫视、浙江卫视等20多家省级电视台和网络电视台建立合作，为其提供全媒体大数据分析，热播的《爸爸去哪儿》、《对话》、《中国好声音》中都有国双的技术支持。&lt;br/&gt;&lt;br/&gt;该公司资料显示，经过10年的成长，公司在2015年第四季度实现运营层面盈利，2013年到2015年的净收入复合增长率达到94％，毛利率增长至86％；2016年上半年的研发支出占收入的41％，而收入成长保持在75％。2013年到2016年间，公司申请的发明专利数量超过1200件，是一家典型的高成长科技企业。&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;美国&lt;a target="_blank"&gt;股市&lt;/a&gt;青睐高科技企业&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;近几年，越来越多的中国企业选择在美国上市，尤其是国内&lt;a target="_blank"&gt;互联网&lt;/a&gt;企业对赴美上市偏爱有加；另一方面，海外资本也希望通过投资来赢取中国经济增长与转型所带来的红利。&lt;br/&gt;&lt;br/&gt;对于中国的大多数互联网企业来说，初期基本都处于亏损状态，而美国市场青睐高科技企业，对于企业盈利方面没有硬性要求，因此纳斯达克和纽交所成为优先选择。&lt;/p&gt;</description>
      <pubDate>Tue, 27 Sep 2016 09:15:16 +0800</pubDate>
    </item>
    <item>
      <title>利用众包模式建立智能交通的大数据</title>
      <link>http://www.iwgc.cn/link/2853027</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArciaMYqcdiasUSKGBtyzRmqw4bVDdjD8omVZH4S3Q5LSHQyIznyyfIwCA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;利用汽车电子系统和公路摄像头采集到的数据完成大数据的建立。这种众包模式进行数据收集的方式既能完成大量数据的精确收集，又解决了数据收集成本过高的问题。数据收集完成后将孤立数据进行相互链接和共享，将数据进行社会化从而建立真正的大数据。数据中心利用收集到的大数据进行数据分析和挖掘，从而对交通进行智能调度、监控和管理。&lt;/p&gt;&lt;h2 style=" font-size: 18px; margin-top: 16px; margin-bottom: 16px; padding-top: 10px; padding-bottom: 10px; line-height: 18px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); color: rgb(68, 68, 68) ; ;; white-space: normal; "&gt;&lt;span&gt;&lt;strong&gt;1.概述&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;互联网已经进入大数据时代，物联网的发展，尤其是智能交通的发展也需要建立在大量数据基础上。大量、准确、实时的交通数据是智能交通发展的基础。&lt;/p&gt;&lt;p&gt;要形成巨量的数据规模不但需要采集新的数据，而且需要将已有的数据进行联网和共享。将以前孤立的数据相互连接起来才能更加准确的反映真实的交通情况。我们将孤立数据的共享称为数据的社会化，以前的数据都是为孤立的个体服务，如果将每个个体的孤立数据相连接、相共享，那么这些孤立数据就成为社会化的数据，成为可以反映社会现实的数据，我们将其称为数据的社会化。社会化的数据不是将孤立数据进行叠加，而是可以对其进行数据分析和挖掘，发现社会运行规律，从而可以为社会更好的发展提供指导。&lt;/p&gt;&lt;p&gt;怎样低成本的获取大量交通数据成为制约智能交通发展的一大瓶颈。我们提出众包模式来进行数据采集，就像维基百科一样，利用巨量用户来完成信息的收集。对于智能交通，我们可以利用行驶的每一辆车、公路上的每一个摄像头来完成数据的收集。这就需要移动互联网技术将车辆的数据进行连接，利用模式识别技术对摄像头所拍摄的图像中的信息数据进行提出。&lt;/p&gt;&lt;h2 style=" font-size: 18px; margin-top: 16px; margin-bottom: 16px; padding-top: 10px; padding-bottom: 10px; line-height: 18px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); color: rgb(68, 68, 68) ; ;; white-space: normal; "&gt;&lt;span&gt;&lt;strong&gt;2.城市交通存在的问题&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;城市交通是城市最基础也是最重要的组成部分，与人们生活息息相关。城市交通是城市经济发展的命脉，城市交通在整个社会机制中起着非常重要的纽带作用。随着全球经济发展，城市化进程不断推进，全球出现了众多的超大型城市，比如，纽约、伦敦，以及发展中国家的北京、孟买、墨西哥城等。&lt;br/&gt;随着社会发展，城市规模不断扩大，城市人口呈爆炸式发展，城市的交通状况每况愈下，交通拥堵问题成为制约城市发展的一大瓶颈。&lt;br/&gt;交通拥堵问题造成以下四大弊端：&lt;/p&gt;&lt;p&gt;（1）给人们的生活、工作带来诸多不便，城市居民花在路上的时间越来越多，造成时间大量浪费。根据英国咨询公司雷格斯2010年的一项调查结果显示，北京平均上下班路上时间为52分钟，上海47分钟，深圳46分钟。城市拥堵问题严重的浪费了城市居民的时间，造成巨大的时间浪费，也造成巨大的间接性经济损失。&lt;/p&gt;&lt;p&gt;（2）城市交通拥堵问题还使人们时刻处于一种烦躁、焦虑中。非常多的城市居民患有拥堵焦虑症，严重的影响了城市居民生活。&lt;/p&gt;&lt;p&gt;（3）交通拥堵问题造成巨大的环境污染，汽车排放的大量尾气使城市环境问题更加恶劣。北京雾霾天气频频出现，空气质量频频爆表，主要是由于汽车尾气造成的。&lt;/p&gt;&lt;p&gt;（4）交通拥堵问题造成能源的大量浪费，汽车平均每日花在路上的时间增加，从而使汽车耗油量增加，大大浪费了日益紧缺的能源。&lt;/p&gt;&lt;p&gt;为了治理城市的拥堵问题，各方机构学者纷纷出谋划策，提出很多方案来解决这一世界难题。比如，单双号限行，摇号购车等等，这些政策性的行政手段并没有解决问题，而且引来诸多非议，也对其他行业造成不良影响，这些解决方案都是治标不治本。&lt;/p&gt;&lt;h2 style=" font-size: 18px; margin-top: 16px; margin-bottom: 16px; padding-top: 10px; padding-bottom: 10px; line-height: 18px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); color: rgb(68, 68, 68) ; ;; white-space: normal; "&gt;&lt;span&gt;&lt;strong&gt;3.智能交通发展现状&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;为了从根本上解决城市交通拥堵问题，各国纷纷提出智能交通的发展计划，希望利用智能交通来解决城市的交通问题。&lt;/p&gt;&lt;p&gt;自从美国第一个开始智能交通体系研究以来，日本、欧盟、澳大利亚等国家和地区相继开展了智能交通系统规划、研究及应用。各国政府、各投资主体和系统用户逐渐认识到ITS在缓解城市交通拥堵中所起到的重要作用。下面介绍国外ITS的规划发展情况。&lt;/p&gt;&lt;p&gt;美国：美国运输部于1989 年颁布了《运输部信息资源管理手册》，用于支持运输部各信息系统运转的信息资源统一规划。该《手册》具有很强的权威性和法律效用，对统一和规范运输部的信息化行为，确保信息化目标的实现具有积极的促进和保证作用。目前，美国已经建立了完善的ITS体系结构，其由出行及交通管理、公共交通运营、电子付费服务、商用车辆营运、应急管理、先进的车辆控制与安全系统等七大系统构成。&lt;/p&gt;&lt;p&gt;日本：日本的ITS应用主要是在交通信息提供、电子收费、公共交通、商业车辆管理以及紧急车辆优先等方面。由日本警察厅主持开发的“21世纪交通管理系统UTMS21”是日本ITS的主要组成部分之一。它是由智能交通控制系统和8个子系统组成。智能交通控制系统是UTMS21的核心，它是利用红外车辆检测装置与车辆进行双向通信、高速图像处理，以实现实时信号最佳控制和信息服务。八个子系统分别为：（1）先进的车辆信息系统（2）公交优先系统（3）车辆运行管理系统（4）动态路线诱导系统（5） 紧急救援与公众安全系统（6）环境保护管理系统（7）安全驾驶支持系统（8）智能图像处理系统。&lt;br/&gt;欧盟：欧盟也很重视ITS发展，将其作为欧盟项目，从全欧的角度进行规划和协调，制定统一的框架结构，作为各成员国ITS发展的基础和指导。欧洲重要的ITS发展几乎均需得到欧盟理事会的批准，纳入高层次的经济和社会发展计划，提供财政支持，保证经费供给。为了推进ITS的发展，欧盟国家推出的项目主要有1970-1985年的COST30（Cooperation in the field of Scientific and Technical Research, 科学技术领域研究协作），该项目主要针对车辆、道路与驾驶员的通讯技术进行研究。&lt;/p&gt;&lt;p&gt;澳大利亚：澳大利亚运输与地区服务部(DoTRS) 在交通信息化方面最重要的举措是制定《联机行动计划》，将业务工作通过网络来实现。运输与地区服务部为澳大利亚提供更好的运输系统，以帮助政府实现其在运输与地区服务中的政策目标，并为内阁部长和会议提供政策建议，还提供行政管理、研究、规章、调查、安全、补助与领地的服务。&lt;/p&gt;&lt;h2 style=" font-size: 18px; margin-top: 16px; margin-bottom: 16px; padding-top: 10px; padding-bottom: 10px; line-height: 18px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); color: rgb(68, 68, 68) ; ;; white-space: normal; "&gt;&lt;span&gt;&lt;strong&gt;4.智能交通发展存在的问题&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;智能交通承载着人们从根本上解决交通拥堵问题的梦想，但是智能交通由于成本投入巨大，产业链过长，建设周期过长等原因，并没有在解决城市交通拥堵问题上取得实质性的进展，人们依然生活拥堵、焦虑、污染严重的环境中。&lt;br/&gt;现有的智能交通发展存在如下几点问题：&lt;/p&gt;&lt;p&gt;（1）产业链过长，利益相关方过多，协调难度大。智能交通涉及道路管理部门、交通管理部门、公共交通运营商、汽车生产商、车主等利益相关方，他们各自的诉求难以统一，协调难度巨大。所以，现在的智能交通大多由政府牵头发起，这也从侧面说明协调难度大。虽然，政府主导智能交通建设，但是，各利益相关方在标准上难以达成统一，限制了智能交通的发展。&lt;/p&gt;&lt;p&gt;（2）系统复杂，建设周期过长。智能交通由于其复杂性，以及各方难以统一标准，建设周期太长，各国在上世界80年代开始智能交通研究，直至今天也没解决交通拥堵问题。&lt;/p&gt;&lt;p&gt;（3）成本巨大，现在的智能交通方案由于过于庞大，过于复杂，造成成本巨大，经济可行性不高。&lt;/p&gt;&lt;p&gt;（4）对交通数据的采集问题难以解决，采集大量交通数据这是智能交通的先决条件。要想采集大量车辆的行驶数据，在每个车辆上加装专用设备或者在道路上安装大量传感器，我们不考虑传感器的可操作性及精确度，单是基于成本考虑，这种方案的可行性就比较低。&lt;/p&gt;&lt;h2 style=" font-size: 18px; margin-top: 16px; margin-bottom: 16px; padding-top: 10px; padding-bottom: 10px; line-height: 18px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); color: rgb(68, 68, 68) ; ;; white-space: normal; "&gt;&lt;span&gt;&lt;strong&gt;5.大数据的形成&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;为了促进智能交通的发展，提高智能交通的可行性，必须将智能交通推入大数据时代，必须解决如何低成本建立大数据的问题。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;5.1基于众包模式的数据采集&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;为了解决现有智能交通数据采集方案可操作性过低的问题，提出基于众包模式的数据采集方案。将数据采集的任务交给汽车和公路上的摄像头。&lt;br/&gt;汽车本身具备一个完整的电子系统，这个电子系统收集了发动机、底盘、车速、胎压等各项数据。将汽车电子系统收集到的汽车行驶数据通过移动互联网传输至数据中心，从而完成交通数据的收集问题。&lt;/p&gt;&lt;p&gt;目前，各城市的公路上已经安装了大量的摄像头，可以利用已安装的摄像头并结合模式识别技术，将摄像头图像中的车辆信息提取出来。从而实现对车辆的监控、管理等功能。&lt;/p&gt;&lt;p&gt;这种基于众包模式的数据收集方式不仅解决了数据收集问题，而且数据收集成本非常低。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;5.2 数据的社会化&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;汽车电子系统的数据仅供汽车本身使用，这些数据是封闭的。封闭的数据是难以产生效用的。封闭的数据就像信息孤岛一样，不能进行数据分析和数据挖掘。只有这些数据相互连接、相互共享，这些数据才能反映一个真实的社会。&lt;/p&gt;&lt;p&gt;社会化的数据不是将孤立数据进行叠加，而是可以对其进行数据分析和挖掘，发现社会运行规律，从而可以为社会更好的发展提供指导。所以，汽车的行驶数据进行社会化，对于智能交通具有重要的意义。&lt;/p&gt;&lt;h2 style=" font-size: 18px; margin-top: 16px; margin-bottom: 16px; padding-top: 10px; padding-bottom: 10px; line-height: 18px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); color: rgb(68, 68, 68) ; ;; white-space: normal; "&gt;&lt;span&gt;&lt;strong&gt;6.技术方案&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;技术方案主要包括四部分：汽车电子系统与智能手机接口、智能手机、摄像头、数据中心，如下图。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAr6PQMXfcA4HFLERkD8XIicmQpy6nvDjOmKEcygQicATOWUfc2E0eibGBuA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;图1 结构图&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;汽车电子系统与智能手机接口：为了实现汽车电子系统与智能手机的通信，必须设置一个接口，针对不同的汽车特点，接口设置方式不同，比如蓝牙方式、数据线连接等。这个可以实现将汽车行驶数据传输给智能手机。为了汽车电子系统的安全性，数据传输方式限制为单向传输，只允许将数据由汽车电子系统传输至智能手机，反向传输则为禁止的。&lt;/p&gt;&lt;p&gt;智能手机：一方面接受来自汽车电子系统传输来的数据，一方面利用手机自带的传感器，采集行驶数据，比如定位数据等。将两方面的数据汇总后通过移动互联网传输至数据中心。同时，接受来自数据中心的数据，并将其显示在屏幕上，或者采用语音方式进行提醒。&lt;/p&gt;&lt;p&gt;摄像头：主要是分布在城市公路上的各个摄像头，摄像头将拍摄到的图像传输给数据中心。&lt;/p&gt;&lt;p&gt;数据中心：接受来自大量智能手机和摄像头传输来的数据，并进行数据分析和数据挖掘，并根据数据挖掘结果进行车辆监控、管理、收费以及行车路线建议等功能。&lt;/p&gt;&lt;h2 style=" font-size: 18px; margin-top: 16px; margin-bottom: 16px; padding-top: 10px; padding-bottom: 10px; line-height: 18px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); color: rgb(68, 68, 68) ; ;; white-space: normal; "&gt;&lt;span&gt;&lt;strong&gt;7.应用示例&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;下面提出两个具体应用示例来阐述大数据在智能交通中的具体应用。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;7.1 根据交通拥堵情况进行车辆最优路线导航&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;利用数据中心采集到的大量车辆的定位和车速数据，从而分析出某一路段的交通拥堵情况。并反馈给各手机终端，并结合车主目的地信息给出最佳路线，引导车主以最少时间到达目的地。&lt;/p&gt;&lt;p&gt;在本示例中各部分功能：&lt;/p&gt;&lt;p&gt;汽车电子系统与智能手机接口：将车速数据通过蓝牙或数据线发送给手机终端。&lt;/p&gt;&lt;p&gt;智能手机：利用GPS功能完成车辆定位，并将位置和速度信息发送至数据中心。同时，接受来自数据中心关于交通拥堵情况的信息以及数据中心给出的建议行车路线，并实时显示在手机屏幕上。&lt;/p&gt;&lt;p&gt;数据中心：收集大量手机发送来的定位和速度数据，根据同一路段的大量车速数据分析此路段的拥堵情况，并实时将拥堵情况发送至智能手机上。同时，数据中心会根据目的地和拥堵情况给出建议行车路线，使用户可以以最短的时间到达目的地。&lt;/p&gt;&lt;p&gt;此系统的特点是：使用的用户越多，对拥堵程度的判断就越准确。&lt;/p&gt;&lt;p&gt;此系统的初级阶段（少部分车辆使用此系统）：根据各路段交通拥堵情况，给出最优路线。由于某路段交通畅通，大家得到消息后，可能会出现大量车辆涌向此路段，反而造成交通拥堵的情况。&lt;/p&gt;&lt;p&gt;此系统的终极阶段（大部分车辆使用此系统）：如果大部分车辆使用此系统，数据中心可以根据各路段的车容量给所有在路上行驶的车辆进行路线规划，从而避免出现大量车辆涌向同一路段的情况。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;7.2 利用车牌识别进行车辆出入管理和收费&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;利用居民小区、停车场、高速公路的出入口的摄像头，并结合车牌识别技术，实现对车辆身份的识别，从而进行车辆出入管理、停车场收费、公路收费等功能。&lt;/p&gt;&lt;p&gt;在本示例中各部分功能：&lt;/p&gt;&lt;p&gt;摄像头：当车辆出入时拍摄图像，并将图像传输至数据中心。&lt;/p&gt;&lt;p&gt;数据中心：对各摄像头传输来的图像进行处理，识别车辆身份，并结合出入卡口及计费系统进行出入管理和收费。&lt;/p&gt;&lt;p&gt;此系统的优势：对于小区、写字楼的车辆出入管理，无需车主办理门禁卡，只需要将车牌信息在系统登记即可，既不需要停车刷卡，也不需要办理门禁卡，既方便，又节省成本。对于收费停车场、收费公路，进入时无需取卡，非常快捷方便。相较于ETC系统，无需车主购买车载ETC设备，大大节省成本。&lt;/p&gt;&lt;h2 style=" font-size: 18px; margin-top: 16px; margin-bottom: 16px; padding-top: 10px; padding-bottom: 10px; line-height: 18px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); color: rgb(68, 68, 68) ; ;; white-space: normal; "&gt;&lt;span&gt;&lt;strong&gt;8.总结与展望&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;利用汽车电子系统和公路摄像头采集到的数据完成大数据的建立。利用这种众包模式进行数据收集既能完成大量数据的精确收集，同时，又解决了数据收集成本过高的问题。&lt;/p&gt;&lt;p&gt;数据收集完成后要打破孤立数据之间的藩篱，将数据进行社会化从而建立真正的大数据，将智能交通也推进入大数据时代。&lt;/p&gt;&lt;p&gt;利用收集到的大数据进行数据分析和挖掘，从而对交通进行智能调度、监控和管理。&lt;/p&gt;&lt;p&gt;随着物联网技术的发展，智能交通也将迎来突飞猛进发展。21世纪将是公路交通智能化的世纪，在智能交通系统中，数据中心收集来自各个终端的数据，并对数据进行分析和挖掘，从而将道路交通流量调整至最佳状态，使城市交通更加高效、有序的进行，进而从根本上解决城市交通的拥堵问题。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;End.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Tue, 27 Sep 2016 09:15:16 +0800</pubDate>
    </item>
    <item>
      <title>Python语法总结</title>
      <link>http://www.iwgc.cn/link/2839712</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArjVTTcLjvDpXpIYTrjhMSryYT6VF582o18JjFpZtHuHPSh71iaqDqpdw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;作者：_赖笔小新&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;简单输入输出&lt;/strong&gt;&lt;/h3&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;输出 &amp;nbsp; print 10 , '十'&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;输入 &amp;nbsp; name = raw_input()&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;python基础&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;数据类型和变量&lt;/span&gt;&lt;br/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArH1rpkMiaGT5bXlntenvL4382Fibq9gcZ78cX8WvYMiceKejSxwiawPPGicA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;字符串和编码&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAr2OuqM4wD4pvwXqd8ezNPMVhOMg7KIxGzCGhUzzqMpg0XZnWgBZQuRQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用list和tuple&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAriceeC3o1yoo8SRSvsN1OZ7iaN3hEjuu7iaqibgugR0ZkZmQAtgk7TQDfaA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;条件判断和循环&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArtS0Tg8ZuFtnPF4OrzX7ia8kO0P5AcTYw8kj2m79ibCVHTfhkibHsmU3xw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用dict和set&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArE7vrQlhmibZJe50fM4O3G6AaicwvxMzZO4s2zBjZDdODteCNAxXOR8OA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;函数&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;定义函数&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArqagEXdPAJZ9FXk8PfMebQnwOyrutTIR1Jxq43xTMGIIyEjes2fgAVQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;br/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;高级特性&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;切片&lt;/span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAricqWYIj61QXPZBBgXicmb9iacUcU9JlS7GricgqGFcu3nb3VfF0Fcffywg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;迭代&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArJhmaerlq2kF8Kpia8GGWqwa11E10sE78TtH7fqwTAvxIibCVIIE3s6mw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;列表生成器&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAr0ictI5xzHXrOxWvc16fSb6ITDVu8m1aqkXnvmvphicvcm1vM4bPRa8Qg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;生成器&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArKWa2yt4xosmaMjCTE54Q8yDXoO7GkONuVXL5amv2edqrgjYVz3XTMQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;函数式编程&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;高阶函数&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArD8L0QVEibNZq6elMkbicsmsWf2fQy1Lu6Xg3pebX4P66BgSTdp5AxDQQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;返回函数&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArGoPRx6RlIfC4w2ib9O6t314I4u8OhwQicd36Qt80BG2icEic2y6KPSCibfQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;匿名函数&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArjg1kJSOA1myuBwPqjeMI3vYwWsxkXNob6bPv2kM7bKNUPnxRPgGujg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;装饰器&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAr8B3Na6NiaWjHxEGZ63GgrORHy1RI8tbSZduupyWpAhNLkIcE0iaoQZdg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;实现&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArwRnh1Bhpne9rsPtzpu1EnBlvk3WFLnGSql5R9vq33ofUib7plMVX1Xw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;偏函数&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArlWaB0BPUQD3oyoic7eDj9qb1AAPzibvD6d1veXgZicpSoOdK8kY3kXxsQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;模块&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;模块&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAryhOU0BnlPnrjdaA0xlVK0CSpBWibCG8ibdm24bS2GHJV5uBvxrHjWzLA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用模块&lt;/span&gt;&lt;/p&gt;&lt;p&gt;这是一个标准模块。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAribrucxmqcFXEI6lJJEDZbdsXqzLjSN6I5eXVZnABMRsXA2RFeC6jfhQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArbicibbL1WJfJZa626r2dntfm5bE5W06TrB35AbJksRylTia3gFUvE2d3w/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;安装第三方模块&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArrju8699FofMwqHqkicyEM4taO9mQvOw9IZow9P4TJbf25bJlWFGYePw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用__future__&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAreP0BXHsSVUcWYtvUX3SQxibibWVywP4vXWQoLeaxs5j2rUXrleP7AJQQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;面向对象编程&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;类和实例&lt;/span&gt;&lt;/p&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;定义类&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArsFzhFT95zutF51RMDsdlSSMQ8coxPCicibHTxTnlnNIvU2dJ1jv2cmYg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;访问限制&lt;/span&gt;&lt;/p&gt;&lt;p&gt;使用__双下划线开头可以让变量成为私有，外部无法访问。也可以通过添加getter、setter来控制访问操作。&lt;/p&gt;&lt;p&gt;&lt;span&gt;继承和多态&lt;/span&gt;&lt;/p&gt;&lt;p&gt;继承就在定义的时候写上父类的名称，多态就覆盖父类的方法。&lt;/p&gt;&lt;p&gt;&lt;span&gt;获取对象信息&lt;/span&gt;&lt;/p&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;使用type()判断类型信息&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用isinstance()判断继承关系&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用dir()获取对象的所有方法和属性&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;面向对象高级编程&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;使用slots&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAraqicuEcVTnganPic3CJWylXnz7ZKtibRGvwGkjZ13eeeiaUtaUIQIYbGLw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;使用@property&lt;/p&gt;&lt;p&gt;如下，定义了一个score的属性&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArIUGO6wzA4ysBCPz20t65DpFmZ3IibbrkXfa5cCZhtgQrjzynaibiam3Kg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;多重继承&lt;/span&gt;&lt;/p&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;最好不要用多重继承，用mixin&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;mixin其中概念，用类来提供一组相似功能。类似实现过的接口。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;定制类&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAribOE4W0zkMWWZib31NQiczlBL2zqNfRXF3avSk8GTI5ibWdJExgkNabkDg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用元类&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArg74P7hBdPgdgxA049yOsc75ticu9Voz5joTTZDFEqagz8ia4jcsMdqiag/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;错误、调试和测试&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;错误&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArZCdVE27tXgkgGCibxYrFhD9eaLGVVx9o2VgRm1u6XXbLcMrHcIx0BUw/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAricVXvicpL0iaSia27eTuPGCyrRjtGQ6bAI45EaYHg11picDWKaVFA1v5ciaQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;调试&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArWEXvmukB7ySCrickVVeBaJjgSq64x07OB0SU6f6nFcLJIkc51aYXdBA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;End.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Mon, 26 Sep 2016 09:51:57 +0800</pubDate>
    </item>
    <item>
      <title>几分钟快速入门Python</title>
      <link>http://www.iwgc.cn/link/2839713</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArNtFaOYgmTTmo8N5lpEbgrg0c3PvlcwYkm71QIjrmRsw41voN3R5SGQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;作者：Domon_Lee&lt;/p&gt;&lt;p&gt;Python由Guido Van Rossum在1991年创造的。它是现今存在的最流行的语言之一。我喜欢上Python是因为其简洁的语法。它基本上通过伪代码执行。&lt;/p&gt;&lt;p&gt;注意：这篇文章适用于Python 2.7，但可能适用于Python 2.x。Python 2.7将在2020年停止支持。&lt;/p&gt;&lt;p&gt;写的Python代码，同时兼容Python 2.7 和 3.x是完全有可能的。通过使用Python的futureimports.通过它可以让你通过Python 3写的代码运行在Python 2下。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAraYRcISKF7lPBPuPBBBs65jwFRus4hCgrEhMSxGDibpdLorYenaaWw1Q/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArzL5pAjoiaYutuFS66AZ5uLUMUsuaJ30JdBrEZMeehIDAH6QeZJwc5mg/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArENECh4PowdBQLRuDvuAGxJU5W9y2yqy5g9gsfs7xjZ0Gibe8trEMibjw/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAroVwJ8fp2Fic9akYMvd6XfULNk53BcXTbTLSNAYY2ZtK6frXhBerdgEw/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArJTewicwXxqwWwK9zMExREyLMhGoibqyCd1WIbjicvCDsOXPdC1bm9QspA/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArW1ds07HextfwEfvKSKyG8IHHwg4AJT3Cdn8f7tQM6zseC5xLWwhofA/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArk7hz1Q0Pt3UYSm288EzVnl7pGjtYw3EPx2KTWic18tWvdVtWOwibbXMg/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArvbXFpk4hf4hcWhWZTCFYyaVUcF1T9hibBnOibW6vlerM70UJ7PVZTfsw/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAribVJZ12jEUbIeI9hYkrIbRVGxV57Pv4COAcAw7Xxdh6UqK0Ehm6dGqw/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArjFvGjpgaYhibColTZeQgCV860Z8ItUo5KgD5dgicaWj4K5FHDsLhwcdw/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAriaoqh99FHeIahaduIk7S7mxFX30fXHdIKt4SDia0pGmHjOfsrUrjib39w/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArQ6kPg4jzA41ryTFiaxSW5toYkpMcFK7LtLwicdLeWJuzFZ0VzSVhhtRw/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAricXVtFCekMaB88Rld8ibDREOt3ByKicSI3jexOkFyT0PEl6vG9YR3XNHg/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArsGEx6N2ibT0iasrUkX9GH2v3aN5un8UKAJEO1JYI1H5tucnIPAzOiasoA/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAribfYzyALy50ZRQAVzBialRnuUPNj4kVVjVRsiatNVKX4pG04dhkKAq6og/0?wx_fmt=jpeg"/&gt;End.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Mon, 26 Sep 2016 09:51:57 +0800</pubDate>
    </item>
    <item>
      <title>推荐系统常用的推荐算法</title>
      <link>http://www.iwgc.cn/link/2839714</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArt7Dy5MevFOhTqd5qwUn9AHduVEcnwWCSXiccAU1FKAzSYb0Xzia6H9Sw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;作者：Nicol&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;一、推荐系统概述和常用评价指标&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;1.1 推荐系统的特点&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在知乎搜了一下推荐系统，果真结果比较少，显得小众一些，然后大家对推荐系统普遍的观点是：&lt;/p&gt;&lt;p&gt;&lt;span&gt;(1)重要性UI&amp;gt;数据&amp;gt;算法，&lt;/span&gt;就是推荐系统中一味追求先进的算法算是个误区，通常论文研究类的推荐方法有的带有很多的假设限制，有的考虑工程实现问题较少，推荐系统需要大量的数据整理和转化，同时更需要考虑公司业务特性以及与现有系统的集成，方能形成推荐系统和业务之间的良性循环;&lt;/p&gt;&lt;p&gt;&lt;span&gt;(2)推荐系统离线测试很好，&lt;/span&gt;上线后要么没有严格的测试结果而只能凭感觉，要么实际效果差强人意，我想主要缘于离线测试比较理想，而在线AB冠军测试无论对于前端还是后台要求都很高，没有雄厚的研发实力难以实现;&lt;/p&gt;&lt;p&gt;&lt;span&gt;(3)推荐系统受到的外部干扰因素特别多(季节、流行因素等)，&lt;/span&gt;整个系统需要不断的迭代更新，没有一劳永逸的事情。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArfNSJveCKWaeUGxUAz5nvxMLJVnJ2iaIyd2vHevQWn6x0lnBiaE69NrQw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1.2 推荐系统的评价指标&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;由于推荐系统比较复杂，所以涉及到的评价指标也很多。当然，用户满意度最为的有效，因为这本来就是推荐系统的最终目标，但是奈何资源有限成本太高，推荐系统还依赖于其它客观评价指标。&lt;/p&gt;&lt;p&gt;&lt;span&gt;(1)推荐准确度：&lt;/span&gt;这个参数可以离线计算所得，而且较为的客观，所以是各大研究论文算法最重要的参考指标。&lt;/p&gt;&lt;p&gt;总体来说，推荐系统有两大任务：“预测”和“推荐”，所以推荐系统准确度的评分包括：&lt;/p&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;评分预测：学习用户的评价模型，用于预测用户对于未接触事物的评分，其实可以看作是一个回归模型，一般用均方根误差或者绝对误差来衡量;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;TopN推荐：给用户一个个性化的推荐列表，其一般通过准确度、召回率等指标评估。其中N也是一个可变参数，可以根据不同的N描绘出对应算法的ROC曲线来进一步评价推荐效果;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;(2)覆盖率&lt;/span&gt;：体现了挖掘算法对发掘长尾商品的能力。最简单的定义是，对所有用户推荐出的产品做并集，然后看这个出现的并集产品与总产品数中所占的比例，这种方式比较的粗线条，因为推荐系统中马太效应频繁，所以好的推荐算法应当是所有商品被推荐的几率差不多，都可以找到各自合适的用户，所以实际中会考虑信息熵、基尼系数等指标。&lt;/p&gt;&lt;p&gt;&lt;span&gt;(3)多样性：&lt;/span&gt;其原理可以表述为不在一棵树上吊死。因整个推荐系统涉及到的因素太多，如果只推荐用户一个类别的相似物品，失败风险比较的大，而且也难以实现整个推荐效益的最大化。&lt;/p&gt;&lt;p&gt;&lt;span&gt;(4)新颖性：&lt;/span&gt;原理就是那些用户没有接触过、没有操作过的商品，或者是流行度比较低的商品，对用户来说是比较新鲜的物品，往往会有意外的效果。个人觉得这个指标有点扯~~&lt;/p&gt;&lt;p&gt;&lt;span&gt;(5)信任度：&lt;/span&gt;这个指标比较的主观，就是让用户信任推荐系统做出的推荐是有根据有理由的，以及推荐系统内部是如何运作的。例如亚马逊的商品推荐会给出推荐理由，作为用户的我会觉得很贴心，否则用户会觉得商家的利益驱动而带有抵触心理。&lt;/p&gt;&lt;p&gt;&lt;span&gt;(6)健壮性：&lt;/span&gt;比如针对关联推荐算法，商户恶意下单提高产品的推荐频率，水军恶意评论等。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;二、静态数据推荐&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;基本上绝大多数算法都会利用用户-产品的交互数据动态生成个性化的推荐。而静态数据指还没生成用户交互数据的时候，这种情况在系统冷启动的时候尤为的常见，常常使用的静态数据包括：&lt;/p&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;(1)用户注册时候的性别、年龄、地域、学历、兴趣等人口统计学信息;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;(2)授权的社交网络账号的好友信息;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这类基于推荐方法简单，可以根据每类用户预先设置好推送内容，也可以根据同类用户相互之间进行推送，但是这种方法面临着推荐颗粒度较大，对于涉及个人品味爱好的个性化强的商品，参考价值有限，同时在大家隐私意识加强的情况下，这类数据不见得能够轻易得到;第二类社交网络好友信息效果会比较好，但也需要相应的平台授权接入才可以。&lt;/p&gt;&lt;p&gt;然后这里引申出对于新加入的用户和新加入的商品的冷启动问题：&lt;/p&gt;&lt;p&gt;&lt;span&gt;新加入用户：&lt;/span&gt;推送热门商品;选择用上面人口统计信息进行粗粒度的推送;如果可以得到合作商数据，获取其好友信息，选择接近的好友进行UserCF推荐;向用户展示一些商品(热们常见、具有代表性和区分性、物品要多样性)，得到用户的反馈，然后进行学习(Nadav Golbandi算法);&lt;/p&gt;&lt;p&gt;&lt;span&gt;新加入商品：&lt;/span&gt;UserCF对新加入的物品冷启动不是很敏感，因为只要有用户发现这个新商品，这个新商品就会慢慢扩散开来。对于ItemCF就比较严重，比如可以考虑开始使用基于内容的推荐，等积累数据一定程度后切换成协同过滤推荐。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;三、基于内容的推荐&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;其主要根据用户之前的喜好，推荐相似的物品。&lt;/span&gt;该系统包括用户属性和产品属性两方面构成，前者包括用户的固有属性(比如人口统计信息)以及用户的历史商品交互信息(比如对看过电影的评分，然后得到该用户对于喜欢电影的属性描述)，后者是对商品的本身属性描述，这样通过简单的余弦相似度就可以实现推荐了。&lt;/p&gt;&lt;p&gt;同时也能感觉到，对于同类型的物品描述维度相似，这种算法会工作的比较好，对于电商千奇百怪的商品，可能工作效果一般。&lt;/p&gt;&lt;p&gt;这个方法核心要解决的问题是推荐是否具有扩张性，如果根据用户之前的爱好只不断推荐同类的产品，显然整个推荐系统的价值就十分有限，但是如果能准确推荐其他不同类别的商品就会很好了。&lt;/p&gt;&lt;p&gt;&lt;span&gt;Pandora的音乐推荐就是个典型的基于内容的推荐系统，他们把音乐使用各种维度的属性进行描述，然后根据用户之前的兴趣爱好推荐相似属性风格的音乐。&lt;/span&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;四、协同过滤算法&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;协同过滤算法算是推荐系统中最经典的算法了，也称为基于领域的算法。协同过滤牵涉到用户和商品的交互信息，也就是用户行为，而一般用户对于商品的行为反馈有：&lt;/p&gt;&lt;p&gt;&lt;span&gt;显性反馈行为&lt;/span&gt;——用户明确表现出对某项产品和的喜好，比如用户对商品的打分、评论等信息。&lt;/p&gt;&lt;p&gt;&lt;span&gt;隐性反馈行为&lt;/span&gt;——不能明确代表用户对产品喜好的行为，比如页面浏览行为等，这类数据量的比较多，常常伴有大量的噪音，需要经过处理和转化才可能有实际的用途。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;4.1 基于用户的协同过滤算法(UserCF)&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;其基于的假设是——喜欢类似物品的用户可能有相同或者相似的口味和偏好。UserCF实现的步骤包括：&lt;/p&gt;&lt;p&gt;&lt;span&gt;(1)找到与目标用户兴趣相似的用户群;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;假设用户u和v的正反馈的商品集合为N(u)，N(v)，那么两者兴趣相似度可以记为&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArtncicg3xS2RaibibPOSvwqCiaNnOuSLicUT7qjasjxoEnytmJibYZgFOmUlA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;center style="color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;"&gt;&lt;/center&gt;&lt;p&gt;&lt;span&gt;(2)找到这个集合中用户喜欢的，而目标用户没有听说过得商品推荐之;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;UserCF提供的一个参数K表示要考虑目标用户兴趣最相似的人的个数，在保证精度的同时，K不宜过大，否则推荐结果会趋向于热门商品，流行度指标和覆盖度指标都会降低。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;4.2 基于内容的协同过滤算法(ItemCF)&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;目前用的最广泛的推荐算法，不是通过商品本身，而是通过用户对商品的行为来计算商品之间的相似度，其假设能够引起用户兴趣的商品，必定与其之前评分高的商品相似。ItemCF的操作步骤包括：&lt;/p&gt;&lt;p&gt;&lt;span&gt;(1)计算商品之间的相似度。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;物品相似度可以表示为(其实跟前面的支持度比较像)&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoAr1MGsnxvbnjqH0ic6ABZHn4voXkSwYlj0GVT4xg3fNPZMcEGxkicQOY0g/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;第二个式子比第一个式子好在可以惩罚过热产品j。&lt;/p&gt;&lt;p&gt;&lt;span&gt;(2)根据商品的相似度和用户的历史行为，给用户生成推荐列表。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;4.3 基于模型的协同过滤算法&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;User-CF和Item-CF合称为memory-based CF，而model-based CF使用一般机器学习的方式，其基于样本的用户喜好信息，训练出一个推荐模型，然后根据实时的用户喜好的信息进行预测和计算推荐。&lt;/p&gt;&lt;p&gt;常用的模型包括LSI、贝叶斯网络等。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;4.4 UserCF和ItemCF之间的比较&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在现实的情况中，往往物品的个数是远远小于用户的数量的，而且物品的个数和相似度相对比较稳定，可以离线完成工作量最大的相似性计算步骤，从而大大降低了在线计算量，基于用户的实时性更好一些。&lt;/p&gt;&lt;p&gt;但是具体使用的场景，还需要根据具体的业务类型来区分，User-CF偏重于反应用户小群体热点，更具社会化，而Item-CF在于维持用户的历史兴趣，比如：&lt;/p&gt;&lt;p&gt;&lt;span&gt;对于新闻、阅读类的推荐，新闻阅读类的信息是实时更新的，&lt;/span&gt;所以ItemCF在这种情况下需要不断更新，而用户对新闻的个性化推荐不是特别的强烈情况，用户有新行为不会导致相似用户的剧烈运动。&lt;/p&gt;&lt;p&gt;&lt;span&gt;对于电子商务类别的，&lt;/span&gt;由于用户消费代价比较高，所以对个性化的精确程度要求也比较高，而一段用户有新的行为，也会导致推荐内容的实时变化&lt;/p&gt;&lt;p&gt;&lt;span&gt;协同过滤的算法缺点也很明显，除了上面的冷启动之外，往往商家的用户数量和产品数量都很多，所以矩阵的计算量会非常的大，&lt;/span&gt;但某个具体的用户往往买的东西又有限，所以数据同时也是高度稀疏的。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;五、基于标签的推荐方法&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;基于标签的推荐算法也是十分常见的，比如豆瓣网、京东的商品评论等。标签信息一般分为专家、学者类打的标签;一类为普通用户给商品打的标签(UGC, User Generated Content)。而标签的内容一般要么描述商品本身的，比如名字、类别、产地等，也或者用户对商品的观点评价，比如便宜、好用、性能强等，三元组(用户、物品、标签)通过标签将用户和物品进行联系。&lt;/p&gt;&lt;p&gt;基于标签推荐最简单的例子比如：统计一个用户最常用的标签，统计每个物品最常被打的标签，然后两者通过一定的关系推荐起来;当然也可以展现标签云，让用户点击自己感兴趣的标签，然后依此个性化推荐。&lt;/p&gt;&lt;p&gt;国内的京东、淘宝、豆瓣都大量使用标签信息。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYiby1Z1u6bVwuICBu7vRraoArqic6RFuUAHo5pfS1TVLs2ekBHjIAbYU2QZlxicWQILgVkOxVoyYopZVA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;由于标签的评价用户主观性比较强，所以一方面同样意思用户的用语差异性比较大，规范化可以考虑：&lt;span&gt;用户评价的时候提供常用标签，让用户点击可以减少输入差异，而推荐的标签包括该物品描述性较好的标签，以及用户自己常用的标签(用户一致性);人为或者通过自然语言处理技术对标签进行整理，对于用户积极和消极的评价进行区分;标签也有长尾分布效应，所以除了热门标签外怎么提取那些差异化的有用标签进行更精确的推荐也是应当研究的课题(卡方分布/SVD)。&lt;/span&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;参考文献&lt;/strong&gt;&lt;/h3&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;探索推荐引擎内部的秘密，第 {1,2,3} 部分&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;推荐系统实践&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;(2011-)2014 年终总结：技术篇&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Netflix Prize 中的协同过滤算法&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;End.&lt;/p&gt;</description>
      <pubDate>Mon, 26 Sep 2016 09:51:57 +0800</pubDate>
    </item>
    <item>
      <title>数据结构常见的八大排序算法</title>
      <link>http://www.iwgc.cn/link/2804445</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEibdJVVib3nvKgNeico5uPcX26w5cWd94h5SW3zmicSFz3AyKr56t1pvfpQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;作者：LeeLom&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;八大排序，三大查找是《数据结构》当中非常基础的知识点，在这里为了复习顺带总结了一下常见的八种排序算法。&lt;/p&gt;&lt;p&gt;常见的八大排序算法，他们之间关系如下：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEQIbbe1thntHPlUC411znMKPmhP0bCicLdyeubOaGr3W3a72nffJPgCg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;他们的性能比较：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEqOEtPXicYXXpCC59prJpicTMhXaH8CSNg5A77mc2KPwdK0626Im0mLmg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;下面，利用Python分别将他们进行实现。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;直接插入排序&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;算法思想：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEsN513CdpxbIdzuyts3qRudzibFRQkv2YSN4l7O8YpCmNSzRMwDkXdFw/0?wx_fmt=gif"/&gt;&lt;/p&gt;&lt;p&gt;直接插入排序的核心思想就是：将数组中的所有元素依次跟前面已经排好的元素相比较，如果选择的元素比已排序的元素小，则交换，直到全部元素都比较过。&lt;/p&gt;&lt;p&gt;因此，从上面的描述中我们可以发现，直接插入排序可以用两个循环完成：&lt;/p&gt;&lt;p&gt;&lt;span&gt;第一层循环&lt;/span&gt;：遍历待比较的所有数组元素&lt;/p&gt;&lt;p&gt;&lt;span&gt;第二层循环：&lt;/span&gt;将本轮选择的元素(selected)与已经排好序的元素(ordered)相比较。如果：selected &amp;gt; ordered，那么将二者交换&lt;/p&gt;&lt;p&gt;&lt;span&gt;代码实现&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVElNkXbgsoN4rWRQiaECowNYicY0yECeWoIeTibEZOib84ScOxbpKUtia9yvA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;希尔排序&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;算法思想：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEKGmKg0Cwj6kKRdI2YNqPXWonxA4R6ribIoFmJVG21L5w4KbwicNibPObQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;希尔排序的算法思想：将待排序数组按照步长gap进行分组，然后将每组的元素利用直接插入排序的方法进行排序;每次将gap折半减小，循环上述操作;当gap=1时，利用直接插入，完成排序。&lt;/p&gt;&lt;p&gt;同样的：从上面的描述中我们可以发现：希尔排序的总体实现应该由三个循环完成：&lt;/p&gt;&lt;p&gt;&lt;span&gt;第一层循环：&lt;/span&gt;将gap依次折半，对序列进行分组，直到gap=1&lt;/p&gt;&lt;p&gt;&lt;span&gt;第二、三层循环：&lt;/span&gt;也即直接插入排序所需要的两次循环。具体描述见上。&lt;/p&gt;&lt;p&gt;&lt;span&gt;代码实现：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEBiaRIyUu35TpWic6ibDDv3H0sP3nnsrnV8UOOeZ2OujEjgb8VBZBuMuXQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;简单选择排序&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;算法思想&lt;/p&gt;&lt;center style="color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVE8yqPKIexg2nuVhshLL9fhcJzjnxAjNJO27bCMGOTBvr2Uicy3BIrU0Q/0?wx_fmt=gif"/&gt;&lt;/center&gt;&lt;p&gt;&lt;span&gt;简单选择排序的基本思想：比较+交换。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;从待排序序列中，找到关键字最小的元素;&lt;/p&gt;&lt;p&gt;如果最小元素不是待排序序列的第一个元素，将其和第一个元素互换;&lt;/p&gt;&lt;p&gt;从余下的 N - 1 个元素中，找出关键字最小的元素，重复(1)、(2)步，直到排序结束。&lt;/p&gt;&lt;p&gt;因此我们可以发现，简单选择排序也是通过两层循环实现。&lt;/p&gt;&lt;p&gt;&lt;span&gt;第一层循环：&lt;/span&gt;依次遍历序列当中的每一个元素&lt;/p&gt;&lt;p&gt;&lt;span&gt;第二层循环：&lt;/span&gt;将遍历得到的当前元素依次与余下的元素进行比较，符合最小元素的条件，则交换。&lt;/p&gt;&lt;p&gt;&lt;span&gt;代码实现&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEYniaW4hQGH1IWuNSN9N3WkhrhrdiaXvbTQesupEXf0SDQHMooLV6QLhQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;堆排序&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;堆的概念&lt;/span&gt;&lt;/p&gt;&lt;p&gt;堆：本质是一种数组对象。特别重要的一点性质：任意的叶子节点小于(或大于)它所有的父节点。对此，又分为大顶堆和小顶堆，大顶堆要求节点的元素都要大于其孩子，小顶堆要求节点元素都小于其左右孩子，两者对左右孩子的大小关系不做任何要求。&lt;/p&gt;&lt;p&gt;利用堆排序，就是基于大顶堆或者小顶堆的一种排序方法。下面，我们通过大顶堆来实现。&lt;/p&gt;&lt;p&gt;基本思想：&lt;/p&gt;&lt;p&gt;堆排序可以按照以下步骤来完成：&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先将序列构建称为大顶堆;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;(这样满足了大顶堆那条性质：位于根节点的元素一定是当前序列的最大值)&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVE1Dwwo2YOfxibZIxOs1PEEfc4kzd4bpczqNdLrgtWISkJichZQQIegdsA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;取出当前大顶堆的根节点，将其与序列末尾元素进行交换;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;(此时：序列末尾的元素为已排序的最大值;由于交换了元素，当前位于根节点的堆并不一定满足大顶堆的性质)&lt;/p&gt;&lt;p&gt;&lt;span&gt;对交换后的n-1个序列元素进行调整，使其满足大顶堆的性质;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVE34mdnKJr2ibbncID5AHV9OTHKAjibddNnp1MdUTu8iaRakYLW6j3sQNuw/0?wx_fmt=jpeg"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;重复2.3步骤，直至堆中只有1个元素为止&lt;/p&gt;&lt;p&gt;代码实现：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEh1G6YwGMicSaSANzAYAXLefORSsvmTHyGFR24BouPbGo49ibeUwZ6g4w/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEl3AnuiaLMgYr7L0wnkYWXygcDjqyqUFMqtHTUwrkG9m1LTpicYciaTrpA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;冒泡排序&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;基本思想&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVE8ZeliazpGHYiabHK2yL3rXfUvGzoDSA5ViamM3SVAS0nNdgAJtSTwZlew/0?wx_fmt=gif"/&gt;&lt;/p&gt;&lt;p&gt;冒泡排序思路比较简单：&lt;/p&gt;&lt;ol style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;将序列当中的左右元素，依次比较，保证右边的元素始终大于左边的元素;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;( 第一轮结束后，序列最后一个元素一定是当前序列的最大值;)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;对序列当中剩下的n-1个元素再次执行步骤1。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;对于长度为n的序列，一共需要执行n-1轮比较&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;(利用while循环可以减少执行次数)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;*代码实现&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEpRc6dh7I0fD1LCOwtk6sGlp5rsbWMyEzScMiallic30Rib5W1rjibaVseQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;快速排序&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;算法思想：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEntcZM5RlM9cKRloMYPJbcVTxhWdHp6uea4eibtk63TsQpF8A5flxrqg/0?wx_fmt=gif"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;快速排序的基本思想：挖坑填数+分治法&lt;/span&gt;&lt;/p&gt;&lt;ol style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;从序列当中选择一个基准数(pivot)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在这里我们选择序列当中第一个数最为基准数&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;将序列当中的所有数依次遍历，比基准数大的位于其右侧，比基准数小的位于其左侧&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;重复步骤1.2，直到所有子集当中只有一个元素为止。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;用伪代码描述如下：&lt;/p&gt;&lt;p&gt;1.i =L; j = R; 将基准数挖出形成第一个坑a[i]。&lt;/p&gt;&lt;p&gt;2.j--由后向前找比它小的数，找到后挖出此数填前一个坑a[i]中。&lt;/p&gt;&lt;p&gt;3.i++由前向后找比它大的数，找到后也挖出此数填到前一个坑a[j]中。&lt;/p&gt;&lt;p&gt;4.再重复执行2，3二步，直到i==j，将基准数填入a[i]中&lt;/p&gt;&lt;p&gt;&lt;span&gt;代码实现：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEvc7DOedKCwrZ7jDmBda3qAxbMb62pibriaZ5xkJs0fN4afDtLrbiaAZJw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;归并排序&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;算法思想：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEr5JrpiajibawBnhFr9Y7aWuI1AwickJQ7H38FUsBfDMxM66cGBtCRn34Q/0?wx_fmt=gif"/&gt;&lt;/p&gt;&lt;p&gt;归并排序是建立在归并操作上的一种有效的排序算法，该算法是采用分治法的一个典型的应用。它的基本操作是：将已有的子序列合并，达到完全有序的序列;即先使每个子序列有序，再使子序列段间有序。&lt;/p&gt;&lt;p&gt;归并排序其实要做两件事：&lt;/p&gt;&lt;ol style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;分解----将序列每次折半拆分&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;合并----将划分后的序列段两两排序合并&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;因此，归并排序实际上就是两个操作，拆分+合并&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;如何合并?&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;L[first...mid]为第一段，L[mid+1...last]为第二段，并且两端已经有序，现在我们要将两端合成达到L[first...last]并且也有序。&lt;/p&gt;&lt;ol style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;首先依次从第一段与第二段中取出元素比较，将较小的元素赋值给temp[]&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;重复执行上一步，当某一段赋值结束，则将另一段剩下的元素赋值给temp[]&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;此时将temp[]中的元素复制给L[]，则得到的L[first...last]有序&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;如何分解?&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在这里，我们采用递归的方法，首先将待排序列分成A,B两组;然后重复对A、B序列&lt;/p&gt;&lt;p&gt;分组;直到分组后组内只有一个元素，此时我们认为组内所有元素有序，则分组结束。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;代码实现&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEy03gzZVy3zDWQrreflTWanF4ouv0ZfVPicSeckkyXBVAhVQyMIfulTA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;基数排序&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;算法思想&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEWGQAfoaX0gQI91iboPjEPNumhf8VAMSe49CesMLEdQWW5O19v0tt5Yg/0?wx_fmt=gif"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;基数排序：&lt;/span&gt;通过序列中各个元素的值，对排序的N个元素进行若干趟的“分配”与“收集”来实现排序。&lt;/p&gt;&lt;p&gt;&lt;span&gt;分配：&lt;/span&gt;我们将L[i]中的元素取出，首先确定其个位上的数字，根据该数字分配到与之序号相同的桶中&lt;/p&gt;&lt;p&gt;&lt;span&gt;收集：&lt;/span&gt;当序列中所有的元素都分配到对应的桶中，再按照顺序依次将桶中的元素收集形成新的一个待排序列L[ ]&lt;/p&gt;&lt;p&gt;对新形成的序列L[]重复执行分配和收集元素中的十位、百位...直到分配完该序列中的最高位，则排序结束&lt;/p&gt;&lt;p&gt;根据上述“基数排序”的展示，我们可以清楚的看到整个实现的过程&lt;/p&gt;&lt;p&gt;&lt;strong&gt;代码实现&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEBQky0o4ADm7H9w2lzXzIHvdvwTrWogN2Mcfybiaw5IiaUdL6ehnjNwxA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;后记&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;写完之后运行了一下时间比较：&lt;/p&gt;&lt;p&gt;&lt;span&gt;1w个数据时：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEFB9zwf57WqbKOrPu1WKFwVROhJMic31icpTC9vuicbD4bNkDloZ5B2GRg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;10w个数据时：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEz7t8yj6yy5YdqFgyXLxhSKx3wicIziaicnB4KicfqBEc1NMBBou4bv2SIw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;从运行结果上来看，堆排序、归并排序、基数排序真的快。&lt;/p&gt;&lt;p&gt;对于快速排序迭代深度超过的问题，可以将考虑将快排通过非递归的方式进行实现。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;参考资料&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;数据结构可视化：visualgo&lt;/p&gt;&lt;p&gt;希尔排序介绍：希尔排序&lt;/p&gt;&lt;p&gt;堆排序：《算法导论》读书笔记之第6章 堆排序&lt;/p&gt;&lt;p&gt;博客园：静默虚空&lt;/p&gt;&lt;p&gt;参考资料详情请阅读全文。&lt;/p&gt;&lt;p&gt;End.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Fri, 23 Sep 2016 09:30:41 +0800</pubDate>
    </item>
    <item>
      <title>常见的大数据术语表(中英对照)</title>
      <link>http://www.iwgc.cn/link/2804446</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEOYHye8btpC5vcZotPaJjfk78cWADvawbKcIM1Itt2hSspv520bX0Ng/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;译者：小胖妞妞&lt;/p&gt;&lt;p&gt;大数据的出现带来了许多新的术语，但这些术语往往比较难以理解。因此，我们通过本文给出一个常用的大数据术语表，抛砖引玉，供大家深入了解。其中部分定义参考了相应的博客文章。当然，这份术语表并没有100%包含所有的术语，如果你认为有任何遗漏之处，请告之我们。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;A&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;聚合(Aggregation)&lt;/span&gt;&amp;nbsp;– 搜索、合并、显示数据的过程&lt;/p&gt;&lt;p&gt;&lt;span&gt;算法(Algorithms)&lt;/span&gt;&amp;nbsp;– 可以完成某种数据分析的数学公式&lt;/p&gt;&lt;p&gt;&lt;span&gt;分析法(Analytics)&lt;/span&gt;&amp;nbsp;– 用于发现数据的内在涵义&lt;/p&gt;&lt;p&gt;&lt;span&gt;异常检测(Anomaly detection)&lt;/span&gt;&amp;nbsp;– 在数据集中搜索与预期模式或行为不匹配的数据项。除了“Anomalies”,用来表示异常的词有以下几种：outliers, exceptions, surprises, contaminants.他们通常可提供关键的可执行信息&lt;/p&gt;&lt;p&gt;&lt;span&gt;匿名化(Anonymization)&lt;/span&gt;&amp;nbsp;– 使数据匿名，即移除所有与个人隐私相关的数据&lt;/p&gt;&lt;p&gt;&lt;span&gt;应用(Application)&lt;/span&gt;&amp;nbsp;– 实现某种特定功能的计算机软件&lt;/p&gt;&lt;p&gt;&lt;span&gt;人工智能(Artificial Intelligence)&lt;/span&gt;&amp;nbsp;– 研发智能机器和智能软件，这些智能设备能够感知周遭的环境，并根据要求作出相应的反应，甚至能自我学习&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;B&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;行为分析法(Behavioural Analytics)&lt;/span&gt;&amp;nbsp;– 这种分析法是根据用户的行为如“怎么做”，“为什么这么做”，以及“做了什么”来得出结论，而不是仅仅针对人物和时间的一门分析学科，它着眼于数据中的人性化模式&lt;/p&gt;&lt;p&gt;&lt;span&gt;大数据科学家(Big Data Scientist)&lt;/span&gt;&amp;nbsp;– 能够设计大数据算法使得大数据变得有用的人&lt;/p&gt;&lt;p&gt;&lt;span&gt;大数据创业公司(Big data startup)&lt;/span&gt;&amp;nbsp;– 指研发最新大数据技术的新兴公司&lt;/p&gt;&lt;p&gt;&lt;span&gt;生物测定术(Biometrics)&lt;/span&gt;&amp;nbsp;– 根据个人的特征进行身份识别&lt;/p&gt;&lt;p&gt;&lt;span&gt;B字节 (BB: Brontobytes)&lt;/span&gt;&amp;nbsp;– 约等于1000 YB(Yottabytes)，相当于未来数字化宇宙的大小。1 B字节包含了27个0!&lt;/p&gt;&lt;p&gt;&lt;span&gt;商业智能(Business Intelligence)&lt;/span&gt;&amp;nbsp;– 是一系列理论、方法学和过程，使得数据更容易被理解&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;C&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;分类分析(Classification analysis)&lt;/span&gt;&amp;nbsp;– 从数据中获得重要的相关性信息的系统化过程; 这类数据也被称为元数据(meta data),是描述数据的数据&lt;/p&gt;&lt;p&gt;&lt;span&gt;云计算(Cloud computing)&lt;/span&gt;&amp;nbsp;– 构建在网络上的分布式计算系统，数据是存储于机房外的(即云端)&lt;/p&gt;&lt;p&gt;&lt;span&gt;聚类分析(Clustering analysis)&lt;/span&gt;&amp;nbsp;– 它是将相似的对象聚合在一起，每类相似的对象组合成一个聚类(也叫作簇)的过程。这种分析方法的目的在于分析数据间的差异和相似性&lt;/p&gt;&lt;p&gt;&lt;span&gt;冷数据存储(Cold data storage)&lt;/span&gt;&amp;nbsp;– 在低功耗服务器上存储那些几乎不被使用的旧数据。但这些数据检索起来将会很耗时&lt;/p&gt;&lt;p&gt;&lt;span&gt;对比分析(Comparative analysis)&lt;/span&gt;&amp;nbsp;– 在非常大的数据集中进行模式匹配时，进行一步步的对比和计算过程得到分析结果&lt;/p&gt;&lt;p&gt;&lt;span&gt;复杂结构的数据(Complex structured data)&lt;/span&gt;&amp;nbsp;– 由两个或多个复杂而相互关联部分组成的数据，这类数据不能简单地由结构化查询语言或工具(SQL)解析&lt;/p&gt;&lt;p&gt;&lt;span&gt;计算机产生的数据(Computer generated data)&lt;/span&gt;&amp;nbsp;– 如日志文件这类由计算机生成的数据&lt;/p&gt;&lt;p&gt;&lt;span&gt;并发(Concurrency)&lt;/span&gt;&amp;nbsp;– 同时执行多个任务或运行多个进程&lt;/p&gt;&lt;p&gt;&lt;span&gt;相关性分析(Correlation analysis)&lt;/span&gt;&amp;nbsp;– 是一种数据分析方法，用于分析变量之间是否存在正相关，或者负相关&lt;/p&gt;&lt;p&gt;&lt;span&gt;客户关系管理(CRM: Customer Relationship Management)&lt;/span&gt;&amp;nbsp;– 用于管理销售、业务过程的一种技术，大数据将影响公司的客户关系管理的策略&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;D&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;仪表板(Dashboard)&lt;/span&gt;&amp;nbsp;– 使用算法分析数据，并将结果用图表方式显示于仪表板中&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据聚合工具(Data aggregation tools)&lt;/span&gt;&amp;nbsp;– 将分散于众多数据源的数据转化成一个全新数据源的过程&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据分析师(Data analyst)&lt;/span&gt;&amp;nbsp;– 从事数据分析、建模、清理、处理的专业人员&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据库(Database)&lt;/span&gt;&amp;nbsp;– 一个以某种特定的技术来存储数据集合的仓库&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据库即服务(Database-as-a-Service)&lt;/span&gt;&amp;nbsp;– 部署在云端的数据库，即用即付，例如亚马逊云服务(AWS: Amazon Web Services)&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据库管理系统(DBMS: Database Management System)&lt;/span&gt;&amp;nbsp;– 收集、存储数据，并提供数据的访问&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据中心(Data centre)&lt;/span&gt;&amp;nbsp;– 一个实体地点，放置了用来存储数据的服务器&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据清洗(Data cleansing)&lt;/span&gt;&amp;nbsp;– 对数据进行重新审查和校验的过程，目的在于删除重复信息、纠正存在的错误，并提供数据一致性&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据管理员(Data custodian)&lt;/span&gt;&amp;nbsp;– 负责维护数据存储所需技术环境的专业技术人员&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据道德准则(Data ethical guidelines)&lt;/span&gt;&amp;nbsp;– 这些准则有助于组织机构使其数据透明化，保证数据的简洁、安全及隐私&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据订阅(Data feed)&lt;/span&gt;&amp;nbsp;– 一种数据流，例如Twitter订阅和RSS&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据集市(Data marketplace)&lt;/span&gt;&amp;nbsp;– 进行数据集买卖的在线交易场所&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据挖掘(Data mining)&lt;/span&gt;&amp;nbsp;– 从数据集中发掘特定模式或信息的过程&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据建模(Data modelling)&lt;/span&gt;&amp;nbsp;– 使用数据建模技术来分析数据对象，以此洞悉数据的内在涵义&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据集(Data set)&lt;/span&gt;&amp;nbsp;– 大量数据的集合&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据虚拟化(Data virtualization)&lt;/span&gt;&amp;nbsp;– 数据整合的过程，以此获得更多的数据信息，这个过程通常会引入其他技术，例如数据库，应用程序，文件系统，网页技术，大数据技术等等&lt;/p&gt;&lt;p&gt;&lt;span&gt;去身份识别(De-identification)&lt;/span&gt;&amp;nbsp;– 也称为匿名化(anonymization)，确保个人不会通过数据被识别&lt;/p&gt;&lt;p&gt;&lt;span&gt;判别分析(Discriminant analysis)&lt;/span&gt;&amp;nbsp;– 将数据分类;按不同的分类方式，可将数据分配到不同的群组，类别或者目录。是一种统计分析法，可以对数据中某些群组或集群的已知信息进行分析，并从中获取分类规则。&lt;/p&gt;&lt;p&gt;&lt;span&gt;分布式文件系统(Distributed File System)&lt;/span&gt;&amp;nbsp;– 提供简化的，高可用的方式来存储、分析、处理数据的系统&lt;/p&gt;&lt;p&gt;&lt;span&gt;文件存贮数据库(Document Store Databases)&lt;/span&gt;&amp;nbsp;– 又称为文档数据库(document-oriented database), 为存储、管理、恢复文档数据而专门设计的数据库，这类文档数据也称为半结构化数据&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;E&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;探索性分析(Exploratory analysis)&lt;/span&gt;&amp;nbsp;– 在没有标准的流程或方法的情况下从数据中发掘模式。是一种发掘数据和数据集主要特性的一种方法&lt;/p&gt;&lt;p&gt;&lt;span&gt;E字节(EB: Exabytes)&lt;/span&gt;&amp;nbsp;– 约等于1000 PB(petabytes), 约等于1百万 GB。如今全球每天所制造的新信息量大约为1 EB&lt;/p&gt;&lt;p&gt;&lt;span&gt;提取-转换-加载(ETL: Extract, Transform and Load)&lt;/span&gt;&amp;nbsp;– 是一种用于数据库或者数据仓库的处理过程。即从各种不同的数据源提取(E)数据，并转换(T)成能满足业务需要的数据，最后将其加载(L)到数据库&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;F&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;故障切换(Failover)&lt;/span&gt;&amp;nbsp;– 当系统中某个服务器发生故障时，能自动地将运行任务切换到另一个可用服务器或节点上&lt;/p&gt;&lt;p&gt;&lt;span&gt;容错设计(Fault-tolerant design)&lt;/span&gt;&amp;nbsp;– 一个支持容错设计的系统应该能够做到当某一部分出现故障也能继续运行&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;G&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;游戏化(Gamification)&lt;/span&gt;&amp;nbsp;– 在其他非游戏领域中运用游戏的思维和机制，这种方法可以以一种十分友好的方式进行数据的创建和侦测，非常有效。&lt;/p&gt;&lt;p&gt;&lt;span&gt;图形数据库(Graph Databases)&lt;/span&gt;&amp;nbsp;– 运用图形结构(例如，一组有限的有序对，或者某种实体)来存储数据，这种图形存储结构包括边缘、属性和节点。它提供了相邻节点间的自由索引功能，也就是说，数据库中每个元素间都与其他相邻元素直接关联。&lt;/p&gt;&lt;p&gt;&lt;span&gt;网格计算(Grid computing)&lt;/span&gt;&amp;nbsp;– 将许多分布在不同地点的计算机连接在一起，用以处理某个特定问题，通常是通过云将计算机相连在一起。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;H&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;Hadoop&lt;/span&gt;&amp;nbsp;– 一个开源的分布式系统基础框架，可用于开发分布式程序，进行大数据的运算与存储。&lt;/p&gt;&lt;p&gt;&lt;span&gt;Hadoop数据库(HBase)&lt;/span&gt;&amp;nbsp;– 一个开源的、非关系型、分布式数据库，与Hadoop框架共同使用&lt;/p&gt;&lt;p&gt;&lt;span&gt;HDFS&lt;/span&gt;&amp;nbsp;– Hadoop分布式文件系统(Hadoop Distributed File System);是一个被设计成适合运行在通用硬件(commodity hardware)上的分布式文件系统&lt;/p&gt;&lt;p&gt;&lt;span&gt;高性能计算(HPC: High-Performance-Computing)&lt;/span&gt;&amp;nbsp;– 使用超级计算机来解决极其复杂的计算问题&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;I&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;内存数据库(IMDB: In-memory)&lt;/span&gt;&amp;nbsp;– 一种数据库管理系统，与普通数据库管理系统不同之处在于，它用主存来存储数据，而非硬盘。其特点在于能高速地进行数据的处理和存取。&lt;/p&gt;&lt;p&gt;&lt;span&gt;物联网(Internet of Things)&lt;/span&gt;&amp;nbsp;– 在普通的设备中装上传感器，使这些设备能够在任何时间任何地点与网络相连。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;J&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;法律上的数据一致性(Juridical data compliance)&lt;/span&gt;&amp;nbsp;– 当你使用的云计算解决方案，将你的数据存储于不同的国家或不同的大陆时，就会与这个概念扯上关系了。你需要留意这些存储在不同国家的数据是否符合当地的法律。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;K&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;键值数据库(KeyValue Databases)&lt;/span&gt;&amp;nbsp;– 数据的存储方式是使用一个特定的键，指向一个特定的数据记录，这种方式使得数据的查找更加方便快捷。键值数据库中所存的数据通常为编程语言中基本数据类型的数据。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;L&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;延迟(Latency)&lt;/span&gt;&amp;nbsp;– 表示系统时间的延迟&lt;/p&gt;&lt;p&gt;&lt;span&gt;遗留系统(Legacy system)&lt;/span&gt;&amp;nbsp;– 是一种旧的应用程序，或是旧的技术，或是旧的计算系统，现在已经不再支持了。&lt;/p&gt;&lt;p&gt;&lt;span&gt;负载均衡(Load balancing)&lt;/span&gt;&amp;nbsp;– 将工作量分配到多台电脑或服务器上，以获得最优结果和最大的系统利用率。&lt;/p&gt;&lt;p&gt;&lt;span&gt;位置信息(Location data)&lt;/span&gt;&amp;nbsp;– GPS信息，即地理位置信息。&lt;/p&gt;&lt;p&gt;&lt;span&gt;日志文件(Log file)&lt;/span&gt;&amp;nbsp;– 由计算机系统自动生成的文件，记录系统的运行过程。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;M&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;M2M数据(Machine2Machine data)&lt;/span&gt;&amp;nbsp;– 两台或多台机器间交流与传输的内容&lt;/p&gt;&lt;p&gt;&lt;span&gt;机器数据(Machine data)&lt;/span&gt;&amp;nbsp;– 由传感器或算法在机器上产生的数据&lt;/p&gt;&lt;p&gt;&lt;span&gt;机器学习(Machine learning)&lt;/span&gt;&amp;nbsp;– 人工智能的一部分，指的是机器能够从它们所完成的任务中进行自我学习，通过长期的累积实现自我改进。&lt;/p&gt;&lt;p&gt;&lt;span&gt;MapReduce&lt;/span&gt;&amp;nbsp;– 是处理大规模数据的一种软件框架(Map: 映射，Reduce: 归纳)。&lt;/p&gt;&lt;p&gt;&lt;span&gt;大规模并行处理(MPP: Massively Parallel Processing)&lt;/span&gt;&amp;nbsp;– 同时使用多个处理器(或多台计算机)处理同一个计算任务。&lt;/p&gt;&lt;p&gt;&lt;span&gt;元数据(Metadata)&lt;/span&gt;&amp;nbsp;– 被称为描述数据的数据，即描述数据数据属性(数据是什么)的信息。&lt;/p&gt;&lt;p&gt;&lt;span&gt;MongoDB&lt;/span&gt;&amp;nbsp;– 一种开源的非关系型数据库(NoSQL database)&lt;/p&gt;&lt;p&gt;&lt;span&gt;多维数据库(Multi-Dimensional Databases)&lt;/span&gt;&amp;nbsp;– 用于优化数据联机分析处理(OLAP)程序，优化数据仓库的一种数据库。&lt;/p&gt;&lt;p&gt;&lt;span&gt;多值数据库(MultiValue Databases)&lt;/span&gt;&amp;nbsp;– 是一种非关系型数据库(NoSQL), 一种特殊的多维数据库：能处理3个维度的数据。主要针对非常长的字符串，能够完美地处理HTML和XML中的字串。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;N&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;自然语言处理(Natural Language Processing)&lt;/span&gt;&amp;nbsp;– 是计算机科学的一个分支领域，它研究如何实现计算机与人类语言之间的交互。&lt;/p&gt;&lt;p&gt;&lt;span&gt;网络分析(Network analysis)&lt;/span&gt;&amp;nbsp;– 分析网络或图论中节点间的关系，即分析网络中节点间的连接和强度关系。&lt;/p&gt;&lt;p&gt;&lt;span&gt;NewSQL&lt;/span&gt;&amp;nbsp;– 一个优雅的、定义良好的数据库系统，比SQL更易学习和使用，比NoSQL更晚提出的新型数据库&lt;/p&gt;&lt;p&gt;&lt;span&gt;NoSQL&lt;/span&gt;&amp;nbsp;– 顾名思义，就是“不使用SQL”的数据库。这类数据库泛指传统关系型数据库以外的其他类型的数据库。这类数据库有更强的一致性，能处理超大规模和高并发的数据。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;O&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;对象数据库(Object Databases)&lt;/span&gt;&amp;nbsp;– (也称为面象对象数据库)以对象的形式存储数据，用于面向对象编程。它不同于关系型数据库和图形数据库，大部分对象数据库都提供一种查询语言，允许使用声明式编程(declarative programming)访问对象.&lt;/p&gt;&lt;p&gt;&lt;span&gt;基于对象图像分析(Object-based Image Analysis)&lt;/span&gt;&amp;nbsp;– 数字图像分析方法是对每一个像素的数据进行分析，而基于对象的图像分析方法则只分析相关像素的数据，这些相关像素被称为对象或图像对象。&lt;/p&gt;&lt;p&gt;&lt;span&gt;操作型数据库(Operational Databases)&lt;/span&gt;&amp;nbsp;– 这类数据库可以完成一个组织机构的常规操作，对商业运营非常重要，一般使用在线事务处理，允许用户访问 、收集、检索公司内部的具体信息。&lt;/p&gt;&lt;p&gt;&lt;span&gt;优化分析(Optimization analysis)&lt;/span&gt;&amp;nbsp;– 在产品设计周期依靠算法来实现的优化过程，在这一过程中，公司可以设计各种各样的产品并测试这些产品是否满足预设值。&lt;/p&gt;&lt;p&gt;&lt;span&gt;本体论(Ontology)&lt;/span&gt;&amp;nbsp;– 表示知识本体，用于定义一个领域中的概念集及概念之间的关系的一种哲学思想。(译者注: 数据被提高到哲学的高度，被赋予了世界本体的意义，成为一个独立的客观数据世界)&lt;/p&gt;&lt;p&gt;&lt;span&gt;异常值检测(Outlier detection)&lt;/span&gt;&amp;nbsp;– 异常值是指严重偏离一个数据集或一个数据组合总平均值的对象，该对象与数据集中的其他它相去甚远，因此，异常值的出现意味着系统发生问题，需要对此另加分析。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;P&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;模式识别(Pattern Recognition)&lt;/span&gt;&amp;nbsp;– 通过算法来识别数据中的模式，并对同一数据源中的新数据作出预测&lt;/p&gt;&lt;p&gt;&lt;span&gt;P字节(PB: Petabytes)&lt;/span&gt;&amp;nbsp;– 约等于1000 TB(terabytes), 约等于1百万 GB (gigabytes)。欧洲核子研究中心(CERN)大型强子对撞机每秒产生的粒子个数就约为1 PB&lt;/p&gt;&lt;p&gt;&lt;span&gt;平台即服务(PaaS: Platform-as-a-Service)&lt;/span&gt;&amp;nbsp;– 为云计算解决方案提供所有必需的基础平台的一种服务&lt;/p&gt;&lt;p&gt;&lt;span&gt;预测分析(Predictive analysis)&lt;/span&gt;&amp;nbsp;– 大数据分析方法中最有价值的一种分析方法，这种方法有助于预测个人未来(近期)的行为，例如某人很可能会买某些商品，可能会访问某些网站，做某些事情或者产生某种行为。通过使用各种不同的数据集，例如历史数据，事务数据，社交数据，或者客户的个人信息数据，来识别风险和机遇&lt;/p&gt;&lt;p&gt;&lt;span&gt;隐私(Privacy)&lt;/span&gt;&amp;nbsp;– 把具有可识别出个人信息的数据与其他数据分离开，以确保用户隐私。&lt;/p&gt;&lt;p&gt;&lt;span&gt;公共数据(Public data)&lt;/span&gt;&amp;nbsp;– 由公共基金创建的公共信息或公共数据集。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;Q&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;数字化自我(Quantified Self)&lt;/span&gt;&amp;nbsp;– 使用应用程序跟踪用户一天的一举一动，从而更好地理解其相关的行为&lt;/p&gt;&lt;p&gt;&lt;span&gt;查询(Query)&lt;/span&gt;&amp;nbsp;– 查找某个问题答案的相关信息&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;R&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;再识别(Re-identification)&lt;/span&gt;&amp;nbsp;– 将多个数据集合并在一起，从匿名化的数据中识别出个人信息&lt;/p&gt;&lt;p&gt;&lt;span&gt;回归分析(Regression analysis)&lt;/span&gt;&amp;nbsp;– 确定两个变量间的依赖关系。这种方法假设两个变量之间存在单向的因果关系(译者注：自变量，因变量，二者不可互换)&lt;/p&gt;&lt;p&gt;&lt;span&gt;RFID&lt;/span&gt;&amp;nbsp;– 射频识别; 这种识别技术使用一种无线非接触式射频电磁场传感器来传输数据&lt;/p&gt;&lt;p&gt;&lt;span&gt;实时数据(Real-time data)&lt;/span&gt;&amp;nbsp;– 指在几毫秒内被创建、处理、存储、分析并显示的数据&lt;/p&gt;&lt;p&gt;&lt;span&gt;推荐引擎(Recommendation engine)&lt;/span&gt;&amp;nbsp;– 推荐引擎算法根据用户之前的购买行为或其他购买行为向用户推荐某种产品&lt;/p&gt;&lt;p&gt;&lt;span&gt;路径分析(Routing analysis)&lt;/span&gt;&amp;nbsp;– 针对某种运输方法通过使用多种不同的变量分析从而找到一条最优路径，以达到降低燃料费用，提高效率的目的&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;S&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;半结构化数据(Semi-structured data)&lt;/span&gt;&amp;nbsp;– 半结构化数据并不具有结构化数据严格的存储结构，但它可以使用标签或其他形式的标记方式以保证数据的层次结构&lt;/p&gt;&lt;p&gt;&lt;span&gt;情感分析(Sentiment Analysis)&lt;/span&gt;&amp;nbsp;– 通过算法分析出人们是如何看待某些话题&lt;/p&gt;&lt;p&gt;&lt;span&gt;信号分析(Signal analysis)&lt;/span&gt;&amp;nbsp;– 指通过度量随时间或空间变化的物理量来分析产品的性能。特别是使用传感器数据。&lt;/p&gt;&lt;p&gt;&lt;span&gt;相似性搜索(Similarity searches)&lt;/span&gt;&amp;nbsp;– 在数据库中查询最相似的对象，这里所说的数据对象可以是任意类型的数据&lt;/p&gt;&lt;p&gt;&lt;span&gt;仿真分析(Simulation analysis)&lt;/span&gt;&amp;nbsp;– 仿真是指模拟真实环境中进程或系统的操作。仿真分析可以在仿真时考虑多种不同的变量，确保产品性能达到最优&lt;/p&gt;&lt;p&gt;&lt;span&gt;智能网格(Smart grid)&lt;/span&gt;&amp;nbsp;– 是指在能源网中使用传感器实时监控其运行状态，有助于提高效率&lt;/p&gt;&lt;p&gt;&lt;span&gt;软件即服务(SaaS: Software-as-a-Service)&lt;/span&gt;&amp;nbsp;– 基于Web的通过浏览器使用的一种应用软件&lt;/p&gt;&lt;p&gt;&lt;span&gt;空间分析(Spatial analysis)&lt;/span&gt;&amp;nbsp;– 空间分析法分析地理信息或拓扑信息这类空间数据，从中得出分布在地理空间中的数据的模式和规律&lt;/p&gt;&lt;p&gt;&lt;span&gt;SQL&lt;/span&gt;&amp;nbsp;– 在关系型数据库中，用于检索数据的一种编程语言&lt;/p&gt;&lt;p&gt;&lt;span&gt;结构化数据(Structured data)&lt;/span&gt;&amp;nbsp;-可以组织成行列结构，可识别的数据。这类数据通常是一条记录，或者一个文件，或者是被正确标记过的数据中的某一个字段，并且可以被精确地定位到。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;T&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;T字节(TB: Terabytes)&lt;/span&gt;&amp;nbsp;– 约等于1000 GB(gigabytes)。1 TB容量可以存储约300小时的高清视频。&lt;/p&gt;&lt;p&gt;&lt;span&gt;时序分析(Time series analysis)&lt;/span&gt;&amp;nbsp;– 分析在重复测量时间里获得的定义良好的数据。分析的数据必须是良好定义的，并且要取自相同时间间隔的连续时间点。&lt;/p&gt;&lt;p&gt;&lt;span&gt;拓扑数据分析(Topological Data Analysis)&lt;/span&gt;&amp;nbsp;– 拓扑数据分析主要关注三点：复合数据模型、集群的识别、以及数据的统计学意义。&lt;/p&gt;&lt;p&gt;&lt;span&gt;交易数据(Transactional data)&lt;/span&gt;&amp;nbsp;– 随时间变化的动态数据&lt;/p&gt;&lt;p&gt;&lt;span&gt;透明性(Transparency)&lt;/span&gt;&amp;nbsp;– 消费者想要知道他们的数据有什么作用、被作何处理，而组织机构则把这些信息都透明化了。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;U&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;非结构化数据(Un-structured data)&lt;/span&gt;&amp;nbsp;– 非结构化数据一般被认为是大量纯文本数据，其中还可能包含日期，数字和实例。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;V&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;价值(Value)&lt;/span&gt;&amp;nbsp;– (译者注：大数据4V特点之一) 所有可用的数据，能为组织机构、社会、消费者创造出巨大的价值。这意味着各大企业及整个产业都将从大数据中获益。&lt;/p&gt;&lt;p&gt;&lt;span&gt;可变性(Variability)&lt;/span&gt;&amp;nbsp;– 也就是说，数据的含义总是在(快速)变化的。例如，一个词在相同的推文中可以有完全不同的意思。&lt;/p&gt;&lt;p&gt;&lt;span&gt;多样(Variety)&lt;/span&gt;&amp;nbsp;– (译者注：大数据4V特点之一) 数据总是以各种不同的形式呈现，如结构化数据，半结构化数据，非结构化数据，甚至还有复杂结构化数据&lt;/p&gt;&lt;p&gt;&lt;span&gt;高速(Velocity)&lt;/span&gt;&amp;nbsp;– (译者注：大数据4V特点之一) 在大数据时代，数据的创建、存储、分析、虚拟化都要求被高速处理。&lt;/p&gt;&lt;p&gt;&lt;span&gt;真实性(Veracity)&lt;/span&gt;&amp;nbsp;– 组织机构需要确保数据的真实性，才能保证数据分析的正确性。因此，真实性(Veracity)是指数据的正确性。&lt;/p&gt;&lt;p&gt;&lt;span&gt;可视化(Visualization)&lt;/span&gt;&amp;nbsp;– 只有正确的可视化，原始数据才可被投入使用。这里的“可视化”并非普通的图型或饼图，可视化指是的复杂的图表，图表中包含大量的数据信息，但可以被很容易地理解和阅读。&lt;/p&gt;&lt;p&gt;&lt;span&gt;大量(Volume)&lt;/span&gt;&amp;nbsp;– (译者注：大数据4V特点之一) 指数据量，范围从Megabytes至Brontobytes&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;W&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;天气数据(Weather data)&lt;/span&gt;&amp;nbsp;– 是一种重要的开放公共数据来源，如果与其他数据来源合成在一起，可以为相关组织机构提供深入分析的依据&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;X&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;XML数据库(XML Databases)&lt;/span&gt;&amp;nbsp;– XML数据库是一种以XML格式存储数据的数据库。XML数据库通常与面向文档型数据库相关联，开发人员可以对XML数据库的数据进行查询，导出以及按指定的格式序列化&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;Y&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;Y字节 (Yottabytes)&lt;/span&gt;&amp;nbsp;– 约等于1000 ZB (Zettabytes), 约等于250万亿张DVD的数据容量。现今，整个数字化宇宙的数据量为1 YB, 并且将每18年翻一番。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;Z&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;Z字节 (ZB: Zettabytes)&lt;/span&gt;&amp;nbsp;– 约等于1000 EB (Exabytes), 约等于1百万 TB。据预测，到2016年全球范围内每天网络上通过的信息大约能达到1 ZB。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;附：存储容量单位换算表：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;1 Bit(比特) = Binary Digit&lt;/p&gt;&lt;p&gt;8 Bits = 1 Byte(字节)&lt;/p&gt;&lt;p&gt;1,000 Bytes = 1 Kilobyte&lt;/p&gt;&lt;p&gt;1,000 Kilobytes = 1 Megabyte&lt;/p&gt;&lt;p&gt;1,000 Megabytes = 1 Gigabyte&lt;/p&gt;&lt;p&gt;1,000 Gigabytes = 1 Terabyte&lt;/p&gt;&lt;p&gt;1,000 Terabytes = 1 Petabyte&lt;/p&gt;&lt;p&gt;1,000 Petabytes = 1 Exabyte&lt;/p&gt;&lt;p&gt;1,000 Exabytes = 1 Zettabyte&lt;/p&gt;&lt;p&gt;1,000 Zettabytes = 1 Yottabyte&lt;/p&gt;&lt;p&gt;1,000 Yottabytes = 1 Brontobyte&lt;/p&gt;&lt;p&gt;1,000 Brontobytes = 1 Geopbyte&lt;/p&gt;&lt;p&gt;End.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Fri, 23 Sep 2016 09:30:41 +0800</pubDate>
    </item>
    <item>
      <title>KDnuggets 官方调查：数据科学家最常用的十种算法</title>
      <link>http://www.iwgc.cn/link/2804447</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEQUEjM2SyvJ57hskHx91GZZVExzM2BUWIJJTMjWNsdQbhe22hoIzNVQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;译者：机器之心&lt;/p&gt;&lt;p&gt;最新一期的 KDnuggets 调查展示了一份数据科学家使用度最高的算法列表，这份列表中包含了很多惊喜，包括最学术的算法和面向产业化的算法。&lt;/p&gt;&lt;p&gt;&lt;span&gt;哪些方法/算法是您在过去 12 个月中运用到一个实际的数据科学相关的应用程序中的?&lt;/span&gt;&lt;/p&gt;&lt;p&gt;这是基于 844 个投票者的结果。&lt;/p&gt;&lt;p&gt;排名前十的算法以及他们的投票者的比例分布如下：&lt;/p&gt;&lt;center style="color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVECY4ibYMfuANhBYtupriajhSGicQ0T32aSdoZ3J8F2KQkJBfwOHOG5NoVw/0?wx_fmt=jpeg"/&gt;&lt;/center&gt;&lt;p&gt;图 1 ：数据科学家使用度最高的 10 大算法&lt;/p&gt;&lt;p&gt;每个受访者平均使用 8.1 个算法，这相比于 2011 的相似调查显示的结果有了巨大的增长。&lt;/p&gt;&lt;p&gt;与 2011 年关于数据分析/数据挖掘的调查相比，我们注意到最常用的方法仍然是回归、聚类、决策树/Rules 和可视化。&lt;span&gt;相对来说最大的增长是由 (pct2016 /pct2011 – 1) 测定的以下算法：&lt;/span&gt;&lt;/p&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;Boosting，从 2011 年的 23.5% 至 2016 年的 32.8%，同比增长 40%&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;文本挖掘，从 2011 年的 27.7% 至 2016 年的 35.9%，同比增长 30%&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;可视化，从 2011 年的 38.3% 至 2016 年的 48.7%，同比增长 27%&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;时间序列/序列分析，从 2011 年的 29.6% 至 2016 年的 37.0%，同比增长 25%&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;异常/偏差检测，从 2011 年的 16.4% 至 2016 年的 19.5%，同比增长 19%&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;集成方法，从 2011 年的 28.3%至 2016 年的 33.6%，同比增长 19%&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;支持向量机，从 2011 年的 28.6% 至 2016 年的 33.6%，同比增长 18%&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;回归，从 2011 年的 57.9% 至 2016 年的 67.1%，同比增长 16%&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;最受欢迎算法在 2016 年的调查中有了新的上榜名单：&lt;/span&gt;&lt;/p&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;K-近邻，46%&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;主成分分析，43%&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;随机森林，38%&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;优化，24%&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;神经网络 – 深度学习，19%&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;奇异值分解，16%&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;最大幅下降的有：&lt;/span&gt;&lt;/p&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;关联规则，从 2011 年的 28.6% 至 2016 年的 15.3%，同比下降 47%&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;隆起造型，从 2011 年的 4.8% 至 2016 年的 3.1%，同比下降 36%&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;因素分析，从 2011 年的 18.6% 至 2016 年的 14.2%，同比下降 24%&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;生存分析，从 2011 年的 9.3% 至 2016 年的 7.9%，同比下降 15%&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;下表显示了不同的算法类型的使用：监督算法、无监督算法、元算法，以及职业类型决定的对算法的使用。我们排除 NA(4.5%)和其他(3%)的职业类型。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEbkg47xsULde1jNYLamuHnHKEMXHaFDxbiaOpEeo8rFIH4ddicib3RrrXA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;表 1：根据职业类型显示的不同算法使用度&lt;/p&gt;&lt;p&gt;我们注意到，几乎每个人都使用监督学习算法。&lt;/p&gt;&lt;p&gt;政府和产业业数据科学家比学生和学术研究人员使用更多不同类型的算法，而产业数据科学家们更倾向于使用元算法。&lt;/p&gt;&lt;p&gt;接下来，我们根据职业类型分析了前 10 名的算法+深度学习使用情况。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVElXXosLDTkkM7MpRpu1iaWwucp3haC9h9Bryd2LSSiaCiabBgSibj9B9tYw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;表 2：根据职业类型分类的 10 大算法+深度学习使用情况&lt;/p&gt;&lt;p&gt;为了更明显的看到差异，我们计算了具体职业分类相比于平均算法使用度的一个算法偏差，即偏差(ALG，类型)=使用(ALG，类型)/使用(ALG，所有的)&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEdeTv3uwOlMfM8V7pGqNTcoIjmypicj2iaIYPduCskibe4ay95cibhKyWYg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;图 2：职业对算法的使用偏好&lt;/p&gt;&lt;p&gt;我们注意到，产业数据科学家们更倾向于使用回归、可视化、统计、随机森林和时间序列。政府/非营利更倾向于使用可视化、主成分分析和时间序列。学术研究人员更倾向于使用主成分分析和深度学习。学生普遍使用更少的算法，但多为文本挖掘和深度学习。&lt;/p&gt;&lt;p&gt;接下来，我们看看某一具体地域的参与度，表示整体的 KDnuggets 的用户：&lt;/p&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;美国/加拿大，40%&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;欧洲，32%&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;亚洲，18%&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;拉丁美洲，5%&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;非洲/中东，3.4%&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;澳洲/新西兰，2.2%&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;由于在 2011 年的调查中，我们将产业/政府分在了一组，而将学术研究/学生分在了第二组，并计算了算法对于业界/政府的亲切度：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEricvgNVn7YWmJTzgo4NyX3MKSQTibKOFSURBAn0CS0jwo4IEicsg3lrBQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;因此亲切度为 0 的算法表示它在产业/政府和学术研究人员或学生之间的使用情况对等。越高 IG 亲切度表示算法越被产业界普遍使用，反之越接近「学术」。&lt;/p&gt;&lt;p&gt;&lt;span&gt;最「产业」的算法是：&lt;/span&gt;&lt;/p&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;异常检测，1.61&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;生存分析，1.39&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;因子分析，0.83&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;时间序列/序列，0.69&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;关联规则，0.5&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;而 uplifting modeling 又是最「产业的算法」，令人惊讶的发现是，它的使用率极低 – 只有 3.1% – 是本次调查的算法中最低的。&lt;/p&gt;&lt;p&gt;&lt;span&gt;最学术的算法是：&lt;/span&gt;&lt;/p&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;常规神经网络，-0.35&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;朴素贝叶斯，-0.35&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;支持向量机，-0.24&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;深度学习，-0.19&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;EM，-0.17&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;下图显示了所有的算法及其产业/学术亲切度。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEJMWaeeP74ShKKeTTX7ILezvA2KNNq2pgHcZgVQWA1sPhuXII63k6Nw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;图 3：KDnuggets 投票：最常被数据科学家使用的算法：产业界 VS 学术界&lt;/p&gt;&lt;p&gt;下表有关于算法的细节、两次调查中使用算法的比例、以及像上面解释的产业亲切度。&lt;/p&gt;&lt;p&gt;接下来的图表展示了算法的细节，按列&lt;/p&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;N：根据使用度排名&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;算法：算法名称，&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;类型：S – 监督，U – 无监督，M – 元，Z – 其他，&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;在 2016 年调查中使用这种算法的调查者比例&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;在 2011 年调查中使用这种算法的调查者比例&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;变动(%2016 年/2011% – 1)，&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;产业亲切度(如上所述)&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEj8r1zKboIleqjowP8Wgk94ia8Ceq9UL8ibib3LcxbLcgXic8NynL7WYZicA/0?wx_fmt=jpeg"/&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibz9iaFsOHeDZSSteGwwlDtVEibicWN08teic5fSZxbUgJ7yKbaUxHaqIQ6Sr04pxJTxYyq00XAiagn4Xgg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;表 3：KDnuggets 2016 调查：数据科学家使用的算法&lt;/p&gt;&lt;p&gt;End.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Fri, 23 Sep 2016 09:30:41 +0800</pubDate>
    </item>
    <item>
      <title>用Python写一个命令行火车票查看器</title>
      <link>http://www.iwgc.cn/link/2789164</link>
      <description>&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibxkfadTcZgo4QZ7iabicJ3IpicdQsb7NxL6hXBicTH1icpTaYmkPPG0afN1vnFbSgertI02qYvZqnSFlVg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;作者：protream&lt;/p&gt;&lt;p&gt;当你想查询一下火车票信息的时候，你还在上12306官网吗?或是打开你手机里的APP?下面让我们来用Python写一个命令行版的火车票查看器, 只要在命令行敲一行命令就能获得你想要的火车票信息!如果你刚掌握了Python基础，这将是个不错的小练习。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;接口设计&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;一个应用写出来最终是要给人使用的，哪怕只是给你自己使用。所以，首先应该想想你希望怎么使用它?让我们先给这个小应用起个名字吧，既然及查询票务信息，那就叫它tickets好了。我们希望用户只要输入出发站，到达站以及日期就让就能获得想要的信息，所以tickets应该这样被使用：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibxkfadTcZgo4QZ7iabicJ3IpicibbMJjSL8xqIRibmSJgY6sT7EWEqLmso99xW5dxnNzlWvqjBDG5H9KDQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;另外，火车有各种类型，高铁、动车、特快、快速和直达，我们希望可以提供选项只查询特定的一种或几种的火车，所以，我们应该有下面这些选项：&lt;/p&gt;&lt;ul style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;-g 高铁&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;-d 动车&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;-t 特快&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;-k 快速&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;-z 直达&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这几个选项应该能被组合使用，所以，最终我们的接口应该是这个样子的：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibxkfadTcZgo4QZ7iabicJ3Ipic6A3sWIzHz1pILTgiaibrhyWR1Ogmh0V5gficNDicvnsmficSmHtaOEnYM4A/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;接口已经确定好了，剩下的就是实现它了。&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;开发环境&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;写Python程序的一个良好实践是使用virtualenv这个工具建一个虚拟的环境。我们的程序使用Python3开发，下面在你的工作目录下建一个文件夹tickets，进去创建一个虚拟环境：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibxkfadTcZgo4QZ7iabicJ3IpicIpZlZYKymTNgAv9VxWymf7ianOibqOOhib5TGibkBLLfTBTwcDzt9eSLPg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;通过下面的命令激活它：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibxkfadTcZgo4QZ7iabicJ3Ipicc4X9AC1teWUQdgEUnYY5mRXBiaZBA4Burn8TMVMdI7nn5Ric3ejyDqeA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;解析参数&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Python有很多写命令行应用的工具，如argparse, docopt, options...这里，我们选用docopt这个简单易用的工具，我们先安装它：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibxkfadTcZgo4QZ7iabicJ3IpicFSyDfghU9GtQ2a6YXOGulgKR6TKjrWnfVvzQjvJiauDgRlcutODiaH1g/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;docopt可以按我们在文档字符串中定义的格式来解析参数，在tickets.py中：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibxkfadTcZgo4QZ7iabicJ3Ipic23uiaIPUJvKp2eic3iauQtusORoJk9CEobibzyF4p5wLaHv7srFDrHII3Q/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;下面我们运行一下这个程序：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibxkfadTcZgo4QZ7iabicJ3IpicYuWM6EXkSt8FIjXWTdqTsUfDmTH0sibicp4yEvYkrMCibib9khGlVWmmYA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;我们得到下面的参数解析结果：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;{'-d': False, '-g': False, '-k': False, '-t': False, '-z': False, '': '2016-07-01', '': '上海', '': '北京'}&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;获取数据&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;参数已经解析好了，下面就是如何获取数据了，这也是最主要的部分。&lt;/span&gt;首先我们打开12306，进入余票查询页面，如果你使用chrome，那么按F12打开开发者工具，选中Network一栏，在查询框钟我们输入上海到北京，日期2016-07-01, 点击查询，我们在调试工具发现，查询系统实际上请求了这个URL :&lt;/p&gt;&lt;p&gt;https://kyfw.12306.cn/otn/lcxxcx/query?purpose_codes=ADULT&amp;amp;queryDate=2016-07-01&amp;amp;from_station=SHH&amp;amp;to_station=BJP&lt;/p&gt;&lt;p&gt;并且返回的是JSON格式的数据!接下来问题就简单了，我们只需要构建请求URL然后解析返回的JSON数据就可以了。但是我们发现，URL里面from_station和to_station并不是汉字，而是一个代号，而用户输入的是汉字，我们要如何获取代号呢?我们打开网页源码看看有没有什么发现。&lt;/p&gt;&lt;p&gt;啊哈!果然，我们在网页里面找到了这个链接：点我, 这里面貌似是包含了所有车站的中文名，拼音，简写和代号等信息, 我们在项目目录下将它保存为stations.html。但是这些信息挤在一起，而我们只想要中文名和大写字母的代号信息，怎么办呢?&lt;/p&gt;&lt;p&gt;BINGO!正则表达式，我们写个小脚本来匹配提取出想要的信息吧, 在parse.py中：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibxkfadTcZgo4QZ7iabicJ3IpicAna1YYnNibVyibIAuGV1Zg6OAdKOUAJicYTKZKTsLsBZiaH5rFHeApIobA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;我们运行这个脚本，它将以字典的形式返回所有车站和它的大写字母代号, 我们将结果重定向到stations.py中，&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibxkfadTcZgo4QZ7iabicJ3IpicUZ0GxyjvGl5ficu4qkXhF4FgRrN0Z0O4l3bHmicaBc00Ga4nDJNicHOFw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;我们为这个字典加名字，stations, 最终，stations.py文件是这样的：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibxkfadTcZgo4QZ7iabicJ3IpicY4JmSntQSc8RxmZpb6r07qJib3TaVtQ9BqWiaQGVbrBYdtoWTKJ5TvpQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;现在，用户输入车站的中文名，我们就可以直接从这个字典中获取它的字母代码了：&lt;/p&gt;&lt;p&gt;...&lt;/p&gt;&lt;p&gt;from stations import stations&lt;/p&gt;&lt;p&gt;def cli():&lt;/p&gt;&lt;p&gt;arguments = docopt(__doc__)&lt;/p&gt;&lt;p&gt;from_staion = stations.get(arguments[''])&lt;/p&gt;&lt;p&gt;to_station = stations.get(arguments[''])&lt;/p&gt;&lt;p&gt;date = arguments['']&lt;/p&gt;&lt;p&gt;# 构建URL&lt;/p&gt;&lt;p&gt;url = 'https://kyfw.12306.cn/otn/lcxxcx/query?purpose_codes=ADULT&amp;amp;queryDate={}&amp;amp;from_station={}&amp;amp;to_station={}'.format(date, from_staion, to_station)&lt;/p&gt;&lt;p&gt;万事俱备，下面我们来请求这个URL获取数据吧!这里我们使用requests这个库, 先安装它：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibxkfadTcZgo4QZ7iabicJ3Ipicibbjtahw2pU90cxWMXH09hB1icYfsXQzGESeutXET6aKJ1fJkob1RicbQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;它提供了非常简单易用的接口，&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibxkfadTcZgo4QZ7iabicJ3IpiciaCtlwGaNl0N8MrP5L1jDJyJmuLkb3ibEZRQCwVXIDa6XKKfMEuwUVuA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;从结果中，我们可以观察到，与车票有关的信息需要进一步提取：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibxkfadTcZgo4QZ7iabicJ3IpicrRC0zOYtkqjFfLfPUghE1gKTyVhAibM3OpAZNv7qFItX0qXEUu8CqUw/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;显示结果&lt;/p&gt;&lt;p&gt;数据已经获取到了，剩下的就是提取我们要的信息并将它显示出来。prettytable这个库可以让我们它像MySQL数据库那样格式化显示数据。&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibxkfadTcZgo4QZ7iabicJ3IpicpTNwtSeVIdc72GPWzHwENPq28jXcyXnYFe2Eg6ro61V14LibrEeYeiaQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;这样使用它：&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/jAqr3XzCYibxkfadTcZgo4QZ7iabicJ3Ipick1swZWvNiaxsicDx0rbThIdcFlVyj8qr5SXjR27Kk3Tic37fkZ3ljmpyA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;h3 style="border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); margin-bottom: 16px; color: rgb(68, 68, 68); font-family: &amp;#39;microsoft yahei&amp;#39;; line-height: 25px; white-space: normal;"&gt;&lt;strong&gt;练习&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;下面一些问题留给你做练习:&lt;/p&gt;&lt;ol style="margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;#39;microsoft yahei&amp;#39;; font-size: 15px; line-height: 25px; white-space: normal;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;从每一行row中按照headers过滤信息，将结果添加到prettytable中&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;像开始的图片中那样将出发站和到达站，出发时间和到达时间显示为一列&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;添加颜色(提示：使用colorama, termcorlor或ANSI转义字符)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;添加异常处理，如果用户输入的车站或日期有错误怎么办?如果网络异常怎么办?...&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;添加更多的日期格式支持: 比如用户输入20160701也可以查&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;添加参数支持，用户可以指定火车类型&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;如果你还有问题，可以去github查看源码, 或者来我的博客下面提问:&lt;/p&gt;&lt;p&gt;Github: https://github.com/protream/tickets&lt;/p&gt;&lt;p&gt;Blog: https://protream.github.io&lt;/p&gt;&lt;p&gt;End.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Thu, 22 Sep 2016 09:39:11 +0800</pubDate>
    </item>
  </channel>
</rss>
