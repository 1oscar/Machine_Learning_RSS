<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>CSDN大数据</title>
    <link>http://www.iwgc.cn/list/1933</link>
    <description>CSDN分享Hadoop、Spark、NoSQL/NewSQL、HBase、Impala、内存计算、流计算、机器学习和智能算法等相关大数据观点,提供云计算和大数据技术、平台、实践和产业信息等服务.</description>
    <item>
      <title>从概念到底层技术，区块链一站式分析和汇总（附知识图谱）</title>
      <link>http://www.iwgc.cn/link/3038619</link>
      <description>&lt;p&gt;&lt;span&gt;区块链作为一种架构设计的实现，与等基础语言或平台的知识库差别较大。区块链是加密货币背后的技术，是当下与VR虚拟现实等比肩的热门技术之一，本身不是新技术，类似Ajax，可以说它是一种技术架构，所以我们从架构设计的角度谈谈区块链的技术实现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;无论你擅长什么编程语言，都能够参考这种设计去实现一款区块链产品。与此同时，梳理与之相关的知识图谱和体系，帮助大家系统的去学习研究。文末，推荐了一些精选内容，供大家阅读。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section label="Copyright © 2016 playhudong All Rights Reserved." style="
width:100%;
margin:1em auto;
text-align: center;" donone="shifuMouseDownPayStyle(&amp;#39;shifu_t_044&amp;#39;)"&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section style="
margin-left: 0.5em;
display: inline-block;"&gt;&lt;p&gt;区块链是什么&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;区块链来自于比特币等加密货币的实现，目前这项技术已经逐步运用在各个领域。我们可以使用谷歌地球的例子做类比：ajax不是新技术，但组合后成就了产品谷歌地球。区块链与加密解密技术、P2P网络等组合在一起，诞生了比特币。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;技术人员，特别是Web开发工程师，学习了解ajax技术最早是被谷歌地球酷炫的效果所吸引。而现在，历史再一次重演，很多人被比特币的疯狂发展所吸引，进而开始研究其背后的技术——区块链。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;区块链作为比特币背后的技术，无需中心服务器，可实现各类存储数据公开、透明、可追溯。原本是比特币等加密货币存储数据的一种独特方式，是一种自引用的数据结构，用来存储大量交易信息，每条记录从后向前有序链接起来，具备公开透明、无法篡改、方便追溯的特点。实际上，这种特性也直接体现了整个比特币的特点，因此使用区块链来概括加密货币背后的技术实现是非常直观和恰当的。区块链是一项技术，加密货币是其开发实现的一类产品（含有代币，也有不含代币的区块链产品），不能等同或混淆。与加密货币相比，区块链这个名字抛开了代币的概念，更加形象化、技术化，更适合作为一门技术去研究。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以，目前当大家单独说到区块链的时候，就是指的区块链技术，是实现了数据公开、透明、可追溯的产品的架构设计方法，算作广义的区块链。而当在具体产品中谈到区块链的时候，可以指类似比特币的数据存储方式，或许是数据库设计，或许是文件形式的设计，这算作狭义的区块链。广义的区块链技术，必须包含点对点网络设计、加密技术应用、分布式算法的实现、数据存储技术的使用等4个方面，其他的可能涉及到分布式存储、机器学习、VR、物联网、大数据等。狭义的区块链仅仅涉及到数据存储技术，数据库或文件操作等。本文的区块链，指的是广义的区块链。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section label="Copyright © 2016 playhudong All Rights Reserved." style="
width:100%;
margin:1em auto;
text-align: center;" donone="shifuMouseDownPayStyle(&amp;#39;shifu_t_044&amp;#39;)"&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section style="
margin-left: 0.5em;
display: inline-block;"&gt;&lt;p&gt;区块链架构&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;从架构设计上来说，区块链可以简单的分为三个层次，协议层、扩展层和应用层。其中，协议层又可以分为存储层和网络层，它们相互独立但又不可分割。如图：&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujtib69z0U3bTeHRmLicFwmrMqrNeibVTTTv1vMWib0F5nWxkeFB6DyzneeTibMqlian6pjJGT3zMQzibc1w/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;协议层&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;指代最底层的技术。这个层次通常是一个完整的区块链产品，类似于我们电脑的操作系统，它维护着网络节点，仅提供Api供调用。通常官方会提供简单的客户端（通称为钱包），这个客户端钱包功能也很简单，只能建立地址、验证签名、转账支付、查看余额等。这个层次是一切的基础，构建了网络环境、搭建了交易通道、制定了节点奖励规则，至于你要交易什么，想干什么，它一概不过问，也过问不了。典型的例子，自然是比特币，还有各种二代币，比如莱特币等，本书介绍的亿书币也是。这个层次，是现阶段开发者聚集的地方，这说明加密货币仍在起步当中。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;协议层主要包括网络编程、分布式算法、加密签名、数据存储技术等4个方面，其中网络编程能力是大家选择编程语言的主要考虑因素，因为分布式算法基本上属于业务逻辑上的实现，什么语言都可以做到，加密签名技术是直接简单的使用（可以看加密解密文章，不建议自由发挥，没有过多的编码逻辑），数据库技术也主要在使用层面，只有点对点网络的实现和并发处理才是开发的难点，所以对于那些网络编程能力强，对并发处理简单的语言，人们就特别偏爱。因此，Nodejs开发区块链应用，逐渐变得更加流行，Go语言也在逐渐兴起。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上面的架构设计图里，我把这个层面进一步分成了存储层和网络层。数据存储可以相对独立，选择自由度大一些，可以单独来讨论。选择的原则无非是性能和易用性。我们知道，系统的整体性能，主要取决于网络或数据存储的I/O性能，网络I/O优化空间不大，但是本地数据存储的I/O是可以优化的。比如，比特币选择的是谷歌的LevelDB，据说这个数据库读写性能很好，但是很多功能需要开发者自己实现。目前，困扰业界的一个重大问题是，加密货币交易处理量远不如现在中心化的支付系统（银行等），除了I/O，需要全方位的突破。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;分布式算法、加密签名等都要在实现点对点网络的过程中加以使用，所以自然是网络层的事情，也是编码的重点和难点，《Nodejs开发加密货币》全书分享的基本上就是这部分的内容。当然，也有把点对点网络的实现单独分开的，把节点查找、数据传输和验证等逻辑独立出来，而把共识算法、加密签名、数据存储等操作放在一起组成核心层。无论怎么组合，这两个部分都是最核心、最底层的部分，都是协议层的内容。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;扩展层&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这个层面类似于电脑的驱动程序，是为了让区块链产品更加实用。目前有两类，一是各类交易市场，是法币兑换加密货币的重要渠道，实现简单，来钱快，成本低，但风险也大。二是针对某个方向的扩展实现，特别值得一提的就是大家听得最多的“智能合约”的概念，这是典型的扩展层面的应用开发。所谓“智能合约”就是“可编程合约”，或者叫做“合约智能化”，其中的“智能”是执行上的智能，也就是说达到某个条件，合约自动执行，比如自动转移证券、自动付款等，目前还没有比较成型的产品，但不可否认，这将是区块链技术重要的发展方向。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;扩展层使用的技术就没有什么限制了，可以包括很多，上面提到的分布式存储、机器学习、VR、物联网、大数据等等，都可以使用。编程语言的选择上，可以更加自由，因为可以与协议层完全分离，编程语言也可以与协议层使用的开发语言不相同。在开发上，除了在交易时与协议层进行交互之外，其他时候尽量不要与协议层的开发混在一起。这个层面与应用层更加接近，也可以理解为B/S架构的产品中的服务端（Server）。这样不仅在架构设计上更加科学，让区块链数据更小，网络更独立，同时也可以保证扩展层开发不受约束。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;从这个层面来看，区块链可以架构开发任何类型的产品，不仅仅是用在金融行业。在未来，随着底层协议的更加完善，任何需要第三方支付的产品都可以方便的使用区块链技术；任何需要确权、征信和追溯的信息，都可以借助区块链来实现。我个人觉得，这个目标应该很快就能实现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;应用层&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这个层面类似于电脑中的各种软件程序，是普通人可以真正直接使用的产品，也可以理解为B/S架构的产品中的浏览器端（Browser）。这个层面的应用，目前几乎是空白。市场亟待出现这样的应用，引爆市场，形成真正的扩张之势，让区块链技术尽快服务于大众。大家使用的各类轻钱包（客户端），应该算作应用层最简单、最典型的应用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;限于当前区块链技术的发展，比如亿书只能从协议层出发，把目标指向应用层，同时为第三方开发者提供扩展层的强大支持。这样做既可以避免贪多，又可以避免无法落地，是真正理性的开发路线。因为纯粹的开发协议层或扩展层，无法真正理解和验证应用层，会脱离实际，让第三方开发者很难使用。如果仅仅考虑应用层，市面上又找不到真正牢固、易用的协议层或扩展层的产品。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;编程实现&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;很多小伙伴，习惯结合自己的技术背景，来理解上面的架构设计。这里，结合具体的编程语言，简单介绍几款产品，仅供参考。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;（1）C/C++&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这两个语言是无法逾越的，任何开发遇到瓶颈，基本上都会找到它们，自然应该排在第一位要介绍的。同时，区块链技术的鼻祖，比特币（协议层）就是用C++语言开发的，而且目前为止，没有比比特币更加成功的区块链产品。所以，无论你使用什么语言开发，在正式进入这个行业的过程中，都应该先研究研究比特币。比特币官方客户端钱包用的Qt，第三方钱包有Python语言开发的，特别是第三方整理的开发库（Api包）很多是Nodejs设计的。比特币的架构，与上面的架构设计基本相同，另外，因为共识算法采用的是工作量证明机制（PoW:Proof of work)，还有一些特殊的挖矿的过程。其他竞争币都是直接来自比特币的分支，所以编程语言相同，具体的技术选型和技术实现上可能有所改进，比如：莱特币，使用了其他的加密算法。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;官方网站：&lt;span&gt;https://bitcoin.org&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;源码库：&lt;span&gt;https://github.com/bitcoin&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;C语言知识库：&lt;span&gt;http://lib.csdn.net/base/c&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;（2）Nodejs/Javascript&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Nodejs平台强大的网络编程能力，以及js脚本语言的简单快捷，在区块链领域自然少不了它的身影。亿书便是这样一个区块链产品，亿书币是它的协议层，使用了著名的express开发框架，基于http协议开发而成。同时，它采用了授权股权证明机制（DPoS），算法上的改进，让它在处理交易时更加轻量，处理能力大大提升。它提供了强大的协作机制，为数字出版、版权保护提供了便利；扩展了侧链功能，可以基于它开发任何去中心化的应用，从而为专业作者、博客爱好者和开发者提供很多方便。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;《Nodejs开发加密货币》这本书完整分享了它的源码，从区块链基础概念到代码实现，从基本原理到开发设计思路，都做了比较详细的探索，目前为止，从协议层面深入代码讲解区块链技术实现的书籍极少，这算作一本。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;官方网站：&lt;span&gt;http://ebookchain.org&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;源码库：&lt;span&gt;https://github.com/Ebookcoin&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Node.js知识库：&lt;span&gt;http://lib.csdn.net/base/nodejs&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;（3）Python&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果是Python语言爱好者，我建议研究研究以太坊（Ethereum）的Python实现。尽管因为The Dao事件闹得沸沸扬扬，但从技术实现的角度来说，仍然值得参考学习。以太坊官方定位为一种开发管理分布式应用的平台，主攻方向就是“智能合约”，并为其定制了一种编程语言Solidity。以太坊的核心是以太坊虚拟机（EVM），允许用户按照自己的意愿创建操作。以太坊给出了Go、Java、Python等多语言的实现。其中以python为基础的实现主要包括三个部分：Pyethapp是客户端部分；pyethereum是核心库，实现了区块链、以太坊模拟机和挖矿等功能；pydevp2p是点对点网络库，实现了节点发现、合约代码传输、加密签名等功能，这三者组合在一起就是完整的区块链实现，后面两个核心库共同组成了协议层。另外，go-ethereum是go语言的完整实现；Ethereum(J) 是纯Java实现，它作为可以嵌入任何Java/Scala项目的库提供。客户端方面，还有Rust、Ruby、Javascript等语言的实现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;官方网站：&lt;span&gt;https://ethereum.org&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;源码库：&lt;span&gt;https://github.com/ethereum/pyethapp&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Python知识库：&lt;span&gt;http://lib.csdn.net/base/python&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;（4）Go&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在多核时代，Go语言备受喜爱，它可以让你用同步方式轻松实现高并发，特别是在分布式系统、网络编程等领域，应用非常广。在区块链开发领域，也有很多使用Go语言的项目。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其中，由linux基金会主导的超级账本（HyperLeger），版本库的名字叫Fabric，就是其中一个。该项目试图为新一代的事务应用创建一种开放的分布式账本标准，支持许可式区块链（这种方式可能无法再现比特币那种强大的网络效应）。Fabric的开发环境建立在VirtualBox虚拟机上，部署环境可以自建网络，也可以直接部署在BlueMix上，部署方式可docker化，支持用Go和JavaScript开发智能合约。它采用PBFT分布式算法，网络编程方面用gRPC来做P2P通讯，使用 Protocol Buffer来序列化要传递的数据结构。在架构设计上，Fabric可能与比特币等区块链产品有所不同，但是上述基本组成部分还是不可或缺的。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;官方网站：&lt;span&gt;https://www.hyperledger.org&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;源码库：&lt;span&gt;https://github.com/hyperledger&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Go知识库： &lt;span&gt;http://lib.csdn.net/base/go&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其他编程语言，比如：C#等，也有具体实例，这里就不再列举。针对不同的编程语言，在具体的编码或架构设计上可能有很大差别，但是协议层所使用的技术并没有太大的变化。网络编程是重点和难点，多数没有现成的框架可用，都是使用编程语言自身提供的库来设计开发，所以比较底层，非常考验开发者的编码功底。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section label="Copyright © 2016 playhudong All Rights Reserved." style="
width:100%;
margin:1em auto;
text-align: center;" donone="shifuMouseDownPayStyle(&amp;#39;shifu_t_044&amp;#39;)"&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section style="
margin-left: 0.5em;
display: inline-block;"&gt;&lt;p&gt;区块链知识图谱&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujtib69z0U3bTeHRmLicFwmrM0B3oal5sxhicYsPJpSMAzJfAW6bialNoicBJAn2bBh3CSesUQ0JlMRhwA/0?wx_fmt=gif"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我把与区块链相关的知识内容分为下面5个方面：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;（1）基础知识&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;区块链是新技术，与之相关的是其背后大量的新概念、新理论。这些知识，虽然不直接体现在编码里，但却是理解区块链，掌握区块链技术的基本知识。所以，理当成为区块链技术不可或缺的一部分。这部分从基本概念入手，到工作原理的描述，就能够把区块链基础知识全部覆盖。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;（2）技术实现&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;区块链是一项技术，但从上面的分析可以看出，它应该是一种架构应用，架构的实现理当是我们知识库的核心。正如大家看到的，任何一款区块链产品，协议层必须包括点对点网络、加密签名、数据存储、分布式算法等4个部分，应用层也必然要提供钱包、客户端浏览器等基础应用。所以，把这部分独立出来，也是合情合理。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在扩展层的部分，区块链技术可以对接各种应用，比如：金融、物联网、网络安全、版权保护、电子商务等等，现有的很多技术都可以用在这里。只不过，如何与区块链结合，如何实现跨行业使用，自然是这部分内容研究的课题。所以，这里所罗列或涉及到的技术，理应归为技术实现的一个重要部分。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;（4）开发环境&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;区块链是多项技术的组合，有其自身的复杂性，个别应用对开发环境依赖较大，开发工具与环境搭建，是让开发者快速上手的重要内容。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;（5）项目实践&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;据说，短短数年，全球区块链产品已经有几千个，其中不乏创新应用。有些优秀的开源产品和项目实践，是最好的学习研究资料。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以上，我们把区块链技术基础架构描述了一下，需要再次强调的是，这仅仅是一种实现方式，绝非所有的区块链产品都是如此，我们也期待更多创新出现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section label="Copyright © 2016 playhudong All Rights Reserved." style="
width:100%;
margin:1em auto;
text-align: center;" donone="shifuMouseDownPayStyle(&amp;#39;shifu_t_044&amp;#39;)"&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section style="
margin-left: 0.5em;
display: inline-block;"&gt;&lt;p&gt;编者说&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;编程实现罗列了几种编程语言与其实现的典型产品，因为协议层技术较为底层，并没有太多现成的框架需要介绍或讨论。这些产品都是开源产品，大家可以结合自己的技术背景，进一步查看对应的产品源码，很快就能了解其中的奥妙。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我在考虑这个知识体系的过程中，考虑过使用比特币、竞争币、智能合约、数字资产、智能资产等具体领域的实现作为分类方法，但又怕限制了思维。随着区块链的发展，这个图谱将不停的修改下去。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在这里，呼吁一下，希望读到这篇文章的小伙伴提供您的宝贵意见，让我们把这个关于区块链的知识分类图谱做得更加科学合理，使用更加方便。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section label="Copyright © 2016 playhudong All Rights Reserved." style="
width:100%;
margin:1em auto;
text-align: center;" donone="shifuMouseDownPayStyle(&amp;#39;shifu_t_044&amp;#39;)"&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section style="
margin-left: 0.5em;
display: inline-block;"&gt;&lt;p&gt;知识库推荐阅读&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;什么是区块链共识&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;区块链主流开源技术体系&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;拜占庭共识&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;区块链主流开源技术体系&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;更多内容请访问&lt;span&gt;区块链知识库&lt;/span&gt;，&lt;/span&gt;&lt;span&gt;如果有更精彩的区块链内容，请留言给我们。&lt;/span&gt;&lt;span&gt;加微信yuzhong125，注明“公司-职位“参与区块链讨论。&lt;/span&gt;&lt;/p&gt;&lt;section label="Copyright © 2015 playhudong All Rights Reserved." style="
margin:1em auto;
border-style: none;" donone="shifuMouseDownCard(&amp;#39;shifu_c_005&amp;#39;)"&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;p&gt;作者简介：朱志文，亿书创始人，CSDN区块链知识库特邀编辑。中国区块链俱乐部主创者和发起人，比特币的忠实粉丝，区块链技术的布道者，代表作《Nodejs开发加密货币》。个人博客：http://blog.csdn.net/imfly&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAuiaBCibnicg87kue5JEYw7TTYF2l1Sfflft5pXMySicibQmEk8NXYrK7JmdMXpLG3FpgAVXCsp1XJ4hqJQ/0?wx_fmt=jpeg"/&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Wed, 12 Oct 2016 18:00:36 +0800</pubDate>
    </item>
    <item>
      <title>年终技术盛会筹备中 SDCC 2016正公开征集演讲嘉宾</title>
      <link>http://www.iwgc.cn/link/3038620</link>
      <description>&lt;p&gt;&lt;span&gt;2016年，&lt;span&gt;&lt;strong&gt;SDCC（中国软件开发者大会）&lt;/strong&gt;&lt;/span&gt;相继走进了上海、深圳、成都、杭州各地。11月18日-20日将在北京完美收观，届时年度最受欢迎的企业、讲师将在这里齐聚一堂，约百位讲师将围绕电商架构、编程语言、前端开发、微信开发、视频直播、推荐算法等方面，总结分享过去一年自己感触最深、最具参考价值的实践探索，并畅想未来，把脉市场发展先机。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;除了Keynote环节外，大会还开设了电商架构、架构师进阶之路、高可用架构、基于Spark的大数据系统设计、架构演进、前端开发、微信开发、编程语言、高吞吐数据库系统设计要领、自动化运维与容器实践、移动视频直播技术、推荐算法12个技术论坛。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;大会组委会已邀请到多位技术专家担任各论坛出品人，负责演讲嘉宾邀请及议题审核：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;张立刚，1号店架构部技术总监&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;陈超，七牛技术总监&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;史海峰，当当网架构部负责人&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;杜玉杰，开源布道师&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;卢亿雷，Admaster技术副总裁&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;周裕波，w3ctech发起人&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;柳峰，贵州多米科技创始合伙人兼CTO、国内微信公众平台应用开发先驱之一、CSDN学院讲师&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;周彦伟，去哪儿网数据库总监&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;目前已确认演讲嘉宾有：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Joe Armstrong，Erlang设计者&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;蒋定宇，Stackla前端团队Leader&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;袁聪，QQ音乐&amp;amp;全民K歌高级工程师&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;黄鼎恒，饿了么Node Team负责人&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;陈鸿，未来应用创始人&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;……&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;来自BAT、京东等知名企业及秒拍、花椒、YY、今日头条、斗鱼TV、IBOS等各大新秀企业的更多演讲嘉宾正在邀请确认中。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;同时，各个技术论坛也正公开征集演讲嘉宾。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;征集形式与具体要求请见下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;span&gt;演讲形式&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;演讲时长：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;45分钟，包括5分钟的提问环节。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;演讲内容选择标准：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;实战：议题选择应围绕当前的技术难点、热点，个人/所在企业已在该领域有深入实践，借此机会分享给更多同行。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;深度：需有深度，不要泛泛而谈。最好结合具体实例，深入浅出，让听众从中有所悟、有所得，可借鉴至具体工作中最佳。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;不广告：珍爱生命，拒绝广告。请不要在演讲过程中穿插任何形式的企业、产品广告。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;技术背景：演讲人在演讲内容所涉及的技术领域有一定的从业经验并有所成就。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;span&gt;演讲嘉宾福利&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;可免费参加大会所有课程；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;结识大会其他技术大牛，并有面对面交流的机会；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;外地讲师由大会组委会承担差旅与住宿费用；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;获得被CSDN及其他各大受邀媒体采访报道机会。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;span&gt;注意事项&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在大会日程完全确定之前，可自由提交演讲议题；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;收到申请提交后，我们将在10个工作日内完成审核，并将审核结果通过邮件回复您；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;审核通过的演讲人将收到大会组委会发出正式邀请函，演讲机会以收到邀请函为准。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;span&gt;线上申请方法&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;访问：演讲嘉宾申请界面（http://sdcc.csdn.net/cview/reg/?project_id=3151&amp;amp;identy_id=1746）；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;按表单填写完整信息，提交即可。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本技术大会共开设有12个专题论坛，您可以根据自己所善长的领域，在“申请场次”一项，选择自己想在哪个技术论坛上进行演讲分享。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;span&gt;各大技术论坛简要介绍&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;电商架构&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;双11异常火爆，不管是销售数字，还是用户体验，这次全民购物狂潮再次刷新了过去的所有记录。而在这一切背后，需要稳定高效的系统架构设计来提供有力支持。本专题揭示了国内各大知名电商架构设计的最佳技术实践。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;编程语言&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;语言哲学家维特根斯坦曾说：“语言的界限就是我与世界的界限”。当你新学会一门编程语言，便有可能领略由这门语言构建起的软件世界。本专题中，Rust、Julia、Go、Erlang、PHP、Java等最受关注的编程语言设计者或资深实践者不仅将讲述他们对系统编程、科学计算等领域的观察，旧思想的精华融入新思想的历程，还将分享他们对程序设计的深邃思考。辅以深入浅出的实践经验分享，让你能在最短的时间领略这些编程语言的精巧设计，并且有能力开始新的探索。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;架构师进阶之路&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;怎样学习才能成长为一名合格的架构师，或者说一名合格的架构师应该有怎样的技术知识体系，这不仅是一个刚刚踏入职场的初级程序员也是工作三五年之后开始迷茫的老程序员经常会问到的问题。本专题内容来自CTO、首席架构师等眼中的架构师，他们将给你最全面最权威的回答。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;前端&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;随着新一代前端技术的发展，给前端开发者带来巨大的创新应用实践机会，本专题是为HTML5、CSS3、JavaScript等前端技术的互联网开发者所举办的，内容涵盖网络游戏、电商、旅游、媒体、社交、技术服务等多种互联网业态的技术经验分享，将会涉及各种WEB前端开发技术。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;高可用架构&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;理论结合实践，案例式讲述，深入剖析架构设计的高可用性，快速提升设计和架构能力，让大家系统性的掌握一线互联网公司高可用架构设计的方法论，并应用于实际工作中。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;基于Spark的大数据系统设计&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Spark是目前热门的大数据分布式编程框架之一，现已成为Apache顶级项目，受到业界的广泛关注和使用。本专场主要讨论的话题有：利用基于Spark的大数据系统设计来促进信息时代的智能化，有效结合Spark和其他热门大数据工具并加以利用；应用目前的Spark技术实现大数据在各行业的全面渗透；以及通过实际案例和场景来探讨Spark与大数据的互动创新。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;微信开发&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;微信仍以迅猛势头火速发展，并已跨入海外市场，服务着全球亿万用户。作为技术开发者，除了时刻关注领域技术发展外，更应紧盯、深挖掘该行业所蕴藏的巨大商机。目前微信开发成为SDCC大会的重要分论坛之一，2014年北京和深圳两场微信开发者大会、2015 SDCC微信开发专题论坛，吸引了不少领域技术专家参与分享，受到了广大微信开发者的一致好评。2016年，SDCC微信开发论坛将持续精彩，携手更多技术高手、创业精英，共研技术难点，碰撞创新点子。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;架构演进&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;本专题涵盖各类互联网后台、移动、直播等热门架构的演进过程，在架构变迁中遇到的痛点和解决方案，从而带给参会者以启发。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;高吞吐数据库系统设计要领&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;本专题将邀请国内外的数据库专家，共同探讨MySQL、NoSQL、Oracle、缓存技术、云端数据库、智能数据平台等领域的前瞻性热点话题与技术，尤其是在高数据量情况下实现高吞吐数据库的设计。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;自动化运维与容器实践&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;DevOps并非你想的那么简单，如今，您经常听周围的人谈论DevOps，但真正理解并能执行的人极少。其实，采纳DevOps的文化壁垒非常高，这是一个值得探索的漫长过程。DevOps论坛邀请国内DevOps行业顶级专家，和大家共同探讨DevOps具体应用场景、如何在企业实施DevOps、DevOps实际案例、DevOps如何加速企业创新等热点话题。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;移动视频直播技术&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;移动直播技术属于今年最热的前沿领域，在移动直播技术专场邀请到多位直播技术专家深度阐述直播连麦技术；在热门时段大主播高峰值情景下，如何优化直播礼物系统？面对延迟、卡顿等诸多难题，全互动直播技术的最佳解决方案；基于第三方CDN，我们该如何实现直播质量监控。更多精彩的直播技术，尽在本专题。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;推荐算法&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;大数据算法是大数据得以有效应用的基础，能够在保证推荐准确性的同时增加推荐的多样性，满足用户多种需求，还能够实现实时反馈，强化推荐算法。本专场主要讨论的话题有：利用大数据算法来实现组织的运营能力；通过推荐算法分析有效打通不同算法间的固有壁垒；应用目前的大数据算法来提升企业IT效率；以及通过实际案例和场景来探讨推荐算法的应用分析能力。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujtib69z0U3bTeHRmLicFwmrMdZS2qn7uGmFtkhfyKUA77lfPt8mnWExia59CrEWBDvk8gRgtLIaDrzg/0?wx_fmt=jpeg"/&gt;&lt;/span&gt;&lt;/p&gt;</description>
      <pubDate>Wed, 12 Oct 2016 18:00:36 +0800</pubDate>
    </item>
    <item>
      <title>Hugo：一个快速、现代的静态网页引擎</title>
      <link>http://www.iwgc.cn/link/3038622</link>
      <description>&lt;p&gt;&lt;span&gt;Hugo是一个制作静态页面的工具，非常灵活，可以以多种形式工作，是制作博客、文档、个人履历等非常合适的工具。Hugo激发了创造力，让建造网页变得充满乐趣。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;“&lt;/span&gt;&lt;span&gt;一次编写，到处运行&lt;/span&gt;&lt;span&gt;”&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Hugo可能是你用过的最容易安装的软件——只要下载打开就可以了！Hugo并不依赖任何权限、数据库、运行库、解释器或外部库。使用Hugo编写的网站可以运行在S3，Github Pages，Dropbox或其它任何静态网页托管上。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;“&lt;/span&gt;&lt;span&gt;强大的性能&lt;/span&gt;&lt;span&gt;”&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Hugo为速度和性能而生。我们付出很大的精力来尽可能地减少编译时间。大多数编译只要毫秒级的时间就可以完成！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;“&lt;/span&gt;&lt;span&gt;灵活&lt;/span&gt;&lt;span&gt;”&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Hugo可以灵活地适应你的任务。你可以使用任何你喜欢的方式组织URL，通过自定义的index页面和分类组织内容。使用任何形式定义你自己的元数据，例如YAML、TOML或JSON。最棒的是，Hugo不需要任何配置文件就可以处理这些差异。Hugo就是好。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;“&lt;/span&gt;&lt;span&gt;讨论&lt;/span&gt;&lt;span&gt;”&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;sfifs说：我喜欢Hugo最大的原因是：几乎所有其它的引擎都要求我安装完整的Ruby或JavaScript开发环境，才能预览我的博客，而Hugo就不需要。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;eberkund说：为什么我要从jekyll换到Hugo呢？现在已经有无数的网站生成工具了，而且它们几乎都有差不多的特性。有没有两者都用过的人来解释一下，这些工具究竟有什么不同？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;andmarios说：对我来说，最重要的是他们的静态库如何。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我确实用过Jekyll，但是对于一个会运行很多年的网站来说，照顾一个ruby app是我不想插手的事。也许我的服务器和我的桌面端的Ruby版本不同，也许一些Ruby Gems已经在我的发行版安装了，但不是我想要的，这就得重新手动安装它们，每次Gem提供的功能出了什么问题，我就得手动重新安装一下，还得SSH到服务器再重装。有时候由于发行版的原因，一些Gem还不能装。也许jekyll哪天发了新版本，用了最新Ruby特性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Hugo在这方面有很多优势，比如内置服务器、实时载入和在本地测试时方便的链接转换等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;p&gt;原文：Hugo: A fast and modern static website engine&amp;nbsp;&lt;/p&gt;&lt;p&gt;作者：Hugo官网 翻译：赖信涛 责编：仲培艺&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2016年11月18日-20日，由CSDN重磅打造的&lt;span&gt;&lt;strong&gt;年终技术盛会SDCC 2016中国软件开发者大会&lt;/strong&gt;&lt;/span&gt;将在北京举行，大会秉承干货实料（案例）的内容原则，本次大会共设置了12大专题、近百位的演讲嘉宾，并邀请业内顶尖的CTO、架构师和技术专家，与参会嘉宾共同探讨电商架构、高可用架构、编程语言、架构师进阶、微信开发、前端、平台架构演进、基于Spark的大数据系统设计、自动化运维与容器实践、高吞吐数据库系统设计要领、移动视频直播技术等。10月14日仍是&lt;strong&gt;&lt;span&gt;五折抢票&lt;/span&gt;&lt;/strong&gt;，最低1400元，注册参会：&lt;span&gt;http://sdcc.csdn.net/m/zone/sdcc_2016/index#canhui&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;</description>
      <pubDate>Wed, 12 Oct 2016 18:00:36 +0800</pubDate>
    </item>
    <item>
      <title>6个原因说服你选择PostgreSQL 9.6</title>
      <link>http://www.iwgc.cn/link/3027814</link>
      <description>&lt;p&gt;原文请点击最下方阅读原文按钮，作者 Damien Clochard，本文译者：小次郎@飞象&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;PostgreSQL9.6&lt;span&gt;在前些日子发布了&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;社区为该版本的重大更新付诸良多&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;发布日志一如既往的长&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;我挑选了&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;&lt;span&gt;个重要的更新， 这些或许能够帮助你更好的使用&lt;/span&gt;&lt;span&gt;PostgreSQL&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style="margin-left: 0px; text-indent: 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;并行&lt;/span&gt;:&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;并行应该是这个版本中最大的卖点&lt;/span&gt;:&lt;span&gt;这个期待良久的功能， 将会出现在用户的许多场景中， 在&lt;/span&gt;&lt;span&gt;PostgreSQL&lt;/span&gt;&lt;span&gt;之前的版本中， 即便拥有很多的空闲处理器&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;数据库的单个查询只能利用单个&lt;/span&gt;&lt;span&gt;cpu&lt;/span&gt;&lt;span&gt;的计算能力。 这个限制现在没有了&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;许多场景下的查询现在可以利用并行特性&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span&gt;顺序扫描&lt;/span&gt;&lt;span&gt;,join,&lt;/span&gt;&lt;span&gt;聚合计算&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;这些都可以利用并行的多核处理器。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style="margin-left: 0px; text-indent: 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;更好的锁监控&lt;/span&gt;:&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;pg_stat_activity&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;span&gt;视图提供了更加详细的等待信息，&lt;/span&gt; &lt;span&gt;当一个进程正在等待一个锁，你会看到锁的类型，以及将你的查询阻塞的等待事件的详细信息。&lt;/span&gt; &lt;span&gt;另外增加了&lt;/span&gt;pg_blocking_pids()&lt;span&gt;函数， 你就会知道哪些进程阻塞这个给定的服务器进程。 这些监控都能够过帮助&lt;/span&gt;&lt;span&gt;DBA&lt;/span&gt;&lt;span&gt;了解一个特定事件触发的锁等待了多长时间， 从而找到系统瓶颈&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style="margin-left: 0px; text-indent: 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;多个同步服务器&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;前面版本的同步流复制中至多可以拥有一个同步节点，&lt;/span&gt; PostgreSQL9.6&lt;span&gt;允许配置多个同步节点，用户可以设置一个或多个节点来同步数据， 并通过确保所有节点的确认信息提高了事务的可靠性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style="margin-left: 0px; text-indent: 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;防止膨胀&lt;/span&gt;:&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;截止现在，一个长时间的报表输出&lt;/span&gt;, &lt;span&gt;或者一个一个游标的查询结果输出信息都会阻塞失效行的清理， 数据库中这些经常改动的表会膨胀，会触发数据库的性能问题&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;导致存储空间的大量使用。 该版本中添加了 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;old_snapshot_threshold&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;span&gt;参数允许集群清理事务结束无效的行&lt;/span&gt;, &lt;span&gt;所有的快照都可以看到该记录已经到达了一定的年纪&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style="margin-left: 0px; text-indent: 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;PostgreSQL FDW&lt;span&gt;优化&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;PostgreSQL&lt;span&gt;现在拥有超过&lt;/span&gt;&lt;span&gt;80&lt;/span&gt;&lt;span&gt;多种外部表封装&lt;/span&gt;&lt;span&gt;(FDW), &lt;/span&gt;&lt;span&gt;可以用来访问几乎大多数的远程数据源， 在&lt;/span&gt;&lt;span&gt;9.6&lt;/span&gt;&lt;span&gt;版本中&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span&gt;postgres_fdw&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;span&gt;引入了很多的改进，&lt;/span&gt; &lt;span&gt;这些改进包括控制拉取数据量的参数&lt;/span&gt;&lt;/span&gt;&lt;span&gt;fetch_size&lt;/span&gt;&lt;span&gt;, &lt;span&gt;下推操作&lt;/span&gt;&lt;span&gt;(join, sorts)&lt;/span&gt;&lt;span&gt;到远程&lt;/span&gt;&lt;span&gt;PostgreSQL&lt;/span&gt;&lt;span&gt;实例， 如果你想对多个数据库的数据做聚合技术，这些都便于你的操作&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style="margin-left: 0px; text-indent: 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;远程作用&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;PostgreSQL9.6 &lt;span&gt;中新增加了一种复制模式&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;叫做 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;remote_apply&lt;/span&gt;&lt;span&gt;, Master&lt;span&gt;节点等待事务作用到远端节点，而不仅仅是写入磁盘， 这会比通常的复制模式慢一些&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;但不会慢很多， 它会确保所有的&lt;/span&gt;&lt;span&gt;“&lt;/span&gt;&lt;span&gt;提交数据&lt;/span&gt;&lt;span&gt;”&lt;/span&gt;&lt;span&gt;在&lt;/span&gt;&lt;span&gt;slave &lt;/span&gt;&lt;span&gt;节点已经生效&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;如果你想让你的只读查询分布到多个节点的话，这就是为你准备的&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;筛选出其中&lt;/span&gt;6&lt;span&gt;项是一个艰难的选择， 因为在此版本中， 还存在许多其他方面的改进&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;比如有&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span&gt;短语全文检索， &lt;/span&gt;&lt;/span&gt;&lt;span&gt;pg_visibility&lt;/span&gt;&lt;span&gt;&lt;span&gt;拓展模块&lt;/span&gt;, frozen &lt;span&gt;页面更好的空间回收&lt;/span&gt;&lt;span&gt;(VACUUM)&lt;/span&gt;&lt;span&gt;机制&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;部分索引&lt;/span&gt;&lt;span&gt;(partial indexes)&lt;/span&gt;&lt;span&gt;只扫描索引部分&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;命令进度的报告&lt;/span&gt;&lt;span&gt;… PostgreSQL &lt;/span&gt;&lt;span&gt;一如既往，拥有很多的性能提升&lt;/span&gt;&lt;span&gt;!&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;对于这个版本的详细信息，可以从这个维基页面开始&lt;/span&gt;:&lt;/span&gt; https://wiki.postgresql.org/wiki/NewIn96&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;a target="_blank" data_ue_src="http://"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Jcm9aJTGPBQVZtcfT7HBtPuBeV2yYuFBhicm1LfG4LEls9GmtfBBvmaEkyJqZF5tUII3rnZWJ8lGbUSQ1ibnu5kA/0?wx_fmt=jpeg"/&gt;&lt;br/&gt;&lt;/a&gt;&lt;/p&gt;</description>
      <pubDate>Tue, 11 Oct 2016 20:45:39 +0800</pubDate>
    </item>
    <item>
      <title>下一代计算：空间计算</title>
      <link>http://www.iwgc.cn/link/3027815</link>
      <description>&lt;p&gt;&lt;span&gt;空间计算涵盖诸多内容，从概念、应对措施、工具、技术到系统，这些东西让我们对“位置”有了新的理解，极大地改变了我们的生活。新的变化包括：我们该如何理解自己与位置信息之间的关系，如何沟通并可视化位置信息，以及如何使用导航功能。通过无处不在的全球定位系统（GPS），无论是在国家公园里的徒步旅行者、湖面上的荡舟者、到了新地方的孩子们、计程车（或Uber司机、自动驾驶汽车），还是无人飞机，都能对自己所在的位置、附近的设施以及去往名胜古迹的路线了如指掌。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwxnsyWkENS9HFmibFJwiblUjJNkfOhnt7GiaIDb3icGowqIC15LIhcibpKpew/0?wx_fmt=jpeg"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;span&gt;要点概括&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;随着民用GPS的普及，通过诸如谷歌地图、Uber服务、地理位置标签、地域指向性服务等定位服务，空间计算极大地丰富了民众的生活；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;空间数据库、空间统计、空间数据挖掘之类的概念，让计算机科学得到进一步增强；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;未来机会无限：通过无处不在的室内定位服务、物联网定位、全球持续监控、可视化、预测及警报，像气候变更，食物、能量、水源的提供等社会化问题都会得到解决。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;大型公司通过空间计算来执行选址、跟踪资产、管理设施、导航与管理物流；科学家使用全球导航卫星系统GNSS（比如全球定位系统GPS）来跟踪濒危物种，更好地了解动物行为；农民使用这种技术增加作物产量，降低开销；学生通过虚拟地球仪（比如谷歌地球、NASA地球放大镜）以积极参与的互动方式了解周边区域乃至全球。近来在自然灾难（比如2012年的桑迪飓风）发生后，有成千上万的人访问谷歌地球，协助灾后重建。2010年海地地震后，多亏了志愿者及时提交的当地信息，相关人士才能制出灾后路线图。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;未来十年，空间计算还将带来一系列变革。比如，在搜索路线时一般会选择在时间或距离上最短的那条，不过有公司在测试新的方式：环境路线选择——选择耗油量最低、尾气释放最少的方案。目前，回避左转的智能路径选择让快递公司UPS每年节省超过300万加仑的燃油，如果环境路线选择方案可用的话，带来的影响必然是量以倍计的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;随着移动电话的普及，世界各类信息的汇集成为了可能。有研究发现，根据移动电话所内置的运动传感器，在地震发生的几秒内就能探测到相关信息。而导航公司也越来越多地通过移动电话来记录道路上的交通状况。人们通过信息化基架协助对地球这个复杂系统的理解，这类的需求也越来越大。技术进步极大地降低了人们从实地、从实验室以及从模拟地球系统中收集数据的难度，不但使得地学数据呈现指数式增长，还显著提高了我们对地球系统模型中多元化现象的适应能力。对于我们理解地球的变化，理解物理学、生物学、社会学来说，这种进步可能是至关重要的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;近十年来，特别是在地理环境领域，空间计算方面的工作已经非常广泛，由于涉及了大规模的跨学科交流，其深度及广度单用一篇文章是难以描述的。本文有两个目标：一是分享我们基于2012计算社区联盟研讨会的讨论结果；二是开启新一轮讨论：拓展规模后的计算联盟在这个跨学科领域将扮演什么角色。下面将会通过几个研讨会上例子进行描述，它们彼此间不分次序，也不是全面的，更多案例请查看原文附注。最后我们提倡对跨学科领域提供支持，不限于本文案例中的那些。下面将用数据来进行说明。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;span&gt;革命性的成果&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;空间计算最初是为了对地图及其他地理数据进行计算和分析，其影响集中在高度专业化的学科领域（表一）。从那时起，空间计算技术的一系列变革已经深深地融入人类社会，协助我们回答各种各样的问题。下面将简单描述几个应用程序，还有影响重大而深远的研究成果，想要查看更多内容，请参考原文附注中的文章。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwxsmeyEJ34dPS9YibzBicic8cib4cg7f7AOqMRabXII51xEnCibFAPMMd9cHA/0?wx_fmt=jpeg"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;表一&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;全球定位系统（GPS）：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;我在地表什么地方？在18世纪，“经度问题”是科学领域最具挑战的问题之一。由于无法测量经度，在大航海时代，水手们一旦看不到地平线，也就意味着迷失方向。最终，人们靠着罗盘、地图、星座还有航海经线仪（一种计时器），即使身处没有地标的大海，也能进行粗略定位了。随着1978年GPS发布并随后民用化以来，如今我们已经可以进行快速精确定位了。GPS是GNSS的案例之一，只要在4颗及以上的导航卫星覆盖下，我们就能获得位置与时间信息。基于GNSS的精确计时简化了人们的日常活动（比如电脑时钟同步）、监控移动对象的地理分布式传感网络（导弹、飞机、车辆与地壳构造板块）以及电力分配网络。有了这种定位能力，向终端用户提供基于位置的服务成为可能（比如逐向道路导航系统、本地搜索、地理位置解析）。现如今，GNSS以及相关基于位置的服务已广泛应用在商业、科学、追踪与监控领域。由于价格低廉的超大规模集成电路可以轻松集成到手机与平板电脑中，GPS系统的广泛应用成为可能。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;遥感：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;陆地表面哪里有森林植被覆盖？在最近几十年中，随着气候变化、城镇化与人口增长，森林的覆盖情况有什么变化？之前，这些都需要实地测量才能得知，不但需要耗费大量劳动力，覆盖区域也很有限。但现在，通过遥感卫星便可在全球范围内监控陆地覆盖的变化情况。此外，通过专业工具还能感知地下资源。由于数据量巨大，计算科技在遥感数据集的存储、查询和分析方面都非常重要。同时，这些数据集也激发了像谷歌地球引擎这样的计算创新。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;地理信息系统（GIS）：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;哪些国家在朝鲜导弹的射程范围内？图一是一个著名案例，显示了在平面地图上使用球面距离所导致的距离信息计算错误，这种错误在缺乏GIS辅助球面测量的情况下很容易出现。GIS能够解读常见地理数据来源所使用的大量地图投影，协助融合不同来源的地图数据。但由于地球并非完美的球形，GIS也能解读更准确的表现方式，包括椭球体和使用陆基大地参考点定位的非参数表现方式。GIS还会对空间数据进行捕获、存储、分析、管理及可视化；例如，在飞机上的地球地图就是以曲面表现的。尽管在很大程度上，地图投影仍保有拓扑特性，不过其保留的度量属性（比如距离与面积）要取决于所使用的投影。GIS有许多独特的功能，比如制图学、大地测量学数据和地图层等；在与几何学融合之后，也能用在空间查询与统计分析方面，下面两段将会有更深入的描述。算法进步（如平面扫描算法）与数据架构（如地图渲染和地图叠加相关的不规则三角网格）将会极大地带动GIS发展。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwxcWjOAcG1YW1e60W9KBkUic6RW3jGme8a2tyAWXKHOJL9Fm0bz8fZr3g/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图一&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;空间数据库管理系统：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;通过斯隆数字化巡天系统，类星体星系对可以在30弧秒内发现对方。在全球变暖引发的海平面上涨、暴风雨骤降与春雪消融等极端气候面前，最有可能被洪水淹没的房子在哪儿？在空间数据库出现前，由于2D空间数据与1D数据类型，再加上传统数据库系统使用的索引之间不匹配，这样的空间查询需要耗费长时间的计算，并引入巨大的编程工作量。此外对于多级查询来说，单纯的空间数据类型集合是不够的，因为某些查询的结果（比如不相交多边形的集合）无法自然表达为点、线与多边形。为了直观显示，同时有效回答多级并行空间查询的问题，空间数据库（如Oracle Spatial and PostGIS）引入了空间数据类型（比如OGIS的简单功能）、计算（内部与距离）、空间数据架构（比如R-tree和泰森多边形）和算法（比如最短路径、最近邻还有范围查询）。编程工作量的减少使得代码更紧致，响应时间更迅速。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;空间统计：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;硅片哪处区域的缺陷会异常高度集中？最近是否有疾病爆发，爆发区域在何处？在1854年，斯诺医生在伦敦地图上手工绘制宽街水泵附近的霍乱爆发热点（图2a），就算是针对小区域内单一种类疾病的分析也花了若干天。如今，公共卫生机构通过旨在发现疫情与热点的（如扫描统计）空间统计测试，就可以在大范围内监控传染病评分（图2b），并将这些事件与自然变化区分开来。空间统计技术也常用于公共安全（如高犯罪地域）、超大型积体电路设计（如找出硅片缺陷集中区域）、天气预报（比如数据同化）、交通运输（比如事故多发地段）、矿业（比如克里金方法）、公共卫生（如癌症群体检测）以及农业（比如为农业普查中的精细农业与抽样设计设置管理区域）等领域。在将传统统计模型（如线性回归、皮尔森相关系数）应用到地理数据方面时，空间统计理论（如点过程、空间自相关、地址统计学）解决了独特的挑战（比如违反独立同分布假设）。尽管空间统计技术比传统的统计技术在计算与数据量上都要高出一个数量级，不过近几十年来，计算与数据技术也在逐渐趋向低价高性能，如传感器、空间数据库管理系统还有GIS，从而推动空间统计方式的采用率。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwxJibhasJssTJwx6ZxrN1ok9zZbk4picE7VahVbj2NjKsibxbXjdJS0WXrA/0?wx_fmt=jpeg"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图二&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;span&gt;最近的改变&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在20世纪末，大多数的地图都是由政府机构或测绘公司中的少数精英绘制出来的。美国国防部或石油勘探公司这样的机构，使用高度专业化的软件（Esri ArcGIS与Oracle Spatial之类）来编辑分析地理信息。表2中总结了一些空间计算领域的进展，这些技术显著改善了这种状况。在移动电话普及，接入互联网的用户上涨到数十亿后，全球几乎都在使用空间技术。先驱者的成功提升了人们对空间技术的期待。同时，人们对位置信息数据滥用的担心也在逐渐增长。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwxroTuicEr9UOxqEic1Ng305Fu7IRSSDdw4zd5Gp6eGHqCPnlic6VeW9tNQ/0?wx_fmt=jpeg"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;表二&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用基于位置的服务和地图更新服务的人口多达数十亿：随着基于网络的技术、移动电话、智能手表、民用GPS设备以及基于位置的社交媒体的成长，基于位置的服务以及互联网服务也随之成长，将地理信息系统带到大众视野中。使用移动电话、民用GPS设备与服务的人口多达数十亿。Uber、Waze、Google Maps、Facebook签到，以及其他基于位置的社交媒体在全球范围内也有超过10亿人使用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;提供地图数据的功能多达数十亿种，能观测到的现象很多：越来越多的智能手机用户也在自愿或被动地贡献着自己的地理位置信息，直接造成了各类空间数据的分布范围更广、数量更多。由于3D地图的传感器越来越丰富，人们现在所能观察到的现象也越来越多，地图分辨率也在逐渐提升。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;多个定位平台：以往来讲，空间计算支持要受到应用软件层面（比如 ArcGIS）、网络服务（比如谷歌地图和地图查询）、数据库管理（比如SQL3/OGIS）等诸多限制。近十年来，对空间计算的支持在某些级别的计算堆栈中有所体现，包括HTML5、社交媒体签到、互联网协议第六版与开放位置服务等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;由于潜力与风险巨大，预期也有所提升：基于位置的服务、导航辅助与交互式地图可以说是已经超出了用户的期望，其直观与易于使用的特性赢得了良好的声誉。空间计算在各方面潜力明显，包括减少温室气体排放、加强网络安全、提高消费者信心与解决很多其他社会问题上。然而，空间计算科技的大获成功也引发了用户的警戒心理：位置隐私的隐患必须得到解决，否则公众对于位置服务的信心会逐渐减退。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;span&gt;短期机遇&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上面提到的这些变化影响极为深远，不但凸显出空间计算研究方面的新兴渠道，也带来了许多激动人心的新机遇。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;增强现实系统：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;增强现实丰富了我们对真实世界的感知，通过在空间中叠加虚拟图像，影响人们的视觉，从而传达该地点或物体在过去、现在与未来的信息，如图三和图四。这种技术已经用在飞机座舱的平视显示器上，也逐渐成为智能手机应用受欢迎的功能。这种技术虽然很轻量级却功能强大，随着其普及，增强现实技术将在医学、建筑、旅游、商业、工程、城市规划、组装维护以及日常生活智能化领域扮演更重要的角色。空间计算研究领域所面临的新挑战是如何创造新算法，以及如何将其与云技术、全3D定位、人机位置估算等技术相结合。想要影响人类的所有感官（比如视觉、听觉、触觉）与控制能力（手、眼、腿等），实现在多个任务中与增强现实交互，需要怎样接入？如何以充分的自由度通过技术捕捉人体，并在虚拟空间中表示出来？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwxKpwseNwhibO6ibmPcJJcS71mFlE5JMgS5d21ichMZibKHJ2XjWwAXeQVTQ/0?wx_fmt=jpeg"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图三&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwxUubPOUJlf4nYQNufsJxeLOjEPgVajLWkXAMHu1UxibSokR1raplcGoA/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图四&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;空间预测分析：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;随着过去十年来，空间统计以及空间数据挖掘方面取得了长足的进步，人们能够更精准、更及时地预测飓风的路径、疾病的传播、交通堵塞情况等。由于空间自相关性、非平稳性与边缘效应，这些问题在传统预测中难以解决。在进行针对大范围事件进行时间与空间预测时，包括肿瘤的生长趋势、飞机机翼或道路桥梁的裂纹扩散趋势等，空间模型价值重大。这一研究领域所需要回答的问题包括：如何将机器学习技术拓展到这一领域，解决存在于时间与空间上的自相关性、非平稳性、多相性与多尺度的挑战？如何挖掘频繁出现的时间与空间模式？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;利用位置信息辅助系统、车队与人群：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;未来必然会通过定位设备，将互联网上升到万物互联，让固定基础设施与移动对象（车辆行人等）之间的互联成为可能，协助改善交通状况，比如在2013年4月洛杉矶将所有4500盏交通信号灯互相连接起来，以改善高峰时间的交通状况。通过信息来源增加，信息不再掌握在少数人手中，司机、智能汽车还有基础设施都可能在减少拥堵、快速疏散、增强安全性诸方面起到作用。这种合作模式对“信任”提出了挑战：即要通过一群人来获得资源，进行计算和决策，如何确保这些在地理位置上极其分散的人群以值得信任的方式互相协作？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;将空间计算搬到室内、水下与地下：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;尽管在很大程度上，GPS信号在室内是不可用的，但人类在室内的时间多达80%到90%。基于位置的服务（比如路线导航）目前只占到了人们日常时间的10%到20%。但随着室内定位技术的发展寻路与导航功能（可用在大型机场与医院中），人们对21世纪的新期望是GPS在任何情况下可用，无论通过手机信号发射塔、WIFI发射器还是其他室内设备，从而使人们能够利用室内与地下定位（如矿山、隧道）。关于室内定位有一些新的研究问题，包括：哪种可扩展算法能够通过CAD图纸为室内空间创建导航地图？如果这个建筑没有CAD图纸呢？在GPS信号衰减甚至不可用时，我们如何进行可靠的室内定位服务？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;span&gt;长期研究需求&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;空间计算为社会提供了巨大的价值，不过在斩获成功的同时也带来了巨大的挑战。想要解决这些挑战，需要在空间计算领域乃至更多学科拥有专业知识与技能。首先，需要克服公众实际上担任地图绘制者这一现实的挑战，需要将数据来源从取自几个可信任的来源，变成让大批志愿者协同合作提供。其次，从给几个平台配备定位功能（比如手机）这种做法，改成几乎所有平台均配备（比如传感器、PC和云端等）定位功能。再次，需要更好地了解人类认知，以确保全社会都会从基于位置的服务中受益。最后，空间计算必须解决用户信任与隐私被曝光的隐患问题。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;从融合到协同：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;一直以来，流行的GIS软件产品都是为几何数据（如点、线、多边形）和栅格数据（如卫星图像）所设计的。然而，现在有越来越多的地理数据是来自大众自愿提供的信息，包括签到、发推、地理标签、位置报告还有GPS追踪。自愿提供的地理位置信息对数据误差、可信度与偏差提出了挑战。在空间计算技术中，信息出错所带来的政治与法律后果可能代价高昂，比如2005年在特里娜飓风过后，美国国会对新奥尔良最容易发生洪涝的联邦地图延迟发布这一点十分关注，由于信息不确定而导致重建步伐被拖慢。将来，这类的政治或法律问题会更加严重。要想应对这种挑战，需要转换思想，从传统的数据融合转到更宽泛的数据协同模型，这种新的模型会引发更多问题。例如，志愿者经常用到地名（比如硅谷）和介词（比如附近、在、顺着），而非精确的位置坐标（比如经纬度）。因此我们需要给出解决办法，调整现有基于坐标的数据架构与算法，使其适用基于地名与空间介词的空间数据信息。此外，我们需要针对空间和时空的计算制定标准，通过质量改进过程（如同行评审等）和质量评定（如位置精度），更有效地利用用户所自愿贡献的地理信息。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;从传感器到云：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;在20世纪，空间计算在公众心目中就是软件（比如ArcGIS和Oracle Spatial Databases）。如今，空间系统所有级别的计算堆栈都会受到新的影响：由于智能手机以及基于网络的虚拟地球仪得到了广泛使用，越来越多的平台都包含了定位功能。空间计算的底层计算堆栈需要新的基础设施支持，从而在不同的硬件、汇编语言、操作系统内核、运行库、网络堆栈、数据库管理系统、地理信息系统以及应用程序中，对空间数据类型与运算进行合理分配。为了改进增强现实功能，需要对现有的眼镜显示器和智能手机等设备作出调整，从而获得自动、准确、可扩展的检索方式、识别方式与信息展示方式。而紧急救援、健康管理、水能分布的实时状况监控则需要遍布全球的基础设施建设，为我们提供实时的以厘米为精度的定位信息。由空间大数据引发的计算问题为云计算研究提供了新的研究机遇：现有的空间数据集超出了普通空间计算技术能力，如何计算其规模、种类与更新率，并用合理的方式学习、管理、处理数据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;空间认知为先：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;以前，空间计算服务只提供给少数经过GIS训练的专业人员，他们所分享的专业术语难以为大众所理解。如今，民众在日常使用位置服务的同时，也为地图制作提供相关的信息，对于空间认知心理学的需求也变得迫切起来。理解这些内容可以方便大众更好地利用及设计地图等地理信息产品。需要推进对空间认知辅助的研究，探索新的想法，比如为不会看地图的用户提供个性化的地标导航服务，或者在无名道路上提供新地图导航服务。对群体行为的理解能够增强针对人群（相对于个体）的空间计算服务。在这些场景中，背景信息（比如发推的人、其位置还有这种情况下的物理特性）也应纳入考虑，来诠释紧急情况下在推特上的警报信息（比如台风等自然灾害）。应当对理解空间服务的新办法（比如导航、学习空间布局、阅读地图），还有不同群体（比如司机和行人）理解空间的方式进行进一步研究，来抓住这些机会：人们如何表示并学习认知地图？如何利用空间认知概念提高空间计算服务的可用性？如何设计出优秀的UI界面，缩小“微观”与“宏观”的差距——“微观的”空间计算，比如在室内带有立体显示的桌面系统与精确的3D追踪；“宏观的”空间计算，比如在户外通过手机或可穿戴设备上的粗略GNSS。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;位置隐私：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;虽然位置信息（如手机和汽车GPS）为应急人员、消费者及行业提供了很大价值，但是这些数据流也带来了严重的隐私泄漏问题与诚信问题，并引出通过位置信息监控大众的信息滥用问题。比如欧盟就曾指责谷歌街景侵犯隐私，并在一些国家禁用该服务。位置信息使用与隐私保护的博弈仍是个很大的挑战。而模糊化位置信息的努力在很大程度上带来了负面效果。很多人因担心隐私泄漏而不敢使用相关的服务，计算机科学家需要与政策制定者一同，努力赢得公众的信任。必须按照“公平信息处理条例”来设计新的法规，特别是与通知、透明度、承诺、诚实与责任义务相关的那些。不过，这种调整也会引发新的问题，比如：怎么才算得到了收集空间数据的“充分通知”？应当如何请求授权？应当保存哪些信息，保存多久？更明白的说法是：什么时候定位信息会侵犯隐私权？降低地图分辨率是否能解决这个问题？我们如何在满足社会需求的同时（如追踪传染病），保护个人位置信息的隐私？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;span&gt;结论&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在未来几十年中，空间计算为研究者及企业家等人提供了一系列重大的机遇。想要抓住这些机会，需要在该研究领域投入大量人才与资金，包括但不限于上面所述的案例。如今的很多空间计算项目太过局限，无法达到临界质变所需的进步。捐助者必须考虑将大量资金投在综合多所大学多个教职员团队的更大型更冒险的研究上。一些示范项目包括美国国家地理信息与分析中心、加拿大GEOmatics信息决策网络、荷兰的GRE项目以及澳洲空间信息合作研究中心。在研究领域的另一障碍在于，来自空间计算专家申请的补助金很少，可能会导致顶尖人才的缺乏。因此，资助机构应当特别考虑这类的补助申请。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;一些机构在空间计算方面设立了研究项目，鉴于其跨领域的范围，捐助者应当在这一新兴领域创建专为空间计算设计的长期研究项目，以打造出计算机科学领导者。多机构间相互协调将会减少项目竞争，促进跨学科交融，而跨部门研究也会让整个领域包括机构自身受益。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最后，空间计算科学家需要研究者本学校提供更多制度上的支持。除了一次性的大型资助之外，一些研究型大学也建立了GIS中心还有校园范围内的空间项目，以进行跨学科的研究，包括气候变化与公共卫生等，更多研究型大学也应该跟上这一步伐。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;空间计算已经证明了自身价值——为社会提供了重大的经济机遇，而在这方面的进一步深化必将带来更具革命性的进步。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="line-height: 25.6px; white-space: normal;"&gt;&lt;p&gt;&lt;span&gt;编译整理/孙薇&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2016年11月18日-20日，由CSDN重磅打造的年终技术盛会&lt;span&gt;&lt;strong&gt;SDCC 2016中国软件开发者大会&lt;/strong&gt;&lt;/span&gt;将在北京举行，大会秉承干货实料（案例）的内容原则，本次大会共设置了12大专题、近百位的演讲嘉宾，并邀请业内顶尖的CTO、架构师和技术专家，与参会嘉宾共同探讨电商架构、高可用架构、编程语言、架构师进阶、微信开发、前端、平台架构演进、基于Spark的大数据系统设计、自动化运维与容器实践、高吞吐数据库系统设计要领、移动视频直播技术等。10月21日仍是五折抢票，最低1400元，点击注册参会抢票。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAuiaBCibnicg87kue5JEYw7TTYF2l1Sfflft5pXMySicibQmEk8NXYrK7JmdMXpLG3FpgAVXCsp1XJ4hqJQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Tue, 11 Oct 2016 20:45:39 +0800</pubDate>
    </item>
    <item>
      <title>聚焦和增强卷积神经网络</title>
      <link>http://www.iwgc.cn/link/3027816</link>
      <description>&lt;p&gt;&lt;span&gt;卷积神经网络是一种主流的深度学习模型，它可以用神经网络模型来处理序列化的数据，比如文本、音频和视频数据。它能把一个序列浓缩为抽象的理解，以此来表示这个序列，乃至新产生一个序列。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwxjUGb1GmASlo9WmK9qy11wicyFTYDQadxgIRib6z70nic9HicOcysbWEgxA/0?wx_fmt=png"/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;基本的RNN网络设计对长序列串往往束手无策，但是它的特殊变种 ——&lt;span&gt; “长短期记忆模型（LSTM）” &lt;/span&gt;—— 则能处理这些数据。这类模型被认为非常强大，在许多类别的任务上取得了显著的成绩，包括机器翻译、语音识别、和看图写话等。因此，卷积神经网络在过去几年内变得非常流行。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;随着卷积神经网络的流行，我们看到人们试图用各种方法来提升RNN模型的效果。其中，有四个方向的改进效果比较显著：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwxfqjzf6fA7hAmcbibOEAaXeJxBfdohgqiaup0dGbY1KnBiacDgmP3EiayAw/0?wx_fmt=png"/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这些技术都是RNN模型可能的扩展方向，但真正让我们兴奋的是可以将这些技术都合并起来，就像是更广阔空间中的一些点聚合。而且，这些技术所基于的底层技术都相同 —— 被称作聚焦机制（attention）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们猜测这些“增强神经网络”在今后几年内对于拓展深度学习的能力将会扮演重要的角色。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;神经图灵机器&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;神经图灵机器（&lt;span&gt;Graves, et al., 2014&lt;/span&gt;）将RNN模型与一个外部记忆模块结合。由于向量表达是神经网络界的自然语言，所以记忆的是一组向量值：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwxaUBHxES8OG0pGibntmsicEkriamdhr37JIl7vjMibWYiaBYspPw905lic6KA/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但是，读和写的过程又是怎样的呢？这里的挑战在于我们想区分这两个过程。具体说来，我们想区分读和写的区域，那么我们就能学会从哪儿去读取，写入到什么位置。由于存储地址本质上是离散化的，因此这个问题比较棘手。神经图灵机器采用了一种非常聪明的解决方案：它们在每一步以不同的程度来读和写各个位置。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以读取为例，不同于指定一个位置读取，RNN模型给出了“聚焦分布（attention distribution）”，描述了我们对不同记忆位置的关注程度。因此，读取操作是带权重的累加。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwxLXPg7TGUyv3sB3KEJOCG4JsiaYTPje8v0RiaqiaApia1xfIWMfn3avP9ibA/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;同样的，我们每次以不同的程度写入内容。聚焦分布描述了我们在每个位置的写入量。记忆单元中某个位置的新值是旧的记忆内容与新写入内容的组合，它们之间的位置由聚焦权重所决定。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwxsK8D1udMO8ic2wMCbDN5cVCn9r4md9q87xKL4srSfH14dNBPrkqse8A/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但是，神经图灵机器是如何决定需要聚焦在哪一块记忆区域呢？事实上，它们结合了两种不同的方法：基于内容的聚焦和基于位置的聚焦。基于内容的方法让神经图灵机器搜索遍历它们的记忆库，然后关注在与内容相符合的区域，而基于位置的方法则允许在记忆区域的相对运动，使得神经图灵机器可以循环。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwx1baZwGsf20Yg4tSTf7RU2xv6GY3oN70MibnSYUOImP6hkfCrs3Ldjyw/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这种读写能力使得神经图灵机器可以进行很多种简单的运算，超越了普通神经网络的能力。比如，它们可以学习记忆一段长序列，然后不断地循环重复。随着它们不断地循环，我们能观测到它读写的位置，能够更全面地理解其工作原理：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;它们还能学习模仿查询表，甚至学习对数字排序！然而，它们却无法完成许多基本任务，比如加法或者乘法运算。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwxdx1XOlySExK8gPLpvHy8W6LOJZDPsvurzJr3mMJosWpkA92rJnlanQ/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Graves, et al., 2014&lt;/span&gt;&lt;span&gt;文中介绍了大量的实验。这张图片展现了“重复复制”的实验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;自最初的神经图灵机器论文发表之后，在这一领域方向又涌现出了大量优质论文。神经GPU(&lt;span&gt;Kaiser &amp;amp; Sutskever, 2015&lt;/span&gt;) 克服了神经图灵机器无法计算加法和乘法的缺陷。&lt;span&gt;Zaremba &amp;amp; Sutskever, 2016&lt;/span&gt;采用强化学习的方法训练NTM。神经随机访问机器（Neural Random Access Machines &lt;span&gt;Kurach et al., 2015&lt;/span&gt;)基于指针运行。一些论文尝试了不同的数据结构，比如堆栈和队列（&lt;span&gt;Grefenstette et al. 2015&lt;/span&gt;; &lt;span&gt;Joulin &amp;amp; Mikolov, 2015&lt;/span&gt;)。记忆网络（&lt;span&gt;Weston et al., 2014&lt;/span&gt;; &lt;span&gt;Kumar et al., 2015&lt;/span&gt;）是解决类似问题的另一种方式。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这些模型能解决的任务并没有太复杂，比如数字的相加，传统的程序就能轻而易举地解决。但神经网络模型不仅局限于此，例如神经图灵机器在能力上有了深远的突破。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;代码&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这些模型有许多开源的实现版本。神经图灵机器的开源实现版本有&lt;span&gt;Taehoon Kim’s&lt;/span&gt; (TensorFlow), &lt;span&gt;Shawn Tan’s&lt;/span&gt; (Theano), &lt;span&gt;Fumin’s&lt;/span&gt; (Go), &lt;span&gt;Kai Sheng Tai’s&lt;/span&gt; (Torch), and &lt;span&gt;Snip’s&lt;/span&gt; (Lasagne)。神经GPU论文的代码已经开源，合并到了 &lt;span&gt;TensorFlow模型代码库&lt;/span&gt;。记忆网络的开源实现有&lt;span&gt;Facebook’s&lt;/span&gt; (Torch/Matlab), &lt;span&gt;YerevaNN’s&lt;/span&gt; (Theano), and &lt;span&gt;Taehoon Kim’s&lt;/span&gt; (TensorFlow)。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;适应性计算时间（Adaptive Computation Time）&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在翻译句子时，我们会尤其关注当前正在翻译的词语。在转换语音记录时，我们会集中注意认真聆听正在书写的片段。如果你让我描述我所在的屋子，我肯定会瞥一眼正在描述的屋内物品。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;神经网络模型可以使用聚焦来实现同样的动作，专注于所提供信息的某一部分。例如，一个RNN模型可以输入另一个RNN模型的输出。它在每一步都会关注另一个RNN模型的不同位置。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们希望聚焦点是可区分的，从而能学会需要关注哪些位置。因此，我们借用了神经图灵机器的技巧：关注所有位置，只是程度不一样。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwxTWD6hPicgfJowb2ibjoNFmiaqz1VzjC9QcF3ibQKibT87N5EtOG9nibn6fdQ/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;聚焦分布通常是由基于内容的聚焦产生。RNN模型生成一个搜索词描述其希望关注的位置。然后计算每条内容与搜索词的点乘得分，表示其与搜索词的匹配程度。这些分数经过softmax函数的运算产生聚焦的分布。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwxyeqgqAMdE8TQoHgzTHU5SO6yMdfTdBmIQj7fFNSBGBzpMibymjpemqw/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;聚焦机制在RNN模型的使用场景之一是语言翻译（&lt;span&gt;Bahdanau, et al. 2014&lt;/span&gt;）。若用传统的序列到序列模型做翻译，需要把整个输入词汇串缩简为单个向量，然后再展开恢复为序列目标语言的词汇串。聚焦机制则可以避免上述操作，RNN模型逐个处理输入词语的信息，随即生成相对应的词语。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwxs7ica6f0PeVpcz0iatXsNoUJbRroaLXSDHy4doBJu7r3Do5lpebQb0icA/0?wx_fmt=png"/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;RNN模型之间的这类聚焦还有许多其它的应用。它可以用于语音识别（&lt;span&gt;Chan, et al. 2015&lt;/span&gt;），其中一个RNN模型处理语音信号，另一个RNN模型则滑动处理其输出，然后关注相关的区域生成文本内容。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwxG95hPeNHianoOR4Fv8t3gw9iaWicjHQ7NMMxiads0hvPzQicXoSh4SZYrYA/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图片来自于&lt;span&gt;Chan, et al. 2015&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;聚焦机制的其它用途还包括文本解析（&lt;span&gt;Vinyals, et al., 2014&lt;/span&gt;）生成一棵解析树，以及&lt;/span&gt;&lt;span&gt;用于会话模型（&lt;span&gt;Vinyals &amp;amp; Le, 2015&lt;/span&gt;），模型可以根据之前的会话内容生成回复。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;聚焦机制还能用作卷积神经网络CNN和RNN模型的接口。这使得RNN模型每一步都在关注图片的不同区域。这种方法的用途之一就是给图片添加描述。首先，用卷积神经网络处理图像，提取高层次的特征。然后运行RNN模型，生成图像的描述。随着RNN模型在图像的卷积网络特征的关注部位不同，生成相对于的描述文字。我们来将这个过程可视化：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwxBJaG14Tyz00KrGUA4vBc37WKgeXibsicv7Mu4hDS9eoqsqMHkNNibNQlg/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图片来自 &lt;span&gt;Xu, et al., 2015&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;推而广之，若某个神经网络的输出具有重复性的结构，就能使用聚焦接口（attentional interfaces）与这个神经网络相衔接。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;聚焦接口被认为是一项非常普及和有效的技术，受到了越来越多的应用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;适应性计算时间（Adaptive Computation Time）&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;标准的RNN模型每一步所消耗的计算时间都相同。这似乎与我们的直觉不符。我们在思考难题的时候难道不需要更多的时间吗？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;适应性计算时间（Adaptive Computation Time &lt;span&gt;Graves, 2016&lt;/span&gt;）是解决RNN每一步消耗不同计算量的方法。笼统地说：就是让RNN模型可以在每个时间片段内进行不同次数的计算步骤。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了让网络模型学会需要计算多少步，我们希望步数有区别性。因此我们采用了之前提到过的技巧：我们给需要计算的步数设了聚焦分布，而不是指定具体的数值。输出的是每一步的带权重结合。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwxLRl800icl24e2orueSwRVftzqxHycgOJN3YAUrd6vyTeDMccFAiacKzA/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上图省略了不少细节内容。下图是一个时间片段的完整示意图，包括了三个计算步骤。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwxUW3V0tDXqJh5RxytoOzfbKqmqVQ7rhn8R8NWZKkFTw3ziblgKSUCpZA/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;看上去有点儿复杂，所以我们一步步往下看。从较高的层次观察，我们仍旧运行RNN模型，输出各个状态的带权重组合：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwxCXqgDo8jEN2aMVwib5rUQzs2icx6ibrjtY9DfGKtLanbcTibwib8LJALeew/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;每一步的权重值由“halting neuron”决定。这个神经元事实上是一个sigmoid函数，输出一个终止权重，可以理解为需要在当前步骤终止的概率值。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwxS15CUIgxukVYw2MWSCE73BxiclH4fFV5kjOwiaFbLEjF6LyXyUBoatNQ/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;停止权重值的总和等于1，每一步结束后要减去相应的值。一旦这个值小于了epsilon，我们就停止计算。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujPpiaWnCtox6kickrLZgjJwxTqtibic2alRbFOwicW5ZiaDlLJibfib63XgJQevVHH1Curk9SpjagIZk34Ww/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当训练Adaptive Computation Time模型时，可以在损失函数添加一项“ponder cost”，用来惩罚模型的累积计算时间。这一项的值越大，就更不倾向于降低计算时间。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;ACT仍是一个非常新的概念，但是我们相信它以及其它类似的概念今后一定会发挥作用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;代码&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;目前开源的ACT代码貌似只有 &lt;span&gt;Mark Neumann’s&lt;/span&gt; (TensorFlow)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;展望&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在某种程度上，事先有准备的人会比两手空空的人更聪明。我们使用数学符号能解决许多新问题，而我们依靠计算机则可以完成更多不可思议的任务，远远超出了我们的个人能力。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;一般来说，智慧的表现形式往往是人类启发式直觉与更细腻的媒介的交互过程，比如语言和公式。有时候，这种媒介是实实在在存在的物体，可以用来存储信息，避免我们犯错误或是进行繁重的计算任务。在其它情况下，这种媒介是我们脑子里的模型。无论如何，它似乎是智慧的基础。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;机器学习领域的最新研究成果已经带有这种味道了，将神经网络的直觉与其他东西结合。一种方法是所谓的“启发式搜索”。例如，AlphaGo (&lt;span&gt;Silver, et al., 2016&lt;/span&gt;) 建立了一个下围棋的模型，在神经网络的指导下探索如何进行游戏。同样的，DeepMath (&lt;span&gt;Alemi, et al., 2016&lt;/span&gt;)利用神经网络处理数学表达式。我们在本文中提到的“增强RNN”属于另一种方法，我们将RNN模型与工程媒介相结合，以提高它们的泛化能力。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;与媒介的互动自然会涉及到一系列的采取行动、观察情况、继续行动步骤。这就产生了一个重大的挑战：我们如何学习该采取哪些行动？这听起来像是一个强化学习的问题，我们当然可以采取强化学习方法。但是强化学习也正在攻坚解决这些难题，其解决办法目前也很难被采用。聚焦的好处在于它让我们比较轻松地绕开了这个问题，我们可以不同程度地采取所有行动。而强化学习只允许我们选择一条道路，从中学习经验。聚焦机制在岔路口会选择所有的方向，然后将各条路径的结果合并起来。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;聚焦机制的一大弱点就是每一步都需要执行一个“行动”。这导致消耗的计算资源呈线性增长。有一种解决方式是将聚焦稀疏化，因此只需要处理其中的一部分记忆单元。然而，也许你希望聚焦点是基于记忆单元的，这样势必需要浏览所有的内存单元，这又带来了不小的挑战。我们看到了一些初步的解决方案，例如&lt;span&gt;Andrychowicz &amp;amp; Kurach, 2016&lt;/span&gt;，似乎还有很大的提升空间。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;增强RNN和其背后的聚焦技术真的领入兴奋。我们期待看到它们取得更大的进展！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（文中所有标蓝部分均可阅读原文获取详情）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;p&gt;原文： Attention and Augmented Recurrent Neural Networks&amp;nbsp;&lt;/p&gt;&lt;p&gt;译者： KK4SBB&amp;nbsp;&lt;/p&gt;&lt;p&gt;责编：何永灿，关注人工智能，投稿请联系heyc@csdn.net或微信号289416419&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Tue, 11 Oct 2016 20:45:39 +0800</pubDate>
    </item>
    <item>
      <title>《程序员》：当微软牛津计划遇到微信App ——微信实现部分</title>
      <link>http://www.iwgc.cn/link/2979359</link>
      <description>&lt;blockquote style="line-height: 25.6px; white-space: normal;"&gt;&lt;p&gt;&lt;span&gt;本文为《程序员》原创文章，未经允许不得转载，更多精彩请订阅2016年《程序员》&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;微软牛津计划（Project Oxford）提供了一系列机器学习API，包含计算机视觉、语音识别和语言理解等认知服务，它能为微信开发带来怎样有趣的功能？请看本文分解。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;微软牛津计划提供了一组基于Rest架构的API和SDK工具包，帮助开发者轻轻松松使用微软的自然数据理解能力为自己的解决方案增加智能服务。利用微软牛津计划构建你自己的解决方案，支持任意语言及任意开发平台。主要提供了四个自然语言处理方面的核心问题解决方案：人脸识别、语音识别、计算机视觉，以及语言理解智能服务。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAugPZUEPKnnFxzNWpdZcKnfsS7BibXaPnr5Jnr849NdK42ERDvwrZycVU788yD4YfRUalhvibTYVAUSA/0?wx_fmt=jpeg"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图1 应用界面&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;微软提供了这么强大的API，我第一时间就想，是不是可以迁移到微信平台上去做一些好玩的应用，不过在这之前，我没有做过任何微信开发的工作，所以本篇文章将分享整个实现的经验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;span&gt;ASP.NET WebAPI实现微信接入验证&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先你需要一个微信公众号，很重要的是你需要完成认证，这点非常重要。当你完成公众号的基本设定后，我们需要为开发做第一件事情：让微信验证通过开发者中心页配置的服务器地址。微信服务器将发送GET请求到我们注册的服务器地址URL上，GET请求携带四个参数：signature、timestamp、nonce、echostr。我们编写了一个WebAPI对微信的请求进行反馈。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="line-height: 25.6px; white-space: normal;"&gt;&lt;p&gt;&lt;span&gt;public HttpResponseMessage Get(string signature, string timestamp, string nonce, string echostr)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; string[] ArrTmp = { TOKEN, timestamp, nonce };&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; Array.Sort(ArrTmp);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; string tmpStr = string.Join("", ArrTmp);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; var result = FormsAuthentication.HashPasswordForStoringInConfigFile(tmpStr, "SHA1").ToLower();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; return new HttpResponseMessage (){&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Content = new StringContent(result, Encoding.GetEncoding("UTF-8"), "application/x-www-form-urlencoded")&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; };&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上面这段代码的要点是返回值，很多工程师在使用WebAPI返回给微信验证时一直失败，是因为忽略了返回值的编码要求是application/x-www-form-urlencoded。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;span&gt;ASP.NET WebAPI实现微信JS-SDK接口注入权限验证配置&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们的客户端采用微信的JS-SDK，但是所有需要使用JS-SDK的页面必须先注入配置信息，否则将无法调用，当使用JS-SDK的时候，微信会将appId、timestamp、nonceStr和signature的参数进行加密和验算是否正确，所以我们需要提供一个正确的签名值。需要获得这个签名必须要完成两步，图2所示的UML描述了这个过程。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAugPZUEPKnnFxzNWpdZcKnfsYvj0kWMOOuPgGccgniaenLR5WL7RaicLfGLhQ9sicKwdBWJ0BX0IcCuLg/0?wx_fmt=jpeg"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图2 获取签名过程示意图&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;第一步：获取Access Token&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="line-height: 25.6px; white-space: normal;"&gt;&lt;p&gt;&lt;span&gt;if (HttpRuntime.Cache["access_token"] == null)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; var queryString = HttpUtility.ParseQueryString(string.Empty);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; queryString["grant_type"] = "client_credential";&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; queryString["appid"] = APPID;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; queryString["secret"] = APPSECRET;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; var uri = "https://api.weixin.qq.com/cgi-bin/token?" + queryString;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; HttpResponseMessage response;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; response = await client.GetAsync(uri);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; var msg = await response.Content.ReadAsStringAsync();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; var jsonobj = Newtonsoft.Json.Linq.JObject.Parse(msg);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; HttpRuntime.Cache.Add("access_token",&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; (string)jsonobj["access_token"],&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; null,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; DateTime.Now.AddMinutes((int)jsonobj["expires_in"]),&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new TimeSpan(0, 0, 0),&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; System.Web.Caching.CacheItemPriority.AboveNormal,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; null&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; );&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;第二步：获取jsapi_ticket&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="line-height: 25.6px; white-space: normal;"&gt;&lt;p&gt;&lt;span&gt;if (HttpRuntime.Cache["jsapi_ticket"] == null)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; var queryString = HttpUtility.ParseQueryString(string.Empty);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; queryString["access_token"] = (string)HttpRuntime.Cache["access_token"];&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; queryString["type"] = "jsapi";&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; var uri = "https://api.weixin.qq.com/cgi-bin/ticket/getticket?" + queryString;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; HttpResponseMessage response;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; response = await client.GetAsync(uri);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; var msg = await response.Content.ReadAsStringAsync();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; var jsonobj = Newtonsoft.Json.Linq.JObject.Parse(msg);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; HttpRuntime.Cache.Add("jsapi_ticket",&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; (string)jsonobj["ticket"],&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; null,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; DateTime.Now.AddMinutes((int)jsonobj["expires_in"]),&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; new TimeSpan(0, 0, 0),&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; System.Web.Caching.CacheItemPriority.AboveNormal,&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; null&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们用于签名的素材都到齐了，我们要实现签名算法了。实现的代码如下。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="line-height: 25.6px; white-space: normal;"&gt;&lt;p&gt;&lt;span&gt;var pwd = string.Format("jsapi_ticket={0}&amp;amp;noncestr={1}×tamp={2}&amp;amp;url={3}",&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; (string)HttpRuntime.Cache["jsapi_ticket"],&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; noncestr,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; timestamp,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; url&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; );&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;var tmpStr = FormsAuthentication.HashPasswordForStoringInConfigFile(pwd, "SHA1");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;return Request.CreateResponse(HttpStatusCode.OK, tmpStr);&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这时候我们前端的HTML5就可以正确的采用JS-SDK了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;span&gt;ASP.NET获取微信客户端上传的图片&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本来我以为这是个很简单的事情，后来才发现，使用微信JS-SDK的时候，微信的HTML5客户端不会将图片直接POST给我的服务端，而是先提交给微信服务器，然后我的服务端需要通过serverId 来获得图片，大致的流程我绘制了UML，见图3，大家可以理解下。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAugPZUEPKnnFxzNWpdZcKnfsItnMjGK395rVhVqoTaku2o8Jr8zh1FQ9N1QV1GxicyK3tWtAvFibfPCQ/0?wx_fmt=jpeg"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图3 获取微信客户端上传图片的过程&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;目前我们只关心服务器这段，我们将得到客户端传来的serverID，从微信的服务器上下载图片到本地。我们实现的代码如下。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="line-height: 25.6px; white-space: normal;"&gt;&lt;p&gt;&lt;span&gt;public async Task&amp;lt;string&amp;gt; Get(string mediaid)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; var queryString = HttpUtility.ParseQueryString(string.Empty);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; queryString["access_token"] = await Get();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; queryString["media_id"] = mediaid;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; var uri = "http://file.api.weixin.qq.com/cgi-bin/media/get?" + queryString;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; HttpResponseMessage response;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; response = await client.GetAsync(uri);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; var msg = await response.Content.ReadAsStreamAsync();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; var file = response.Content.Headers.ContentDisposition.FileName.Replace("\"", "");&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; var helper = new ProjecToxfordClientHelper();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; var content = await FileHelper.ReadAsync (msg);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; FileHelper.SaveFile(content, file);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; return file;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;}&amp;lt;/string&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;好了，到了现在，我们对微信服务器需要实现的接口都差不多了，接下来就可以设计微信的客户端了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;span&gt;WeUI设计微信客户端首页样式&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;WeUI是一套同微信原生视觉体验一致的基础样式库，由微信官方设计团队为微信网页开发量身设计，可以令用户的使用感知更加统一。在微信网页开发中使用 WeUI，有如下优势：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;同微信客户端一致的视觉效果，令所有微信用户都能更容易地使用你的网站；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;便捷获取快速使用，降低开发和设计成本；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;微信设计团队精心打造，清晰明确，简洁大方。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;该样式库目前包含button、cell、dialog、progress、toast、article、icon等各式元素，我们可以在https://github.com/weui/weui获得源代码和DEMO。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们先做首页，以了解WeUI样式库的使用方式。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;建立Index.html引入样式库和配置head节点。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="line-height: 25.6px; white-space: normal;"&gt;&lt;p&gt;&lt;span&gt;&amp;lt;meta charset="utf-8"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;lt;title&amp;gt;脸探&amp;lt;/title&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;lt;meta name="viewport" content="initial-scale=1.0,user- scalable=no,maximum- scale=1,width=device-width"&amp;gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;lt;link href="css/weui.css" rel="stylesheet"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;lt;link href="css/example.css" rel="stylesheet"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Body节点下的直接子元素是&amp;lt; div class=”page”&amp;gt;，其他所有元素都在这个节点下，我们的Index.html页面设计了两个div元素分别是：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="line-height: 25.6px; white-space: normal;"&gt;&lt;p&gt;&lt;span&gt;&amp;lt;div class="hd"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;lt;div class="bd"&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;hd节点下的代码非常简单，就是title的描述。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="line-height: 25.6px; white-space: normal;"&gt;&lt;p&gt;&lt;span&gt;&amp;lt;h1 class="page_title"&amp;gt;脸探&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;lt;p class="page_desc"&amp;gt;测测脸的相似度&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;bd包含的是一个&amp;lt; div class=”weui_panel weui_panel_access”&amp;gt;，WeUI提供的Panel非常容易设计图文组合列表，WeUI提供了一系列很有用的类：weui_panel、weui_panel_access、weui_panel_hd、weui_panel_bd。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们的Panel的标题就可以用weui_panel_hd进行修饰。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="line-height: 25.6px; white-space: normal;"&gt;&lt;p&gt;&lt;span&gt;&amp;lt;div class="weui_panel_hd"&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;具体的内容可以被weui_panel_bd修饰。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="line-height: 25.6px; white-space: normal;"&gt;&lt;p&gt;&lt;span&gt;&amp;lt;div class="weui_panel_bd"&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;weui_panel_bd 的子元素如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="line-height: 25.6px; white-space: normal;"&gt;&lt;p&gt;&lt;span&gt;&amp;lt;a href="" class=" weui_media_box weui_media_appmsg "&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;lt;div class=" weui_media_hd"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;lt;imgsrc="img 4432144_111855038929_2.jpg"="" alt=""&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;lt;/imgsrc="img&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;lt;div class=" weui_media_bd"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;lt;h4 class=" weui_media_title "&amp;gt;标题&amp;lt;/h4&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;lt;p class="weui_grid_label"&amp;gt;内容 &amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;lt;/div&amp;gt; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;了解了如何布局一个列表项，那首页就容易完成了，代码如下。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="line-height: 25.6px; white-space: normal;"&gt;&lt;p&gt;&lt;span&gt;&amp;lt;div class="page"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;lt;div class="hd"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;h1 class="page_title"&amp;gt;脸探&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;p class="page_desc"&amp;gt;测测脸的相似度&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;lt;div class="bd"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;div class="weui_panel weui_panel_access"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;div class="weui_panel_hd"&amp;gt;娃像谁 &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;div class="weui_panel_bd"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;a href="family.html" class="weui_media_box weui_media_appmsg"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;div class="weui_media_hd"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;img class="weui_media_appmsg_thumb" src="fonts/family.jpg" alt=""&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;div class="weui_media_bd"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;h4 class="weui_media_title"&amp;gt;三人照&amp;lt;/h4&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;p class="weui_media_desc"&amp;gt;上传一家三口三人照，立即知道孩子与父母相像指数&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;a href="family3.html" class="weui_media_box weui_media_appmsg"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;div class="weui_media_hd"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;img class="weui_media_appmsg_thumb" src="fonts/one.jpg" alt=""&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;div class="weui_media_bd"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;h4 class="weui_media_title"&amp;gt;单人照&amp;lt;/h4&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;p class="weui_media_desc"&amp;gt;上传一家三口各自照片，立即知道孩子与父母相像指数&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;lt;div class="bd"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;div class="weui_panel weui_panel_access"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;div class="weui_panel_hd"&amp;gt;夫妻相 &amp;nbsp; &amp;nbsp;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;lt;div class="weui_panel_bd"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;a href="couple2.html" class="weui_media_box weui_media_appmsg"&amp;gt; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;div class="weui_media_hd"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;img class="weui_media_appmsg_thumb" src="fonts/couple.jpg" alt=""&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;div class="weui_media_bd"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;h4 class="weui_media_title"&amp;gt;双人照&amp;lt;/h4&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;p class="weui_media_desc"&amp;gt;上传你和TA的双人照，你立即知道你们的天生缘分指数&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;lt;a href="couple.html" class="weui_media_box weui_media_appmsg"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;div class="weui_media_hd"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;img class="weui_media_appmsg_thumb" src="fonts/one.jpg" alt=""&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;div class="weui_media_bd"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;h4 class="weui_media_title"&amp;gt;单人照&amp;lt;/h4&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;p class="weui_media_desc"&amp;gt;上传你们两人各自照片，你立即知道你们的天生缘分指数&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们得到的首页效果大致如图4所示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAugPZUEPKnnFxzNWpdZcKnfsZxaMJG0LUtmeOcVelKACCeJDqgHTnibO576PnFaftMMFFXOqp7kjkgA/0?wx_fmt=jpeg"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图4 微信客户端首页效果图&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;span&gt;设计微信客户端功能页样式&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以娃像谁-单人照的页面为例，页面代码如下。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="line-height: 25.6px; white-space: normal;"&gt;&lt;p&gt;&lt;span&gt;&amp;lt;div class="pic_panel"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;lt;div class="parent" id="parent1"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;i class="icon iconfont icon-210 human"&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;lt;div class="parent" id="parent2"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;i class="icon iconfont icon-nv human"&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;lt;div class="clear"&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;lt;div class="parent1like like"&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;lt;div class="parent2like like"&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;lt;div class="clear"&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;lt;div class="picture" id="child"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;i class="icon iconfont icon-child human"&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;lt;form&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;input type="button" class="next" id="uploadImage" value="GO !!!"&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;lt;/form&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;id=”parent1” 和 id=”parent2” 为存放父母照片的容器，id=”child”为存放孩子照片的容器，点击容器触发选择照片，选择完成点击按钮作比较。class=”parent1like”和class=”parent2like” 分别显示 id=”child”分别与id=”parent1”和id=”parent2” 对比的结果。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们得到的页面效果类似图5所示的样子。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAugPZUEPKnnFxzNWpdZcKnfsPHImdFBJpB0U49cbcKDjvj3ysYiaB0lrF41bYLwL11exlz34XKmHkBg/0?wx_fmt=jpeg"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图5 娃像谁—单人照的页面效果图&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;span&gt;实现微信客户端交互&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在之前我们写了一个WebAPI接口来实现微信JS-SDK接口注入权限验证配置，现在我们的客户端需要调用这个接口来做验证了。客户端你需要引用jweixin-1.0.0.js。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;只要我们的业务需要使用微信JS-SDK，则都需要完成接口注入的权限验证，验证的方式我们来一步步分析见图6。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAugPZUEPKnnFxzNWpdZcKnfsgLZqvMElauYl2vtWhQsmCe1DicyLibz4Jxn6iasXUhGpd2kB6J93cd3cw/0?wx_fmt=jpeg"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图6 JS-SDK接口注入的权限验证过程&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;页面将noncestr（这个可以是页面定义一个常数）、timestamp（其实也可以是常数）、url当前页面地址提交给我们最早写的/api/weixin接口，然后将返回的签名提交给wx.config即可。下面的代码可以作为你的模板使用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="line-height: 25.6px; white-space: normal;"&gt;&lt;p&gt;&lt;span&gt;$(function () {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;var timestamp = Date.parse(new Date())/1000;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; var localurl = encodeURIComponent(window.location.href.split('#')[0]);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; $.ajax({&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; url: 'http://www.********.cn/wxapi/api/weixin',&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; dataType: "json",&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; data: {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; noncestr: 'FFUmZdbWVT9mVP7a',&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; timestamp: timestamp,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; url: window.location.href.split('#')[0]&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;},&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; success: function (data) {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;wxFace(data.toLowerCase());&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;})&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;function wxFace(signature) {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;wx.config({&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;debug: false,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;appId: 'wxec54ec7f720993da',&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;timestamp: timestamp,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;nonceStr: 'FFUmZdbWVT9mVP7a',&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;signature: signature,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;jsApiList: [&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 'checkJsApi',&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 'onMenuShareTimeline',&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 'onMenuShareAppMessage',&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 'chooseImage',&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 'previewImage',&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 'uploadImage',&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 'downloadImage'&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;] &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;});&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;});&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;然后我们定义选择图片函数，当选择id=”parent1”、 id=”parent2”、id=”child”时调用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="line-height: 25.6px; white-space: normal;"&gt;&lt;p&gt;&lt;span&gt;function chooseUpload(selector) {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; wx.chooseImage({&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; success: function (res) {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $("#loading").show();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;$(function () {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $.each(res.localIds, function (i, n) {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;wx.uploadImage({&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;localId: res.localIds.toString(), // 需要上传的图片的本地ID，由chooseImage接口获得 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;isShowProgressTips: 0, // 默认为1，显示进度提示&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;success: function (res1) {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;$.ajax({&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; url: 'http://www.******.cn/wxapi/face/detect/' + res1.serverId, &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;dataType: "json",&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;success: function (data) {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;$("#loading").hide();&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;if (JSON.parse(data).length == 1) {&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;$(selector).html('&amp;lt;img src="' + n + '"&amp;gt; &amp;lt;br&amp;gt;') &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.data('faceId', JSON.parse(data)[0].faceId);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;} else if (JSON.parse(data).length &amp;gt; 1) {&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;alert('请选择单人照哦')&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;alert('啊，我看不到你的脸~')&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;})&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; },&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; fail: function (res) {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; alert(JSON.stringify(res));&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;});&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; });&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;});&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;});&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;触发点击事件调用上传图片函数。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="line-height: 25.6px; white-space: normal;"&gt;&lt;p&gt;&lt;span&gt;document.querySelector('#parent1').onclick = function () {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; chooseUpload('#parent1')&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;};&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;定义函数，将拿到的两张照片的id做对比。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; function verify(selector, parent, child) {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; $("#loading").show();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; $.ajax({&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; url: 'http://www.******.cn/wxapi/face/verify/' + parent + '/' + child, &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; dataType: "json",&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; success: function (data) {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $("#loading").hide();&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $(selector).html('相似度：' + (JSON.parse(data).confidence * 100).toFixed(2) + '%')&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }) &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; }&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最后是我们分享朋友圈的功能实现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="line-height: 25.6px; white-space: normal;"&gt;&lt;p&gt;&lt;span&gt;var shareData = {&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; title: '测测孩子跟谁像',//分享的标题&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; desc: '来看看孩子跟爸爸比较像还是跟妈妈比较像',//分享的描述&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; link: window.location.href,//分享的快照&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; imgUrl: 'http://www. .******.cn/WeFace/fonts/family.jpg'//分享的链接&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; };&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; wx.onMenuShareAppMessage(shareData);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp; wx.onMenuShareTimeline(shareData);&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;分享结果如图7所示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAugPZUEPKnnFxzNWpdZcKnfsdrSaiaIgesbdTNGGQ0P5JnDoMdGqG4QPMu2R73IbDzBiaibLnRF9iaH2Rw/0?wx_fmt=jpeg"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图7 朋友圈分享功能效果图&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本文主要针对如何使用APS.NET WebAPI实现微信注入进行了深入讲解。下期会承接本文，重点分享服务的实现过程，内容主要有：调用封装微软牛津计划API、使用MongoDB存储数据和客户端如何使用。全文阅读完毕后，你将可以自己去编写更有价值的应用了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;p&gt;作者：王豫翔，微软连续多年多个方向的MVP，目前主要关注大数据、云技术和人工智能。在编程道路上遵循自己的“三少”“三多”原则：少讨论概念，少争论特征、少议论模型；多写代码、多做测试、多做应用。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;hr style="line-height: 25.6px; white-space: normal; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;订阅2016年程序员（含iOS、Android及印刷版）请访问&amp;nbsp;&lt;a target="_blank" style="color: rgb(0, 122, 170); text-decoration: underline; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span&gt;http://dingyue.programmer.com.cn&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz/Pn4Sm0RsAuj7pr8VDo3fPwSTL9lPuAxwZdhygL8iaXgRdmVaAWOf6nyKzU2TxhDzoqDO3AZyP8ORyjsVYo69rdA/640?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;订阅咨询：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal; max-width: 100%; background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在线咨询（QQ）：2251809102&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;电话咨询：010-64351436&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;更多消息，欢迎关注&lt;span&gt;“&lt;/span&gt;&lt;a target="_blank" style="color: rgb(0, 122, 170); text-decoration: underline; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;span&gt;程序员编辑部&lt;/span&gt;&lt;/a&gt;&lt;span&gt;”&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Sat, 08 Oct 2016 17:10:51 +0800</pubDate>
    </item>
    <item>
      <title>深度学习性能提升的诀窍</title>
      <link>http://www.iwgc.cn/link/2979360</link>
      <description>&lt;p&gt;&lt;strong&gt;&lt;span&gt;克服过拟合和提高泛化能力的20条技巧和诀窍&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你是如何提升深度学习模型的效果？&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这是我经常被问到的一个问题。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有时候也会换一种问法：&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我该如何提高模型的准确率呢？&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;……或者反过来问：&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果我的网络模型效果不好，我该怎么办？&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通常我的回答是“具体原因我不清楚，但我有一些想法可以试试”。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;然后我会列举一些我认为能够提升性能的方法。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了避免重复罗列这些内容，我打算在本文中把它们都写出来。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这些想法不仅可以用于深度学习，事实上可以用在任何机器学习的算法上。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAugPZUEPKnnFxzNWpdZcKnfs9UqF57FOblvDJQOnt5xyLEDyKcQicicK0gocHicjE8qMYgfAT9ibRuN3Ww/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如何提升深度学习的性能&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Pedro Ribeiro Simoes拍摄&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;提升算法性能的想法&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这个列表并不完整，却是很好的出发点。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我的目的是给大家抛出一些想法供大家尝试，或许有那么一两个有效的方法。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;往往只需要尝试一个想法就能得到提升。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果你用下面某一种想法取得了好效果，请在评论区给我留言！&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果你还有其它想法或是对这些想法有拓展，也请告诉大家，或许会对我们大家有帮助！&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我把这个列表划分为四块：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;从数据上提升性能&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;从算法上提升性能&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;从算法调优上提升性能&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;从模型融合上提升性能&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;性能提升的力度按上表的顺序从上到下依次递减。举个例子，新的建模方法或者更多的数据带来的效果提升往往好于调出最优的参数。但这并不是绝对的，只是大多数情况下如此。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我在文章中添加了不少博客教程和相关的经典神经网络问题。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其中有一些想法只是针对人工神经网络，但大多数想法都是通用性的。你可以将它们与其它技术结合起来使用。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们开始吧。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;1&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;从数据上提升性能&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;调整训练数据或是问题的抽象定义方法可能会带来巨大的效果改善。甚至是最显著的改善。&amp;nbsp;&lt;/span&gt;&lt;span&gt;下面是概览：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;收集更多的数据&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;产生更多的数据&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;对数据做缩放&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;对数据做变换&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;特征选择&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;重新定义问题&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1）收集更多的数据&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你还能收集到更多的训练数据吗？&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你的模型的质量往往取决于你的训练数据的质量。你需要确保使用的数据是针对问题最有效的数据。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你还希望数据尽可能多。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;深度学习和其它现代的非线性机器学习模型在大数据集上的效果更好，尤其是深度学习。这也是深度学习方法令人兴奋的主要原因之一。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;请看下面的图片：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAugPZUEPKnnFxzNWpdZcKnfsX19Re0RkZ5MSsUiaylFzNaV1LGl7hrD0hEzEqe9JpgXTmYI5UAe15uA/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;什么是深度学习？&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;幻灯片来自Andrew Ng&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;不总是数据阅读效果越好，多数情况下如此。如果让我选择，我会选择要更多的数据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相关阅读：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;数据集压倒算法&lt;/span&gt;&lt;span&gt;（&lt;span&gt;https://www.edge.org/response-detail/26587&lt;/span&gt;）&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2) 产生更多的数据&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;深度学习算法往往在数据量大的时候效果好。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们在上一节已经提到过这一点。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果由于某些原因你得不到更多的数据，也可以制造一些数据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果你的数据是数值型的向量，那么随机生成已有向量的变形向量。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果你的数据是图像，用已有的图像随机生成相似图像。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果你的数据是文本，做法你懂得……&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这类做法通常被称为数据扩展或是数据生成。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你可以使用生成模型，也可以用一些简单的小技巧。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;举个例子，若是用图像数据，简单地随机选择和平移已有的图像就能取得很大的提升。它能提升模型的泛化能力，如果新的数据中包含这类变换就能得到很好的处理。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有时候是往数据中增加噪声，这相当于是一种规则方法，避免过拟合训练数据。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相关阅读：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;深度学习中的图像数据扩充&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://machinelearningmastery.com/image-augmentation-deep-learning-keras/&lt;/span&gt;）&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;训练含有噪声的数据&lt;/span&gt;&lt;span&gt;（&lt;span&gt;ftp://ftp.sas.com/pub/neural/FAQ3.html#A_jitter&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;3) 对数据做缩放&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;此方法简单有效。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用神经网络模型的一条经验法宝就是：&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;将数据缩放到激活函数的阈值范围。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果你使用sigmoid激活函数，将数据缩放到0~1之间。如果选用tanh激活函数，将值域控制在-1~1之间。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;输入、输出数据都经过同样的变换。比如，如果在输出层有一个sigmoid函数将输出值转换为二值数据，则将输出的y归一化为二进制。如果选用的是softmax函数，对y进行归一化还是有效的。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我还建议你将训练数据扩展生成多个不同的版本：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;归一化到0 ~ 1&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;归一化到-1 ~ 1&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;标准化&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;然后在每个数据集上测试模型的性能，选用最好的一组生成数据。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果更换了激活函数，最好重复做一次这个小实验。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在模型中不适合计算大的数值。此外，还有许多其它方法来压缩模型中的数据，比如对权重和激活值做归一化，我会在后面介绍这些技巧。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相关阅读：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;我需要对输入数据（列向量）做标准化吗?&lt;/span&gt;&lt;span&gt;（&lt;span&gt;ftp://ftp.sas.com/pub/neural/FAQ2.html#A_std&lt;/span&gt;）&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如何用Scikit-Learn准备机器学习的输入数据&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://machinelearningmastery.com/prepare-data-machine-learning-python-scikit-learn/&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;4） 对数据做变换&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;与上一节的方法相关，但是需要更多的工作量。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你必须真正了解所用到的数据。数据可视化，然后挑出异常值。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;先猜测每一列数据的分布&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;这一列数据是不是倾斜的高斯分布，若是如此，尝试用Box-Cox方法纠正倾斜&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;这一列数据是不是指数分布，若是如此，则进行对数变换&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;这一列数据是不是存在某些特性，但是难以直观地发现，尝试一下对数据平方或者开方&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;是否可以将特征离散化，以便更好地强调一些特征&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;凭你的直觉，尝试几种方法&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;是否可以用投影的方法对数据预处理，比如PCA？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;是否可以将多个属性合并为单个值？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;是否可以发掘某个新的属性，用布尔值表示？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;是否可以在时间尺度或是其它维度上有些新发现？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;神经网络有特征学习的功能，它们能够完成这些事情。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;不过你若是可以将问题的结构更好地呈现出来，网络模型学习的速度就会更快。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在训练集上快速尝试各种变换方法，看看哪些方法有些，而哪些不起作用。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相关阅读：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如何定义你的机器学习问题&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://machinelearningmastery.com/how-to-define-your-machine-learning-problem/&lt;/span&gt;）&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;特征挖掘工程，如何构造特征以及如何提升&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://machinelearningmastery.com/discover-feature-engineering-how-to-engineer-features-and-how-to-get-good-at-it/&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如何用Scikit-Learn准备机器学习的输入数据&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://machinelearningmastery.com/prepare-data-machine-learning-python-scikit-learn/&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;5） 特征选择&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;神经网络受不相关数据的影响很小。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;它们会对此赋予一个趋近于0的权重，几乎忽略此特征对预测值的贡献。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你是否可以移除训练数据的某些属性呢？&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们有许多的特征选择方法和特征重要性方法来鉴别哪些特征可以保留，哪些特征需要移除。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;动手试一试，试一试所有的方法。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果你的时间充裕，我还是建议在相同的神经网络模型上选择尝试多个方法，看看它们的效果分别如何。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;也许用更少的特征也能得到同样的、甚至更好的效果。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;也许所有的特征选择方法都选择抛弃同一部分特征属性。那么就真应该好好审视这些无用的特征。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;也许选出的这部分特征给你带来了新的启发，构建出更多的新特征。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相关阅读：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;特征选择入门介绍&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://machinelearningmastery.com/an-introduction-to-feature-selection/&lt;/span&gt;）&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;基于Python的机器学习中的特征选择问题&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://machinelearningmastery.com/feature-selection-machine-learning-python/&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;6) 问题重构&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在回到你问题的定义上来。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你所收集到的这些观测数据是描述问题的唯一途径吗？&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;也许还有其它的途径。也许其它途径能更清晰地将问题的结构暴露出来。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我自己非常喜欢这种练习，因为它强迫我们拓宽思路。很难做好。尤其是当你已经投入大量的时间、精力、金钱在现有的方法上。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;即使你列举了3 ~ 5种不同的方式，至少你对最后所选用的方式有充足的信心。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;也许你可以将时间元素融入到一个窗口之中&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;也许你的分类问题可以转化为回归问题，反之亦然&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;也许可以把二值类型的输出转化为softmax的输出&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;也许你可以对子问题建模&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;深入思考问题是一个好习惯，最好在选择工具下手之前先完成上述步骤，以减少无效的精力投入。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;无论如何，如果你正束手无策，这个简单的连续能让你思如泉涌。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;另外，你也不必抛弃前期的大量工作，详情可以参见后面的章节。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相关阅读：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如何定义机器学习问题&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://machinelearningmastery.com/how-to-define-your-machine-learning-problem/&lt;/span&gt;）&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;2&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;从算法上提升性能&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;机器学习总是与算法相关。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所有的理论和数学知识都在描述从数据中学习决策过程的不同方法（如果我们这里仅讨论预测模型）。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你选用深度学习来求解，它是不是最合适的技术呢？&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在这一节中，我们会简单地聊一下算法的选择，后续内容会具体介绍如何提升深度学习的效果。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;下面是概览：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;算法的筛选&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;从文献中学习&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;重采样的方法&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们一条条展开。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1） 算法的筛选&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你事先不可能知道哪种算法对你的问题效果最好。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果你已经知道，你可能也就不需要机器学习了。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你有哪些证据可以证明现在已经采用的方法是最佳选择呢？&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们来想想这个难题。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当在所有可能出现的问题上进行效果评测时，没有哪一项单独的算法效果会好于其它算法。所有的算法都是平等的。这就是天下没有免费的午餐理论的要点。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;也许你选择的算法并不是最适合你的问题。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;现在，我们不指望解决所有的问题，但当前的热门算法也许并不适合你的数据集。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我的建议是先收集证据，先假设有其它的合适算法适用于你的问题。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;筛选一些常用的算法，挑出其中适用的几个。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;尝试一些线性算法，比如逻辑回归和线性判别分析&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;尝试一些树模型，比如CART、随机森林和梯度提升&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;尝试SVM和kNN等算法&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;尝试其它的神经网络模型，比如LVQ、MLP、CNN、LSTM等等&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;采纳效果较好的几种方法，然后精细调解参数和数据来进一步提升效果。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;将你所选用的深度学习方法与上述这些方法比较，看看是否能击败他们？&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;也许你可以放弃深度学习模型转而选择更简单模型，训练的速度也会更快，而且模型易于理解。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相关阅读：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;一种数据驱动的机器学习方法&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://machinelearningmastery.com/a-data-driven-approach-to-machine-learning/&lt;/span&gt;）&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;面对机器学习问题为何需要筛选算法&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://machinelearningmastery.com/why-you-should-be-spot-checking-algorithms-on-your-machine-learning-problems/&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;用scikit-learn筛选机器学习的分类算法&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://machinelearningmastery.com/spot-check-classification-machine-learning-algorithms-python-scikit-learn/&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2） 从文献中学习&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;从文献中“窃取”思路是一条捷径。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其它人是否已经做过和你类似的问题，他们使用的是什么方法。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;阅读论文、书籍、问答网站、教程以及Google给你提供的一切信息。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;记下所有的思路，然后沿着这些方向继续探索。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这并不是重复研究，这是帮助你发现新的思路。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;优先选择已经发表的论文&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;已经有许许多多的聪明人写下了很多有意思的事情。利用好这宝贵的资源吧。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相关阅读：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如何研究一种机器学习算法&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://machinelearningmastery.com/how-to-research-a-machine-learning-algorithm/&lt;/span&gt;）&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Google学术&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://scholar.google.com/&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;3） 重采样的方法&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你必须明白自己模型的效果如何。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你估计的模型效果是否可靠呢？&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;深度学习模型的训练速度很慢。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这就意味着我们不能用标准的黄金法则来评判模型的效果，比如k折交叉验证。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;也许你只是简单地把数据分为训练集和测试集。如果是这样，就需要保证切分后的数据分布保持不变。单变量统计和数据可视化是不错的方法。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;也许你们可以扩展硬件来提升效果。举个例子，如果你有一个集群或是AWS的账号，我们可以并行训练n个模型，然后选用它们的均值和方差来获取更稳定的效果。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;也许你可以选择一部分数据做交叉验证（对于early stopping非常有效）。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;也许你可以完全独立地保留一部分数据用于模型的验证。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;另一方面，也可以让数据集变得更小，采用更强的重采样方法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;也许你会看到在采样后的数据集上训练得到的模型效果与在全体数据集上训练得到的效果有很强的相关性。那么，你就可以用小数据集进行模型的选择，然后把最终选定的方法应用于全体数据集上。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;也许你可以任意限制数据集的规模，采样一部分数据，用它们完成所有的训练任务。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你必须对模型效果的预测有十足的把握。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相关阅读：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;用Keras评估深度学习模型的效果&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://machinelearningmastery.com/evaluate-performance-deep-learning-models-keras/&lt;/span&gt;）&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;用重采样的方法评估机器学习算法的效果&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://machinelearningmastery.com/evaluate-performance-machine-learning-algorithms-python-using-resampling/&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;3&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;从算法调优上提升性能&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你通过算法筛选往往总能找出一到两个效果不错的算法。但想要达到这些算法的最佳状态需要耗费数日、数周甚至数月。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;下面是一些想法，在调参时能有助于提升算法的性能。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;模型可诊断性&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;权重的初始化&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;学习率&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;激活函数&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;网络结构&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;batch和epoch&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;正则项&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;优化目标&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;提早结束训练&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你可能需要指定参数来多次（3-10次甚至更多）训练模型，以得到预计效果最好的一组参数。对每个参数都要不断的尝试。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有一篇关于超参数最优化的优质博客：&lt;/span&gt;&lt;span&gt;如何用Keras网格搜索深度学习模型的超参数（&lt;span&gt;http://machinelearningmastery.com/grid-search-hyperparameters-deep-learning-models-python-keras/&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1） 可诊断性&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;只有知道为何模型的性能不再有提升了，才能达到最好的效果。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;是因为模型过拟合呢，还是欠拟合呢？&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;千万牢记这个问题。千万。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;模型总是处于这两种状态之间，只是程度不同罢了。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;一种快速查看模型性能的方法就是每一步计算模型在训练集和验证集上的表现，将结果绘制成图表。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAugPZUEPKnnFxzNWpdZcKnfsUnwHtibGHL1SJoTlkveB1ibAUfBZUMmJsDXkhFc6baib652hpgJZvfhsQ/0?wx_fmt=png"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在训练集和验证集上测试模型的准确率&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果训练集的效果好于验证集，说明可能存在过拟合的现象，试一试增加正则项&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果训练集和验证集的准确率都很低，说明可能存在欠拟合，你可以继续提升模型的能力，延长训练步骤。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果训练集和验证集的曲线有一个焦点，可能需要用到early stopping的技巧了&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;经常绘制类似的图表，深入研究并比较不同的方法，以提高模型的性能。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这些图表也许是你最有价值的诊断工具。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;另一种有效的诊断方法是研究模型正确预测或是错误预测的样本。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在某些场景下，这种方法能给你提供一些思路。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;也许你需要更多的难预测的样本数据&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;也许你可以从训练集中删去那些容易被学习的样本&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;也许你可以有针对性地对不同类型的输入数据训练不同的模型&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相关阅读：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;用Keras展现深度学习模型的训练过程&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://machinelearningmastery.com/display-deep-learning-model-training-history-in-keras/&lt;/span&gt;）&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;机器学习算法的过拟合和欠拟合&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://machinelearningmastery.com/overfitting-and-underfitting-with-machine-learning-algorithms/&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2） 权重的初始化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有一条经验规则：用小的随机数初始化权重。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;事实上，这可能已经足够了。但是这是你网络模型的最佳选择吗？&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;不同的激活函数也可以有不同的应对策略，但我不记得在实践中存在什么显著的差异。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;保持你的模型结构不变，试一试不同的初始化策略。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;记住，权重值就是你模型需要训练的参数。几组不同的权重值都能取得不错的效果，但你想得到更好的效果。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;尝试所有的初始化方法，找出最好的一组初始化值&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;试一试用非监督式方法预学习，比如自动编码机&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;尝试用一组现有的模型权重参数，然后重新训练输入和输出层（迁移学习）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;记住，修改权重初始化值的方法与修改激活函数或者目标函数的效果相当。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相关阅读：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;深度网络模型的初始化&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://deepdish.io/2015/02/24/network-initialization/&lt;/span&gt;）&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;3） 学习率&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;调节学习率也能带来效果提升。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这里也有一些探索的思路：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;尝试非常大、非常小的学习率&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;根据参考文献，在常规值附近用网格化搜索&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;尝试使用逐步减小的学习率&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;尝试每隔固定训练步骤衰减的学习率&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;尝试增加一个向量值，然后用网格搜索&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;大的网络模型需要更多的训练步骤，反之亦然。如果你添加了更多的神经节点和网络层，请加大学习率。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;学习率与训练步骤、batch大小和优化方法都有耦合关系。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相关阅读：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;使用Keras对深度学习模型进行学习率调节&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://machinelearningmastery.com/using-learning-rate-schedules-deep-learning-models-python-keras/&lt;/span&gt;）&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;反向传播算法该选用什么学习率？&lt;/span&gt;&lt;span&gt;（&lt;span&gt;ftp://ftp.sas.com/pub/neural/FAQ2.html#A_learn_rate&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;4） 激活函数&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;也许你应该选用ReLU激活函数。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;仅仅因为它们的效果更好。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在ReLU之前流行sigmoid和tanh，然后是输出层的softmax、线性和sigmoid函数。除此之外，我不建议尝试其它的选择。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这三种函数都试一试，记得把输入数据归一化到它们的值域范围。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;显然，你需要根据输出内容的形式选择转移函数。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;比方说，将二值分类的sigmoid函数改为回归问题的线性函数，然后对输出值进行再处理。同时，可能需要调整合适的损失函数。在数据转换章节去寻找更多的思路吧。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相关阅读：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;为何使用激活函数？&lt;/span&gt;&lt;span&gt;（&lt;span&gt;ftp://ftp.sas.com/pub/neural/FAQ2.html#A_act&lt;/span&gt;）&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;5） 网络拓扑结构&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;调整网络的拓扑结构也会有一些帮助。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你需要设计多少个节点，需要几层网络呢？&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;别打听了，鬼知道是多少。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你必须自己找到一组合理的参数配置。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;试一试加一层有许多节点的隐藏层（拓宽）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;试一试一个深层的神经网络，每层节点较少（纵深）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;尝试将上面两种组合&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;尝试模仿近期发表的问题类似的论文&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;尝试拓扑模式和书本上的经典技巧（参考下方的链接）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这是一个难题。越大的网络模型有越强的表达能力，也许你就需要这样一个。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;更多晨的结构提供了抽象特征的更多结构化组合的可能，也许你也需要这样一个网络。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;后期的网络模型需要更多的训练过程，需要不断地调节训练步长和学习率。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相关阅读：&lt;/span&gt;&lt;span&gt;下面的链接可能给你提供一些思路：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;我的网络模型该设计几层呢？&lt;/span&gt;&lt;span&gt;（&lt;span&gt;ftp://ftp.sas.com/pub/neural/FAQ3.html#A_hl&lt;/span&gt;）&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;我的网络模型该设计几个节点呢？&lt;/span&gt;&lt;span&gt;（&lt;span&gt;ftp://ftp.sas.com/pub/neural/FAQ3.html#A_hu&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;6） batch和epoch&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;batch的大小决定了梯度值，以及权重更新的频率。一个epoch指的是训练集的所有样本都参与了一轮训练，以batch为序。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你尝试过不同的batch大小和epoch的次数吗？&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在前文中，我们已经讨论了学习率、网络大小和epoch次数的关系。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;深度学习模型常用小的batch和大的epoch以及反复多次的训练。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这或许对你的问题会有帮助。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;尝试将batch大小设置为全体训练集的大小（batch learning）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;尝试将batch大小设置为1（online learning）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;用网格搜索尝试不同大小的mini-batch（8，16，32，…）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;尝试再训练几轮epoch，然后继续训练很多轮epoch&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;尝试设置一个近似于无限大的epoch次数，然后快照一些中间结果，寻找效果最好的模型。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有些模型结构对batch的大小很敏感。我觉得多层感知器对batch的大小很不敏感，而LSTM和CNN则非常敏感，但这都是仁者见仁。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相关阅读：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;什么是批量学习、增量学习和在线学习？&lt;/span&gt;&lt;span&gt;（&lt;span&gt;ftp://ftp.sas.com/pub/neural/FAQ2.html#A_styles&lt;/span&gt;）&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;直觉上，mini-batch的大小如何影响（随机）梯度下降的效果？&lt;/span&gt;&lt;span&gt;（&lt;span&gt;https://www.quora.com/Intuitively-how-does-mini-batch-size-affect-the-performance-of-stochastic-gradient-descent&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;7） 正则项&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;正则化是克服训练数据过拟合的好方法。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最近热门的正则化方法是dropout，你试过吗？&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Dropout方法在训练过程中随机地略过一些神经节点，强制让同一层的其它节点接管。简单却有效的方法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;权重衰减来惩罚大的权重值&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;激活限制来惩罚大的激活函数值&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;尝试用各种惩罚措施和惩罚项进行实验，比如L1、L2和两者之和。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相关阅读：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;使用Keras对深度学习模型做dropout正则化&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://machinelearningmastery.com/dropout-regularization-deep-learning-models-keras/&lt;/span&gt;）&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;什么是权值衰减？&lt;/span&gt;&lt;span&gt;（&lt;span&gt;ftp://ftp.sas.com/pub/neural/FAQ3.html#A_decay&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;8） 优化方法和损失函数&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以往主要的求解方法是随机梯度下降，然而现在有许许多多的优化器。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你尝试过不同的优化策略吗？&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;随机梯度下降是默认的方法。先用它得到一个结果，然后调节不同的学习率、动量值进行优化。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;许多更高级的优化方法都用到更多的参数，结构更复杂，收敛速度更快。这取决于你的问题，各有利弊吧。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了压榨现有方法的更多潜力，你真的需要深入钻研每个参数，然后用网格搜索法测试不同的取值。过程很艰辛，很花时间，但值得去尝试。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我发现更新/更流行的方法收敛速度更快，能够快速了解某个网络拓扑的潜力，例如：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;ADAM&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;RMSprop&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你也可以探索其它的优化算法，例如更传统的算法（Levenberg-Marquardt）和比较新的算法（基因算法）。其它方法能给SGD创造好的开端，便于后续调优。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;待优化的损失函数则与你需要解决的问题更相关。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;不过，也有一些常用的伎俩（比如回归问题常用MSE和MAE），换个损失函数有时也会带来意外收获。同样，这可能也与你输入数据的尺度以及所使用的激活函数相关。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相关阅读：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;梯度下降优化算法概览&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://sebastianruder.com/optimizing-gradient-descent/&lt;/span&gt;）&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;什么是共轭梯度和Levenberg-Marquardt？&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://geek.csdn.net/news/detail/104190&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;深度学习的优化方法，2011&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://ai.stanford.edu/~ang/papers/icml11-OptimizationForDeepLearning.pdf&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;9） Early Stopping&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你可以在模型性能开始下降的时候停止训练。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这帮我们节省了大量时间，也许因此就能使用更精细的重采样方法来评价模型了。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;early stopping也是防止数据过拟合的一种正则化方法，需要你在每轮训练结束后观察模型在训练集和验证集上的效果。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;一旦模型在验证集上的效果下降了，则可以停止训练。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你也可以设置检查点，保存当时的状态，然后模型可以继续学习。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相关阅读：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如何在Keras给深度学习模型设置check-point&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://machinelearningmastery.com/check-point-deep-learning-models-keras/&lt;/span&gt;）&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;什么是early stopping？&lt;/span&gt;&lt;span&gt;（&lt;span&gt;ftp://ftp.sas.com/pub/neural/FAQ3.html#A_stop&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;4&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;用融合方法提升效果&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你可以将多个模型的预测结果融合。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;继模型调优之后，这是另一个大的提升领域。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;事实上，往往将几个效果还可以的模型的预测结果融合，取得的效果要比多个精细调优的模型分别预测的效果好。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们来看一下模型融合的三个主要方向：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;模型融合&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;视角融合&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;stacking&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1） 模型融合&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;不必挑选出一个模型，而是将它们集成。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果你训练了多个深度学习模型，每一个的效果都不错，则将它们的预测结果取均值。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;模型的差异越大，效果越好。举个例子，你可以使用差异很大的网络拓扑和技巧。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果每个模型都独立且有效，那么集成后的结果效果更稳定。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相反的，你也可以反过来做实验。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;每次训练网络模型时，都以不同的方式初始化，最后的权重也收敛到不同的值。多次重复这个过程生成多个网络模型，然后集成这些模型的预测结果。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;它们的预测结果会高度相关，但对于比较难预测的样本也许会有一点提升。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相关阅读：&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;用scikit-learn集成机器学习算法&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://machinelearningmastery.com/ensemble-machine-learning-algorithms-python-scikit-learn/&lt;/span&gt;）&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如何提升机器学习的效果&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://machinelearningmastery.com/how-to-improve-machine-learning-results/&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2） 视角融合&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如上一节提到的，以不同的角度来训练模型，或是重新刻画问题。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们的目的还是得到有用的模型，但是方式不同（如不相关的预测结果）。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你可以根据上文中提到的方法，对训练数据采取完全不同的缩放和变换技巧。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所选用的变化方式和问题的刻画角度差异越大，效果提升的可能性也越大。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;简单地对预测结果取均值是一个不错的方式。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;3）stacking&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你还可以学习如何将各个模型的预测结果相融合。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这被称作是stacked泛化，或者简称为stacking。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通常，可以用简单的线性回归的方式学习各个模型预测值的权重。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;把各个模型预测结果取均值的方法作为baseline，用带权重的融合作为实验组。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Stacked Generalization (Stacking)&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://machine-learning.martinsewell.com/ensembles/stacking/&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;各抒己见吧&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;补充资料&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;还有一些非常好的资料，但没有像本文这么全面。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我在下面列举了一些资料和相关的文章，你感兴趣的话可以深入阅读。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;神经网络常见问答&lt;/span&gt;&lt;span&gt;（&lt;span&gt;ftp://ftp.sas.com/pub/neural/FAQ.html&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如何用网格搜索法求解深度学习模型的超参数&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://machinelearningmastery.com/grid-search-hyperparameters-deep-learning-models-python-keras/&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;深度神经网络必知的技巧&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://lamda.nju.edu.cn/weixs/project/CNNTricks/CNNTricks.html&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如何提升深度神经网络的验证准确率？&lt;/span&gt;&lt;span&gt;（&lt;span&gt;http://stackoverflow.com/questions/37020754/how-to-increase-validation-accuracy-with-deep-neural-net&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果你知道其它的好资源，欢迎留言。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;p&gt;原文： How To Improve Deep Learning Performance&amp;nbsp;&lt;/p&gt;&lt;p&gt;作者： Jason Brownlee&amp;nbsp;&lt;/p&gt;&lt;p&gt;翻译： KK4SBB 责编：何永灿&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Sat, 08 Oct 2016 17:10:51 +0800</pubDate>
    </item>
    <item>
      <title>手机游戏直播 ：悟空TV客户端设计与技术难点</title>
      <link>http://www.iwgc.cn/link/2979361</link>
      <description>&lt;p&gt;在手机游戏直播中，悟空TV采用以下方案达到多源录制、多端播放的效果。主要分为三大过程：录制源的采集，以RTMP传输协议动态上传到CDN，各播放端实时拉流。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/eL7YiacLdzwot4pWrIqZLYG73GXUTKj5iaLhp8ouuVIgce7yAoVPp5sAaJiaP2XEwzLuy9SQOpmSMxOUPCfo795PQ/0?wx_fmt=png"/&gt;&lt;br/&gt;图1 手机游戏直播方案&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;接下来将一一讨论悟空 TV 移动推流端和播放端遇到的难点及对应的优化方案。&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;移动端抓屏方案&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Android&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;Android 5.0 之后系统版本，开放了屏幕采集接口，这里不再赘述。5.0系统之前，则需要使用其他方式抓屏，悟空TV采取了先获取root权限，再使用Runtime执行命令的方式来实现屏幕抓取，流程如图2所示。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/eL7YiacLdzwot4pWrIqZLYG73GXUTKj5iaVfrAgokf17RJTPicamFHr1zX3fVfXia8iaorraWFVTBv1dncG4tpPhxQQ/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;br/&gt;图2 Android抓屏流程&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;iOS&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;如何在苹果设备上抓屏一直是个难题，悟空TV利用苹果AirPlay镜像（AirPlay Mirroring）功能，将应用本身变成支持Airplay投屏的虚拟服务器，从而将手机屏幕通过AirPlay投到应用内，实现抓屏的功能，流程如图3所示。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/eL7YiacLdzwot4pWrIqZLYG73GXUTKj5ia8AXs8eAtXyrRlKT0zYD4vazEexibIDcwCgIzOIvXBPL2B4WY2u17ic7A/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;br/&gt;图3 iOS抓屏流程&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;直播卡顿优化&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;直播讲究播放的流畅性，如果频繁卡顿会严重影响用户的观看体验。在直播中，卡顿的大多是由网络环境不佳引起的。而悟空TV移动端的推流/播放处于移动网络环境，相较于PC平台更加复杂，主要难点包括以下方面：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;移动网络上传、下载带宽不足&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;移动3G网络在信号不佳时，最高只能达到100Kb/s的上传、下载速度，在直播时，游戏本身也会占据非常高的带宽；然而，游戏直播对画面质量和连贯性的要求，要比其他类型的直播更高。综合以上因素，移动网络带宽不足的问题尤为突出。主要解决思路是压缩传输的数据量。通过优化推流端的编码参数，包括分辨率、码率、帧率、i帧间隔等，可以非常有效地缩小传输消耗的带宽。另外，合理选择编码协议（常见有H.261/H.263/H.264/H.265），也能极大提高数据压缩能力。悟空TV设定了超清、高清、普清、标清四个档位的直播质量，以适应不同情况的移动网络。&lt;br/&gt;&lt;br/&gt;除此之外，悟空TV还采用了两种方案来实时监控直播效果：一种为推流端网络实时监测系统，在推流的过程中，实时监测推流效果，当监测到推流效果不佳时，直接在推流端给出降低编码档位的提示，引导用户提高当前推流效果，减少视频卡顿；另外一种为后台人工干预手段，当工作人员在巡查中发现直播严重卡顿时，会通过后台发送调整推流档位指令，推流端自动降低该直播的编码档位。&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;带宽足够的情况下，经常会遇到网络波动极大的情况&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;移动端直播过程中，WIFI信号的强弱变化非常容易使网速时快时慢。3G/4G环境更加容易发生此问题。那么如何在网络经常波动的情况下，保持直播流畅呢？&lt;br/&gt;&lt;br/&gt;悟空TV主要采取了两种手段降低网络波动的影响。第一，在可接受延迟的范围内，合理设定推流端和播放端的缓冲区大小；第二，推流端会在网络波动大的时候，数据上传时间过长，导致缓冲区剩余空间不足。此时如果一味增加缓冲区大小，会导致播放端与推流端延迟过大，这就需要推流端丢弃部分数据帧，加快直播进度。但是，在某些丢帧情况下，会导致播放端花屏，需要在设定丢帧策略时注意。&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;CDN链路优化&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;移动网络经常会遇见用户的DNS与其实际所处区域偏差较大的情况，严重影响了CDN调度效率。&lt;br/&gt;&lt;br/&gt;悟空TV主要采用三个手段解决此问题，一是优化调度方式，将DNS调度改为IP调度，结合各CDN厂商自有调度系统（如网速的NGB调度系统），规避虚假IP地址，实时判断节点机器的性能、负载情况、网络情况等，更合理、更精确地分配了推流端和播放端的节点资源，提高流畅性；第二个方法是后台切换CDN，工作人员在巡查中，如果发现当前推流质量不佳是链路质量过低导致的，会通过后台发送切换CDN节点指令，推流端自动切换CDN节点。&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;播放端首屏时长的优化&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;首屏时间，指的是从进入直播间开始到第一次看到直播画面的时间。首屏时间过长极易导致用户失去对直播的耐心，降低用户的留存。但游戏直播对画面质量和连贯性的要求高，对应推流端编码后的数据量和其他类型直播相比大的多，如何降低首屏时间是一个不小的难题。&lt;br/&gt;&lt;br/&gt;在播放端的首屏过程中，主要有以下三个操作需要进行：加载直播间UI（包括播放器本身）、下载直播数据流（未解码）和解码数据播放。其中数据解码播放又可细分为以下几个步骤：&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul style="list-style-type: disc;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;检测传输协议类型（RTMP、RTSP、HTTP等）并与服务器建立连接接收数据；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;解析数据类型获取视频流信息；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;视频流解复用得到音视频编码数据（H.264/H.265、AAC等）；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;音视频数据解码，音频数据同步至外设，视频数据渲染到屏幕，至此，视频开始播放，首屏时间结束。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;由此，我们总结出以下提高首屏时间的方案：首先，加载UI可以以单例的方式进行，能够一定程度地提升首屏展示速度；其次，可以预设解码类型，减少数据类型检测时间；再次，设定合理的下载缓冲区大小，尽可能减少下载的数据量，当检测到I帧数据，立即开始解码单帧画面进行播放，提高首屏展示时间。&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;音视频同步&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;观看直播时，最令人头痛的就是音视频不同步，解决不同步问题的方法有很多种，从技术上来说，其中时间戳是最成熟最完美也是最复杂的解决办法，可以解决任何多媒体领域的音视频同步问题。主要原理是选择一个参考时间，在生成数据流时依据参考时间给每个数据块都打上时间戳；播放时，读取数据块上的时间戳，同时参考本地时间来安排播放。但如果源数据帧上打的时间戳本身就有问题，那么播放时再怎么调整也于事无补，所以解决音视频不同步问题，必须先从源上来解决。一般来说，解决同步问题我们有三种选择：同步音频到视频，同步视频到音频，或者都同步到外部时钟（例如系统时钟）。悟空TV使用同步视频到音频方案来保障音视频的同步，实现流程如图4所示。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/eL7YiacLdzwot4pWrIqZLYG73GXUTKj5iaibLNXInZ4J2A7Sfk1L08EouRthycl3zsCQia8BjksJ82XibuaT6FLjZgA/0?wx_fmt=png"/&gt;&lt;br/&gt;图4 音视频同步实现流程&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;推流端启用独立的音频和视频线程，进行音视频采集以及编码，音频采集编码后只管往外发送数据即可。而视频线程采集编码完之后，需要同步时间戳到音频的时间戳，并做时间戳的有效性判定，只有有效的视频数据才会发送到服务器。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;软硬编解码的选择&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;软编解码：使用CPU进行编解码，大多使用FFmpeg来编码和解压音视频数据；&lt;br/&gt;&lt;br/&gt;硬编解码：主要使用非CPU进行编解码，如GPU等。在使用中，大多直接调用系统API进行音视频编解码处理。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/eL7YiacLdzwot4pWrIqZLYG73GXUTKj5iaK00E3TdmrMquGYyPsIp4SYArlav6cMzdUKB40EmQK8mSZbY4Hx95uw/0?wx_fmt=png"/&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;综合以上情况，经过悟空TV和大量用户的测试及总结，在推流方面，iOS系统和硬件设备统一性高，使用全硬编方案效果更好；Android因机型繁杂，支持程度不一，推荐4.3以上使用硬编。在播放解码方面，iOS硬解和软解支持性都较高，软解功耗更高，但是在部分细节方面表现较优，可控性强，具体视项目情况选择；Android推荐4.1版本以上使用硬解，以下版本使用软解。&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;繁杂的机型适配&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;做Android应用的开发人员都知道，市面上冗杂的机型再加上各式各样的屏幕尺寸，已经让适配非常繁琐，而做直播软件，适配问题远远不止这些，下面列举几个悟空TV遇到的适配问题：&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul style="list-style-type: disc;" class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;部分Android 5.0以上机型由于ROM被修改无法实现抓屏。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;部分机型录制的视频出现花屏问题。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;部分机型录制摄像头出现旋转、拉升等问题。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;部分厂商机型因权限问题无法打开浮窗。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;不断出产新的机型，不断出现新的适配问题。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;针对各种繁杂的适配问题，如果在客户端代码中写死了配置或判断逻辑将非常不利于版本的维护和迭代。悟空TV使用了“云控”的手段来处理适配问题，在与服务器进行交互时，把客户端机型、系统版本号、分辨率、应用版本号等信息上传给服务器，然后在云端（即服务器端）来做整体配置，从而控制此设备是否允许直播、是否需要弹出浮窗设置以及直播应该使用的码率、FPS等。&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;做直播，尤其是要在移动端提供稳定、流畅的直播服务，是在日常工作中不断改进不断调优、不断调整算法和动态运营的结果，并不是实现几个技术点或攻克几个Bug就能坐享一套稳定流畅的直播服务的。直播之路还很长，仍需继续努力。悟空TV将秉承为大家提供一个稳定流畅好玩的手游直播平台而继续努力。&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote class="yead_editor yead-selected" data-author="易点微信编辑器" data-url="http://wxedit.yead.net" style="font-size: 14px; border-width: 0px; border-style: none; border-color: -moz-use-text-color; -moz-border-top-colors: none; -moz-border-right-colors: none; -moz-border-bottom-colors: none; -moz-border-left-colors: none; padding: 0px; margin: 5px auto; white-space: normal;"&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;作者简介&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;本文为&lt;span&gt;《程序员》&lt;/span&gt;原创文章，未经允许不得转载，更多精彩文章请订阅&lt;span&gt;2016年《程序员》&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;刘燕青，Android高级开发工程师，多年Android研发经验，主要负责悟空TV App的架构以及研发工作，包括Android端屏幕录制、摄像头录制、音频采集、编码推流等工作。目前专注于音视频相关的研究和应用。&lt;br/&gt;李越，iOS开发工程师，主要负责悟空TV iOS客户端和录制端的研发工作，包括iOS端屏幕录制、摄像头录制、音频采集、编码推流、拉流播放等工作。目前专注于音视频相关的研究和应用。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;第一时间掌握最新移动开发相关信息和技术，请关注mobilehub公众微信号（ID: mobilehub)。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/eL7YiacLdzwpuLXNIA5Hg8LCXic88dcmQ3NbxibMS2hhB4BWhTkGXqEB3mWOJl1YnlHv1QcVrKibZo0N0KvicF2Mmrg/0?wx_fmt=jpeg"/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Sat, 08 Oct 2016 17:10:51 +0800</pubDate>
    </item>
  </channel>
</rss>
