<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>CSDN大数据</title>
    <link>http://www.iwgc.cn/list/1933</link>
    <description>CSDN分享Hadoop、Spark、NoSQL/NewSQL、HBase、Impala、内存计算、流计算、机器学习和智能算法等相关大数据观点,提供云计算和大数据技术、平台、实践和产业信息等服务.</description>
    <item>
      <title>PostgreSQL 使用advisory lock或skip locked消除行锁冲突, 提高几十倍并发更新效率</title>
      <link>http://www.iwgc.cn/link/3120828</link>
      <description>&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjU6I8l23mvF81naF7mTY7nTmtlibzgPOYe1Etqdp9MTLWlDV0vEZlQ3DhBd2L6m9lXgpy1icY9o03yg/0?wx_fmt=jpeg"/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;背景&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通常在数据库中最小粒度的锁是行锁，当一个事务正在更新某条记录时，另一个事务如果要更新同一条记录（或者申请这一条记录的锁），则必须等待锁释放。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通常持锁的时间需要保持到事务结束，也就是说，如果一个长事务持有了某条记录的锁，其他会话要持有这条记录的锁，可能要等很久。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果某张表的全表或者大部分记录要被更新的话，有几种做法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1. 在一个事务中更新需要更新的记录，很显然时间可能很长，因为没有了并发。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2. 在多个事务中更新不同的记录，使用高并发来缩短更新的时间，但是就需要解决并发更新时存在的行锁冲突的问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本文将要给大家介绍两种解决并发更新行锁冲突问题的方法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;场景描述&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;测试表，单条记录越大，更新单条记录的时间越久（例如更新亿级别的超长BIT类型）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;每个人群都有一个唯一的ID，即parallel_update_test.id。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;&lt;span&gt;create unlogged table parallel_update_test(id int primary key, info int[]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;测试数据&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;&lt;span&gt;insert into parallel_update_test select generate_series(1,10000), (select array_agg(id) from generate_series(1,100000) t(id));

postgres=# \dt+ parallel_update_test 
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;List of relations
 Schema | &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Name &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; | Type &amp;nbsp;| &amp;nbsp;Owner &amp;nbsp; | &amp;nbsp;Size &amp;nbsp; | Description 
--------+----------------------+-------+----------+---------+-------------
 public | parallel_update_test | table | postgres | 3961 MB | 
(1 row)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;更新需求，每条记录都有更新&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;例如我存储的数组是USERID，每条记录代表某个属性的人群数据，这个属性的人群数据不断的在变化，因此会不断的需要更新。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;&lt;span&gt;update parallel_update_test set info=array_append(info,1);

单个事务更新耗时80秒 &amp;nbsp; 
postgres=# begin;
postgres=# update parallel_update_test set info=array_append(info,1);
UPDATE 10000
Time: 80212.641 ms
postgres=# rollback;
ROLLBACK
Time: 0.131 ms
postgres=# vacuum parallel_update_test ;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;使用并发的手段提高更新效率。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;方法1 advisory lock&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;每个人群都有一个唯一的ID，即parallel_update_test.id。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以只要保证并行的会话更新的是不同的ID对应的数据即可，同时需要避免单次重复更新。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;如何避免更新同一个ID？&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用advisory lock可以避免并发更新同一条记录。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;如何避免重复更新同一条记录。&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用扫描式的获取advisory lock，保证不会重复获取即可。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;代码如下:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;&lt;span&gt;create or replace function update() returns void as $$
declare
 &amp;nbsp;v_id int;
begin
 &amp;nbsp;for v_id in select id from parallel_update_test &amp;nbsp;-- 扫描式
 &amp;nbsp;loop &amp;nbsp;
 &amp;nbsp; &amp;nbsp;if pg_try_advisory_xact_lock(v_id) then -- 获取到ID的LOCK才会实施更新，否则继续扫描
 &amp;nbsp; &amp;nbsp; &amp;nbsp;update parallel_update_test set info=array_append(info,1) where id=v_id;
 &amp;nbsp; &amp;nbsp;end if;
 &amp;nbsp;end loop;
end;
$$ language plpgsql strict;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;设计上尽量保证ID全局唯一，否则获取advisory lock的冲突可能性会增多。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;测试，使用100个并行度&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;&lt;span&gt;vi test.sql
select update();

pgbench -M prepared -n -r -f ./test.sql -c 100 -j 100 -t 1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;并行更新耗时4秒&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;&lt;span&gt;pgbench -M prepared -n -r -f ./test.sql -c 100 -j 100 -t 1
transaction type: ./test.sql
scaling factor: 1
query mode: prepared
number of clients: 100
number of threads: 100
number of transactions per client: 1
number of transactions actually processed: 100/100
latency average = 4407.490 ms
tps = 22.688650 (including connections establishing)
tps = 22.708546 (excluding connections establishing)
script statistics:
 - statement latencies in milliseconds:
 &amp;nbsp; &amp;nbsp; &amp;nbsp;3078.170 &amp;nbsp;select update();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;方法2 skip locked&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这个方法需要9.5以及以上版本支持&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;代码如下:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;&lt;span&gt;create or replace function update() returns void as $$
declare
 &amp;nbsp;v_id int;
begin
 &amp;nbsp;select id into v_id from parallel_update_test order by id limit 1 for update skip locked;
 &amp;nbsp;update parallel_update_test set info=array_append(info,1) where id=v_id;
 &amp;nbsp;loop
 &amp;nbsp; &amp;nbsp;select id into v_id from parallel_update_test where id&amp;gt;v_id order by id limit 1 for update skip locked;
 &amp;nbsp; &amp;nbsp;if found then
 &amp;nbsp; &amp;nbsp; &amp;nbsp;update parallel_update_test set info=array_append(info,1) where id=v_id;
 &amp;nbsp; &amp;nbsp;else
 &amp;nbsp; &amp;nbsp; &amp;nbsp;return;
 &amp;nbsp; &amp;nbsp;end if;
 &amp;nbsp;end loop;
end;
$$ language plpgsql strict;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用100个并行度&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;并行更新耗时4秒&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;&lt;span&gt;pgbench -M prepared -n -r -f ./test.sql -c 100 -j 100 -t 1
transaction type: ./test.sql
scaling factor: 1
query mode: prepared
number of clients: 100
number of threads: 100
number of transactions per client: 1
number of transactions actually processed: 100/100
latency average = 4204.439 ms
tps = 23.784386 (including connections establishing)
tps = 23.813193 (excluding connections establishing)
script statistics:
 - statement latencies in milliseconds:
 &amp;nbsp; &amp;nbsp; &amp;nbsp;3074.488 &amp;nbsp;select update();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;小结&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在实时推荐系统中，通常可以使用数组或者比特位来标记人群，而每个人群都在不断的发生变化，也就是说，整张表都是热表。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了提高更新的效率，本文给大家提供了两种并行消除行锁冲突更新的方法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用PostgreSQL提供的skip locked 或者advisory lock特性，消除行锁冲突，提高并行度，从而提高更新效率，发挥机器的最大能力。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;2016 PG大象即将召开，可点击阅读原文查看详情并报名。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjU6I8l23mvF81naF7mTY7nTQBNsMLibzjPdRUvVOiaQzJZn47LzMTW0p3pVFgbb2TtmpSamQ3uba1uQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;</description>
      <pubDate>Tue, 18 Oct 2016 17:32:35 +0800</pubDate>
    </item>
    <item>
      <title>Uber是如何通过Mesos和Cassandra实现跨多个数据中心每秒100万的写入速度的？</title>
      <link>http://www.iwgc.cn/link/3120829</link>
      <description>&lt;p&gt;&lt;span&gt;每隔三十秒就会有位置数据返回，包括来自于司机和乘客应用的各类数据，需要实时使用的实时数据非常之多，那么Uber是如何存储这些位置数据的呢？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Uber的解决方案非常全面：他们在Mesos顶层构建了自己的系统，运行Cassandra。Uber的软件工程师Abhishek Verma有一个演讲，题为《Uber跨多个数据中心运行在Mesos上的Cassandra》（&lt;span&gt;阅读原文查看PPT&lt;/span&gt;），便对这个解决方案做了全面的解释。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们是否也该这么做呢？在聆听Abhishek的演讲时，这样的想法涌入脑海。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如今，开发者有许多艰难的选择要做，我们是否应当将所有的内容放在云端？应该用哪一个云？不会太贵吧？我们是否担心锁定的问题？或者应该兼容并包，精心构思一个混合型框架？还是应当自行解决存储问题，而不使用云端——以免达不到50%的毛利。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Uber决定自行构建，更准确的说法是：他们决定通过融合两个很有用的开源组件，拼合出自己的系统。这样一来，只需要找出办法让Cassandra和Mesos能够协调运作，这也是Uber所做的事情。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对于Uber来说，这个决定并没有太过艰难，他们的财务不是问题，也能够接触到顶尖的人才与资源库，来创建、维护、更新这种类型的复杂系统。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;由于Uber的目标是在99.99%的情况下有能力解决任何人在任何地点的交通出行问题，因此，在目标无限广阔的时候，有能力控制开支便很重要了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;不过在聆听演讲时，我们还是会发现制作这类系统所付出的努力有多么惊人。普通的公司能做到这些么？实际上很难。如果你也对云秉持拒绝态度，希望大家都凭空从头建立自己的代码，那么请记得这一点。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;通常来说，用金钱换时间是笔不错的交易，用金钱换技术是绝对必要的。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果Uber的目标是可靠性——请求失败率只有万分之一的话，他们需要许多数据中心。由于使用了Cassandra来处理跨数据中心的大量载入与处理工作，在选择数据库时我们要考虑这一点。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果想为所有人在任何地方都能提供可靠的交通出行，我们要高效地利用自己的资源，这就是Uber选择Mesos这样的工具作为数据中心OS的原因。通过统计，在同一台机器上使用多路复用服务，可以减少30%的机器以节省开支。而具体选择Mesos的原因在于：在作出选择时，Mesos是唯一能够在上万台机器所构成的集群上运行的产品，而这一点正符合Uber的需求。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其中一些比较有趣的发现包括：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: square;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;可以在容器中运行有状态服务。Uber发现，这样做几乎没有差别。直接运行Cassandra，与在容器中由Mesos管理着运行Cassandra，其开销相差只有5-10%。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;性能十分优秀：读取延迟（13毫秒）和写入延迟（25毫秒）都很低。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在最大的集群上，系统能支持每秒超过100万的写入和约10万的读取吞吐量。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;敏捷比性能更加重要。使用这类架构，Uber获得了敏捷性。想要跨集群创建和运行工作负载都非常容易。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;下面是本文作者对该演讲的注释：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;➤&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;起初&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;针对不同的服务，有不同的静态分区机器。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;可能有50台机器专门负责API，50台负责存储等等，彼此工作并不重叠。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;➤&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;现在&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;所有工作都要运行在Mesos上，包括那些有状态的服务，比如Cassandra和Kafka。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Mesos是一个数据中心OS（Data Center OS），允许使用者将数据中心视为单独的资源池来编程。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;由于Mesos可运行在数万台机器上，这正是Uber的需求之一，因此他们选择了Mesos，不过如今Kubernetes可能也能达到同样的效果。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Uber在MySQL顶层构建了自己的分片数据库Schemaless。Cassandra和Schemaless就是Uber的两个数据存储选项。已有的Riak实现会被转移到Cassandra之上。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;单独的机器可以运行不同类型的服务。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;根据统计，在同一台机器上使用多路复用服务能够缩减30%的机器，这是谷歌在Borg上测试得出的发现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;举个例子，如果一个服务占用大量的CPU，而另一个服务占用大量的存储或内存，两个服务就可以高效地运行在同一个服务器上，因此机器的利用率得到提升。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;目前Uber拥有大约20个Cassandra集群，并有计划扩展到100个。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;敏捷比性能更加重要。我们需要有能力管理这些群组，并以平滑的方式对其执行不同的操作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;为什么在容器中运行Cassandra，而不是在机器上直接运行？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;我们要存储数百GB的数据，还想跨多台机器、甚至跨数据中心执行复制。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;同时希望在不同的集群之间实现资源和性能隔离。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在一个单独的共享集群上获得所有这些效果是很难的，举个例子，如果创建一个有一千个节点的Cassandra集群，它是无法扩展的，或者不同集群之间也会有性能干扰。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;➤&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;在生产环境中&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在两个数据中心（美国西部和东海岸）中有大约20个集群负责执行复制。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;最初在中国还有4个集群，不过与滴滴合并后，那些集群就关闭了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;两个数据中心有差不多300台机器。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;最大的两个集群拥有每秒过100万的写入&amp;amp;约10万读取能力。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;这些集群中有一台存储着位置信息——每隔30秒由司机和乘客的客户端发出的位置信息。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;读取延迟平均为13毫秒，写入延迟为25毫秒。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;大多使用LOCAL_QUORUM的一致性级别，也就是高度的一致性。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;➤&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;Mesos后台工具&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Mesos不考虑机器的CPU、内存和存储。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在编程时，我们面对着不是单独一台机器，而是一个资源池。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;线性扩展：可以运行在数万台机器上。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;高可用性：使用Zookeeper在可配置数量的副本中选出leader。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;可以运行Docker容器或Mesos容器。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;可插拔的资源隔离：Linux使用Cgroups内存与CPU隔离器，还有Posix的隔离器，针对不同的OS有不同的隔离机制。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;两级调度器：将Mesos代理的资源用于不同的框架中，各个框架在这些资源顶层自行安排任务。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;➤&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;Apache Cassandra后台程序&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Cassandra十分适合Uber的用例。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;可水平扩展：添加新的节点，便可线性地扩展读取和写入吞吐量。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;高可用性：针对可调整的一致性级别，系统具有容错性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;低延迟：在同一个数据中心中，延迟可达到毫秒级别。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;操作简单：所有集群都属于同质化集群，没有主服务器，在集群中没有特殊的节点。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;足够丰富的数据模型：包含列、复合键、计数器、次索引等等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;与开源软件集成良好：Hadoop、Spark、Hive都有能与Cassandra对话的连接器。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;➤&lt;/span&gt;Mesosphere + Uber + Cassandra = Dcos-Cassandra-Service&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Uber与Mesosphere协作生成了mesosphere/dcos-cassandra-service，这是一个自动化的服务，使得在Mesosphere DC/OS上执行部署和管理非常简单。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAuiaH7Imiab3PXQf3b0LFnnSTmshNiaFibUrGYelcPhA3u2aU3qCOoIZf1QkNXZnPia02tWkttQlpHxdbqw/0?wx_fmt=jpeg"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;顶层是Web界面或者控制面板API。可以指定想要的节点数量和CPU数量，指定Cassandra配置，然后提交到控制面板API。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Uber的开发系统是在Aurora顶层启动的，用于运行无状态服务，以及引导载入dcos-cassandra-service框架。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在案例中，dcos-cassandra-service框架有两个集群与Mesos主服务器会话。Uber在系统中使用了五个Mesos主服务器，并通过Zookeeper来选出leader。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;同时使用Zookeeper来存储框架的元数据，包括：运行哪些任务，Cassandra配置，集群的健康度等等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在集群的每台机器上都有Mesos代理运行，负责向Mesos的master提供资源，然后master再负责以离散的方式进行分发。框架可以接受或拒绝这些资源，同一台机器上可以运行多个Cassandra节点。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;这里使用的是Mesos容器，而不是Docker。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在配置中有5个端口被重写，分别是torage_port、ssl_storage_port、native_transport_port、rpcs_port、jmx_port，这样在同一台机器上就可以运行多个容器了。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;由于使用了持久卷，可以将数据存储在沙盒目录的外部。如果Cassandra出错，在持久卷中仍保留有数据，可以提供给刚才崩溃重启的任务使用。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;这里使用了动态预留的方式，以确保在重启失败的任务时资源可用。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Cassandra的服务操作&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Cassandra有一个概念，就是种子节点的存在。种子节点用于在新节点加入集群时协助进行引导。典型的种子节点provider会在Mesos集群中自动铺设Cassandra节点。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在Cassandra集群上的节点数量可以通过REST请求来增加。它会开启额外的节点，给它发送种子节点，并引导额外的Cassandra后台程序。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;所有Cassandra的配置参数都能修改。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;使用API可以替换失效的节点。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在副本间同步数据时需要修复，不过是在以节点为基础的主要键值范围中执行修复，不会影响到性能。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;清除程序会移除不需要的数据。如果节点添加成功，数据转移到新节点之后，系统会命令清除程序删除这些冗余数据。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在这个框架中，多个数据中心的副本也是可配置的。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;多数据中心支持&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;每个数据中心都安装有独立的Mesos，以及独立的框架实例。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;框架与各个部分对话，并周期性地交换种子节点。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;这就是Cassandra所需内容。通过引导其它数据中心的种子，节点会在拓扑中分布，并得出这些节点的内容。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;数据中心之间ping的往返延迟为77.8毫秒。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;按照第50百分位计算，异步复制延迟为44.69毫秒；按照第95百分位计算，是46.38毫秒；按照第99百分位计算则是47.44毫秒。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;计划执行&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;可以总结为计划、阶段和模块。规划好的计划包含不同的阶段，每个阶段包含多个模块。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;第一阶段就是协调，系统会找出在Mesos之外已经运行的程序。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在部署阶段，系统会检查配置中的节点数是否已经在集群中呈现，并在需要时进行部署。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;模块就是Cassandra节点的具体规范。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;另外还包含其它阶段：备份阶段、恢复阶段、清理阶段与修复阶段，具体要取决于命中的是哪个REST端点。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;集群的开启速度为每分钟一个新节点。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;我们希望每个节点的启动时间达到30秒，&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在Cassandra上不能并发启动多个节点。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;通常，每个Mesos节点会分配2TB的磁盘空间与128GB的RAM。给每个容器分配100GB，给每个Cassandra进程分配32GB的堆栈。（注意：这个数据可能会有细节错误）。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;系统使用CMS来替代G1垃圾回收器，这个垃圾回收器无需任何调优，便可以达到按第99.9百分位计算更为优秀的延迟和性能。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;➤&lt;/span&gt;裸机直接运行 VS Mesos管理下的集群&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;使用容器的性能开销如何？裸机代表着Cassandra不运行在容器中。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;读取延迟，几乎没有任何区别：5-10%的开销&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在裸机中，平均为0.38毫秒，而在Mesos中是0.44毫秒。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;按第99百分位计算，裸机是0.91毫秒，而使用Mesos则是0.98毫秒。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;读取吞吐量差别很小。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;写入延迟。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;裸机平均值为0.43毫秒，而使用Mesos平均是0.48毫秒。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;按第99百分位计算，裸机是1.05毫秒，使用Mesos则是1.26毫秒。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;写入的吞吐量差别也很小。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;原文链接： How Uber Manages A Million Writes Per Second Using Mesos And Cassandra Across Multiple Datacenters（译/孙薇 责编/钱曙光）&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2016年11月18日-20日，由CSDN重磅打造的年终技术盛会&lt;/span&gt;&lt;span&gt;&lt;strong&gt;SDCC 2016中国软件开发者大会&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;将在北京举行，大会秉承干货实料（案例）的内容原则，本次大会共设置了12大专题、近百位的演讲嘉宾，并邀请业内顶尖的CTO、架构师和技术专家，与参会嘉宾共同探讨电商架构、高可用架构、编程语言、架构师进阶、微信开发、前端、平台架构演进、基于Spark的大数据系统设计、自动化运维与容器实践、高吞吐数据库系统设计要领、移动视频直播技术等。10月14日仍是&lt;/span&gt;&lt;span&gt;&lt;strong&gt;五折抢票&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，最低1400元，注册参会。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Tue, 18 Oct 2016 17:32:35 +0800</pubDate>
    </item>
    <item>
      <title>【附获奖名单】SDCC 2016北京站等你来约，出品人信息和12个专题大公开（五折购票中）</title>
      <link>http://www.iwgc.cn/link/3120830</link>
      <description>&lt;p&gt;&lt;span&gt;2016年11月18日-20日，由CSDN重磅打造的年终技术盛会，SDCC 2016中国软件开发者大会将在北京举行，大会面向国内外的中高端技术人员，聚焦最前沿技术及一线的实践经验，从而助力企业的技术升级和改造、全面提升技术人员的综合实力。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujLBa1fFNZA70jAT3tm0J7ZW3rpMfhRT7FiasYKgHZwr5yUnDhCIP6L81UrNfAZc6DiavmTicCAzdF4A/640?wx_fmt=jpeg"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;SDCC 2016中国软件开发者大会秉承干货实料（案例）的内容原则，本次大会共设置了12大专题、近百位的演讲嘉宾，并邀请业内顶尖的CTO、架构师和技术专家，与参会嘉宾共同探讨电商架构、高可用架构、编程语言、架构师进阶、微信开发、前端、平台架构演进、基于Spark的大数据系统设计、自动化运维与容器实践、高吞吐数据库系统设计要领、移动视频直播技术、个性化推荐等，旨在推动软件开发实践的深入交流与分享，为软件开发者、广大互联网人士及行业相关人士提供最具价值的交流平台。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="font-size: 16px; line-height: 25.6px; white-space: normal; max-width: 100%; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;p&gt;&lt;span&gt;好消息！日前Erlang最初的设计者和实现者&lt;span&gt;Joe Armstrong&lt;/span&gt;确认了会参加本次大会并带来主旨演讲，他也是Erlang OTP系统项目的首席架构师。他拥有瑞典皇家理工学院博士学位，是容错系统开发领域的世界级专家。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;strong&gt;出品人首曝光，清一色老司机&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;张立刚 1号店&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujLBa1fFNZA70jAT3tm0J7ZgjhIlWCUWfIsagggcg0BkvjnY7rH27LpsHCqNyUdEYEbLoqTAXtEgA/0?"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;张立刚 1号店 技术部-电商云平台技术总监&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;出品专题：电商架构&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;个人介绍：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; 2012年7月加入1号店，先后担任过1号店订单、库存、拆单、运费、第三方平台订单等电商核心交易系统负责人，致力于电商平台产品化、智能化、云化。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;期间主导并参与了1号店SOA治理、订单Service化、订单水平拆库&amp;amp;去Oracle迁Mysql、无线性能优化及拆pool、运费体系重构、库存准确率优化等重要项目，负责1号店与Tmall、百度、当当、B2B2C平台等第三方平台订单业务，从0开始建立了1号店完善的订单监控、预警、履单体系。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对高可用高并发高性能的电商核心交易系统及SOA架构有深入的理解和实践，熟悉电商核心产品、订单、库存等业务，将以OMS为核心规划构建新一代电子商务云平台。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;周爱民 南潮（Ruff）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujLBa1fFNZA70jAT3tm0J7ZdzGiaU9aJ1JiceqZEeVSkSY9xXL3XI9ZZ5H0OIdKiagtV5aHoXYLdLzlQ/0?"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;周爱民 南潮（Ruff） 架构师&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;出品专题：架构师的进阶之路&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;个人介绍：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;现任南潮（ruff.io）架构师。从 1996 年开始涉足商业软件开发，在软件开发、软件工程、团队建设以及部门管理方面经验丰富，曾任支付宝（中国）公司业务架构师，盛大网络平台架构师，豌豆荚架构师等职。著有《Delphi 源代码分析》、《JavaScript 语言精髓与编程实践》、《大道至简》、《大道至易》等专著，其中《大道至易：实践者的思想》是一本以架构思想为基础，综合讨论软件工程、开发技术与系统架构三者间的关系与组织方法的著作。自 2008 年以来，一直作为《程序员》特约专家负责软件工程、架构方面的二审工作。系前端组织 W3CTech 特约技术专家。是多届 CSDN 的 SD2 大会、InfoQ 的 QCon 大会、Erlang China 大会(CN Erlounge)、前端 D2 大会、W3CTech 前端交流会、上海 ThinkInLAMP 架构师大会(首届)、MSUP/MPD 大会特约讲师、评委。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;&lt;strong&gt;周裕波&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujLBa1fFNZA70jAT3tm0J7Z5F0K4FBlqxqkm8mhaOIRrPhQXEzSz8pS6VXsxUYjNKxJA0LWRmbDgw/0?"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;周裕波 w3ctech 发起人&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;出品专题：前端开发&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;个人介绍：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; w3ctech &amp;amp;&amp;amp; 前端圈发起人，任职于奇虎360 奇舞团，SDCC 2015、SDCC 2016两界大会前端开发专题论坛出品人。有多年的前端开发经验及前端大会组织经验。曾先后组织举办过Web标准化交流会、走进名企、拥抱HTML5、JavaScript专题会议、Webreubild北京、Mobile开发者专题大会、CSS大会及FEDay，活跃于前端技术社区。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;沈剑 58到家&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujLBa1fFNZA70jAT3tm0J7ZsTmJ7Vn5dh7HQibSHWQ3Err9DKqAGmC33EHsvnjkmFGwYgvx6fnI5Bw/0?"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;沈剑 58到家 技术委员会主席&amp;amp;技术总监&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;出品专题：高可用架构&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;个人介绍：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;互联网架构技术专家，“架构师之路”公众号作者。曾任百度高级工程师，58同城高级架构师，58同城技术委员会主席，58同城C2C技术部负责人，58同城技术学院优秀讲师。现任58到家技术委员会主席，技术总监，负责架构、平台、中台等多个后端部门。本质，技术人一枚。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;陈超 七牛云&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujLBa1fFNZA70jAT3tm0J7Zql5h1OwtfaBdv5otyaokmqGr7eGaUV3bFPORdPsVBibSaHSpDuRJ94A/0?"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;陈超 七牛云 技术总监&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;出品专题：基于Spark的大数据系统设计&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;个人介绍：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;全面负责七牛所有数据产品的设计与研发，近年来一直专注于分布式计算与机器学习等领域。有非常丰富的分布式系统设计与实现的经验，在分布式数据库方面也有深入研究。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;柳峰 贵州多米科技&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujLBa1fFNZA70jAT3tm0J7ZVrSSKPqHpZNlvrf4HiaqXPNctiaeV65EPQxtRjNR4HqwOfv1HCvn9EkQ/0?"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;柳峰 贵州多米科技 创始合伙人兼CTO&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;出品专题：微信开发&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;个人介绍：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;刘运强，网名柳峰，计算机硕士研究生，畅销书《微信公众平台应用开发：方法、技巧与案例》作者，CSDN博客专家，CSDN学院讲师，贵州派盛教育首席讲师。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;杨芳贤 IBOS&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujLBa1fFNZA70jAT3tm0J7Z5ibE5sz27myZm0v8ftpmodjFXESbet4MkvKcuicoKpqiaN4pvew6KwaBA/0?"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;杨芳贤 IBOS 创始人/产品经理&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;出品专题：微信开发&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;个人介绍：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;微信企业号核心伙伴，中国移动办公专家顾问团成员。2014年微信开发者大会分享《企业微信大战略之企业号篇》得到业界广泛关注，现专注IBOS-酷办公（开源的企业协同管理平台）与微信公众号、企业号融合应用的研究。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;史海峰 当当网&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujLBa1fFNZA70jAT3tm0J7ZFTh25mcoCu5Vq5voK4rqlWvSHibiaeVduU5LibuhRsXJo12ZYSWcGKvxQ/0?"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;史海峰 当当网 架构部负责人&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;出品专题：架构演进&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;个人介绍： &lt;/span&gt;&lt;/strong&gt;&lt;span&gt;2001年毕业于北京化工大学计算机科学与技术专业，曾在神州数码、亚信联创长期从事电信行业业务支撑系统集成工作，参与中国移动、中国联通多个项目，具有丰富的大型业务系统研发实施经验。 2012年加入当当，负责总体架构规划、技术规范制定和技术预研推广，善于把握复杂业务需求，提出创新性解决方案，参与了近年当当多个重点项目的方案设计，在项目中对系统架构进行持续改造优化。负责技术委员会组织管理工作，发掘最佳实践、推动技术革新，组织内外部技术交流。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;金官丁 热璞科技&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujLBa1fFNZA70jAT3tm0J7Zmbk2bqDkbS7dy1dqtFwYvJj8bwwnhvNkibww8ibeG8MXcu33U6yTEJRA/0?"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;金官丁 热璞科技 CTO&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;出品专题：高吞吐数据库系统设计要领&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;个人介绍：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;曾在阿里巴巴负责开源分布式数据库架构探索与实践，阿里系第一个专职MySQL DBA，后离开加入风靡全球创业团队开心农场。现创办热璞科技担任CTO一职，负责分布式数据库产品HotDB的产品规划及去IOE解决方案。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;杜玉杰 华为&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujLBa1fFNZA70jAT3tm0J7Zsqf0mzD7UqS2mbHIqw7I4IBHr81QWHNl5PotQuu9bBUupoR3uRxb0w/0?"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;杜玉杰 华为 华为开源软件能力中心、华为开源战略管理核心团队（OSCT）专家成员&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;出品专题：自动化运维与容器实践&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;个人介绍：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;开源布道师，Growth Hacker，曾组织和发起过首届开源云OpenStack上海峰会以及2012 COSUG开发者大会，联合CSDN共同组织了OpenStack亚太峰会：2012 OpenStack亚太技术峰会上海站纵览 ，当选OpenStack基金会董事：OpenStack基金会和董事们的那些事。目前就职于华为开源软件能力中心、华为开源战略管理核心团队（OSCT）专家成员，15年负责华为容器生态技术团队推动成立了OCI和CNCF基金会，并荣获P&amp;amp;S战略与业务发展体系最佳业务发展与产业竞合奖 。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;陈举锋 阿里巴巴&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujLBa1fFNZA70jAT3tm0J7ZfkswG1e43RQ4CdWnJMPTDk3Ww7ibvFBpaJ4GFdGSibTskbgOMYAN7bicw/0?"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;陈举锋 阿里巴巴 高级无线技术专家&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;出品专题：移动直播&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;个人介绍：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;花名丰火，阿里巴巴高级无线技术专家，多年无线客户端开发经验，曾负责iPhone版QQ客户端架构，2015年加入手机淘宝团队，目前负责淘宝直播的研发。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;卢亿雷 Admaster&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujLBa1fFNZA70jAT3tm0J7ZVg8tNe7PQevkwhmOd7lvLSPe82ZjwO393JWzsbn4SRQ5w0e9dD7W0Q/0?"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;卢亿雷 Admaster 技术副总裁&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;出品专题：个性化推荐&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;个人介绍：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; AdMaster技术副总裁兼总架构师，大数据资深专家，CCF大数据专委委员，北京航空航天大学特聘教授。主要负责数据的采集、清洗、存储、挖掘等整个数据流过程，关注Hadoop/HBase/Storm/Spark/ElasticSearch。有超过10年云计算、云存储、大数据经验。曾在联想、百度、Carbonite工作，并拥有多篇大数据相关的专利和论文。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;strong&gt;SDCC 2016·北京站将与你见面的12个热门技术专题&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; font-size: 16px; line-height: 25.6px; white-space: normal; max-width: 100%; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;电商架构&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;双11异常火爆，不管是销售数字，还是用户体验，这次全民购物狂潮再次刷新了过去的所有记录。而在这一切背后，需要稳定高效的系统架构设计来提供有力支持。本专题揭示了国内各大知名电商架构设计的最佳技术实践。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; font-size: 16px; line-height: 25.6px; white-space: normal; max-width: 100%; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;架构师进阶之路&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;怎样学习才能成长为一名合格的架构师，或者说一名合格的架构师应该有怎样的技术知识体系，这不仅是一个刚刚踏入职场的初级程序员也是工作三五年之后开始迷茫的老程序员经常会问到的问题。本专题内容来自CTO、首席架构师等眼中的架构师，他们将给你最全面最权威的回答。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; font-size: 16px; line-height: 25.6px; white-space: normal; max-width: 100%; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;前端&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;随着新一代前端技术的发展，给前端开发者带来巨大的创新应用实践机会，本专题是为HTML5、CSS3、JavaScript等前端技术的互联网开发者所举办的，内容涵盖网络游戏、电商、旅游、媒体、社交、技术服务等多种互联网业态的技术经验分享，将会涉及各种WEB前端开发技术。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; font-size: 16px; line-height: 25.6px; white-space: normal; max-width: 100%; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;高可用架构&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;理论结合实践，案例式讲述，深入剖析架构设计的高可用性，快速提升设计和架构能力，让大家系统性的掌握一线互联网公司高可用架构设计的方法论，并应用于实际工作中。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; font-size: 16px; line-height: 25.6px; white-space: normal; max-width: 100%; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;基于Spark的大数据系统设计&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;Spark是目前热门的大数据分布式编程框架之一，现已成为Apache顶级项目，受到业界的广泛关注和使用。本专场主要讨论的话题有：利用基于Spark的大数据系统设计来促进信息时代的智能化，有效结合Spark和其他热门大数据工具并加以利用；应用目前的Spark技术实现大数据在各行业的全面渗透；以及通过实际案例和场景来探讨Spark与大数据的互动创新。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; font-size: 16px; line-height: 25.6px; white-space: normal; max-width: 100%; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;微信开发&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;微信仍以迅猛势头火速发展，并已跨入海外市场，服务着全球亿万用户。作为技术开发者，除了时刻关注领域技术发展外，更应紧盯、深挖掘该行业所蕴藏的巨大商机。目前微信开发成为SDCC大会的重要分论坛之一，2014年北京和深圳两场微信开发者大会、2015 SDCC微信开发专题论坛，吸引了不少领域技术专家参与分享，受到了广大微信开发者的一致好评。2016年，SDCC微信开发论坛将持续精彩，携手更多技术高手、创业精英，共研技术难点，碰撞创新点子。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; font-size: 16px; line-height: 25.6px; white-space: normal; max-width: 100%; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;架构演进&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;本专题涵盖各类互联网后台、移动、直播等热门架构的演进过程，在架构变迁中遇到的痛点和解决方案，从而带给参会者以启发。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; font-size: 16px; line-height: 25.6px; white-space: normal; max-width: 100%; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;高吞吐数据库系统设计要领&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;本专题将邀请国内外的数据库专家，共同探讨MySQL、NoSQL、Oracle、缓存技术、云端数据库、智能数据平台等领域的前瞻性热点话题与技术，尤其是在高数据量情况下实现高吞吐数据库的设计。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; font-size: 16px; line-height: 25.6px; white-space: normal; max-width: 100%; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;自动化运维与容器实践&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;DevOps并非你想的那么简单，如今，您经常听周围的人谈论DevOps，但真正理解并能执行的人极少。其实，采纳DevOps的文化壁垒非常高，这是一个值得探索的漫长过程。DevOps论坛邀请国内DevOps行业顶级专家，和大家共同探讨DevOps具体应用场景、如何在企业实施DevOps、DevOps实际案例、DevOps如何加速企业创新等热点话题。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; font-size: 16px; line-height: 25.6px; white-space: normal; max-width: 100%; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;移动视频直播技术&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;移动直播技术属于今年最热的前沿领域，在移动直播技术专场邀请到多位直播技术专家深度阐述直播连麦技术；在热门时段大主播高峰值情景下，如何优化直播礼物系统？面对延迟、卡顿等诸多难题，全互动直播技术的最佳解决方案；基于第三方CDN，我们该如何实现直播质量监控。更多精彩的直播技术，尽在本专题。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; font-size: 16px; line-height: 25.6px; white-space: normal; max-width: 100%; color: rgb(62, 62, 62); background-color: rgb(255, 255, 255); box-sizing: border-box !important; word-wrap: break-word !important;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;个性化推荐&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;大数据算法是大数据得以有效应用的基础，能够在保证推荐准确性的同时增加推荐的多样性，满足用户多种需求，还能够实现实时反馈，强化推荐算法。本专场主要讨论的话题有：利用大数据算法来实现组织的运营能力；通过推荐算法分析有效打通不同算法间的固有壁垒；应用目前的大数据算法来提升企业IT效率；以及通过实际案例和场景来探讨推荐算法的应用分析能力。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最后，我们也接受讲师申请，详情点击：&lt;span&gt;&lt;strong&gt;http://geek.csdn.net/news/detail/106595&lt;/strong&gt;&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;SDCC 2016中国软件开发者大会秉承干货实料（案例）的内容原则，本次大会共设置了12大专题、近百位的演讲嘉宾，10月21日前仍是五折购票，最低1400元，扫描下方&lt;span&gt;&lt;strong&gt;二维码&lt;/strong&gt;&lt;/span&gt;或【&lt;span&gt;&lt;strong&gt;&lt;span&gt;阅读原文&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;】立即抢票。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujLBa1fFNZA70jAT3tm0J7Z50UHcnxiawI4Av7icJeu33l82nw8asTdWlPzsfiaLNgtPicWich7v8EjNxA/640?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_gif/Pn4Sm0RsAuiaH7Imiab3PXQf3b0LFnnSTmuyrVxFXtmBzwvfzKOJAkOK1dHLCeDIATfaeukKoLKgicfFYp3IfM4Vg/0?wx_fmt=gif"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;下面附上本次截图赠书活动&lt;span&gt;&lt;strong&gt;中奖名单&lt;/strong&gt;&lt;/span&gt;咯！因参与人数远超预期，故抽取范围特申请扩大，具体获奖明细如下（微信ID）：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;犇犇&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;笑傲江湖&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;耳东&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;恶来。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Quiter&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Hoffman&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;卍&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;杨兜兜&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;杨金平&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Dawu&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;恭喜以上用户获赠书籍，也感谢其他参与的小伙伴，咱们下次再约！&lt;/span&gt;&lt;/p&gt;</description>
      <pubDate>Tue, 18 Oct 2016 17:32:35 +0800</pubDate>
    </item>
    <item>
      <title>SDCC 2016北京站等你来约，出品人信息和12个专题大公开（五折购票中）</title>
      <link>http://www.iwgc.cn/link/3069652</link>
      <description>&lt;p&gt;&lt;span&gt;2016年11月18日-20日，由CSDN重磅打造的年终技术盛会，&lt;/span&gt;&lt;a target="_blank" style="font-size: 14px; text-decoration: underline;"&gt;&lt;span&gt;SDCC 2016中国软件开发者大会&lt;/span&gt;&lt;/a&gt;&lt;span&gt;将在北京举行，大会面向国内外的中高端技术人员，聚焦最前沿技术及一线的实践经验，从而助力企业的技术升级和改造、全面提升技术人员的综合实力。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a target="_blank"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjVqpRlkA20hpicOibQo6EBO08yvZqLCwGLtbGsjV2znOaQwXfh31PPOIcmWcIxv04KWQ3ACgc5Ylhcw/0?wx_fmt=jpeg"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;a target="_blank" style="font-size: 14px; text-decoration: underline;"&gt;&lt;span&gt;SDCC 2016中国软件开发者大会&lt;/span&gt;&lt;/a&gt;&lt;span&gt;秉承干货实料（案例）的内容原则，本次大会共设置了12大专题、近百位的演讲嘉宾，并邀请业内顶尖的CTO、架构师和技术专家，与参会嘉宾共同探讨电商架构、高可用架构、编程语言、架构师进阶、微信开发、前端、平台架构演进、基于Spark的大数据系统设计、自动化运维与容器实践、高吞吐数据库系统设计要领、移动视频直播技术实践、魅族开放平台开发者大赛等，旨在推动软件开发实践的深入交流与分享，为软件开发者、广大互联网人士及行业相关人士提供最具价值的交流平台。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;好消息！&lt;/strong&gt;日前Erlang最初的设计者和实现者Joe Armstrong确认了会参加本次大会并带来主旨演进，他也是Erlang OTP系统项目的首席架构师。他拥有瑞典皇家理工学院博士学位，是容错系统开发领域的世界级专家。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h2&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;出品人首曝光，清一色老司机&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;张立刚 1号店&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjVqpRlkA20hpicOibQo6EBO08so7683KHgic8pfKv6f8uSECpeJXCMpJH5ILevyRZNuQOJyAwdrGkRrA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;张立刚 1号店 技术部-电商云平台技术总监&lt;/span&gt;&lt;/center&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;出品专题：电商架构&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;个人介绍：&lt;/strong&gt; 2012年7月加入1号店，先后担任过1号店订单、库存、拆单、运费、第三方平台订单等电商核心交易系统负责人，致力于电商平台产品化、智能化、云化。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;期间主导并参与了1号店SOA治理、订单Service化、订单水平拆库&amp;amp;去Oracle迁Mysql、无线性能优化及拆pool、运费体系重构、库存准确率优化等重要项目，负责1号店与Tmall、百度、当当、B2B2C平台等第三方平台订单业务，从0开始建立了1号店完善的订单监控、预警、履单体系。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对高可用高并发高性能的电商核心交易系统及SOA架构有深入的理解和实践，熟悉电商核心产品、订单、库存等业务，将以OMS为核心规划构建新一代电子商务云平台。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;周爱民 南潮（Ruff）&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjVqpRlkA20hpicOibQo6EBO08zsSzEiaNicjdicr0BtMsaBopu6szicU0dSzLsicK2xJDibq7EAzOPMv9icbqg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;周爱民 南潮（Ruff） 架构师&lt;/span&gt;&lt;/center&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;出品专题：架构师的进阶之路&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;个人介绍：&lt;/strong&gt;现任南潮（ruff.io）架构师。从
 1996 年开始涉足商业软件开发，在软件开发、软件工程、团队建设以及部门管理方面经验丰富，曾任支付宝（中国）公司业务架构师，盛大网络平台架构师，豌豆荚架构师等职。著有《Delphi 源代码分析》、《JavaScript 语言精髓与编程实践》、《大道至简》、《大道至易》等专著，其中《大道至易：实践者的思想》是一本以架构思想为基础，综合讨论软件工程、开发技术与系统架构三者间的关系与组织方法的著作。自 2008 年以来，一直作为《程序员》特约专家负责软件工程、架构方面的二审工作。系前端组织 W3CTech 特约技术专家。是多届 CSDN 的 SD2 大会、InfoQ 的 QCon 大会、Erlang China 大会(CN Erlounge)、前端 D2 大会、W3CTech 前端交流会、上海 ThinkInLAMP 架构师大会(首届)、MSUP/MPD 大会特约讲师、评委。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;周裕波&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjVqpRlkA20hpicOibQo6EBO08JrS5Cia0icUZmlSvTvIze5iaqldHHdkGibAxKabubD9fiaBOnD4ZMA1hOdA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;周裕波 w3ctech 发起人&lt;/span&gt;&lt;/center&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;出品专题：前端开发&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;个人介绍：&lt;/strong&gt;
 w3ctech &amp;amp;&amp;amp; 前端圈发起人，任职于奇虎360 奇舞团，SDCC 2015、SDCC 2016两界大会前端开发专题论坛出品人。有多年的前端开发经验及前端大会组织经验。曾先后组织举办过Web标准化交流会、走进名企、拥抱HTML5、JavaScript专题会议、Webreubild北京、Mobile开发者专题大会、CSS大会及FEDay，活跃于前端技术社区。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;沈剑 &amp;nbsp; 58到家&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjVqpRlkA20hpicOibQo6EBO082dy5VwF3CDibVK6Bia8PcuObrQzlicWty5rNViaicBRj8yKEwKRGSy4fHZQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;沈剑 58到家 技术委员会主席&amp;amp;技术总监&lt;/span&gt;&lt;/center&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;出品专题：高可用架构&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;个人介绍：&lt;/strong&gt;互联网架构技术专家，“架构师之路”公众号作者。曾任百度高级工程师，58同城高级架构师，58同城技术委员会主席，58同城C2C技术部负责人，58同城技术学院优秀讲师。现任58到家技术委员会主席，技术总监，负责架构、平台、中台等多个后端部门。本质，技术人一枚。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;陈超 七牛云&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjVqpRlkA20hpicOibQo6EBO08TcCpjuwja43VJ99f9HptkesdoXy4Mia02T2bJ2537Cc7BqKHRAw4GPg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;陈超 七牛云 技术总监&lt;/span&gt;&lt;/center&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;出品专题：基于Spark的大数据系统设计&lt;/strong&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;个人介绍：&lt;/strong&gt;全面负责七牛所有数据产品的设计与研发，近年来一直专注于分布式计算与机器学习等领域。有非常丰富的分布式系统设计与实现的经验，在分布式数据库方面也有深入研究。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;柳峰 &amp;nbsp; 贵州多米科技&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjVqpRlkA20hpicOibQo6EBO08fze1mJDibV7uHetW6nUU2AMORXgOFgfmqYtUBIDcRpbfN2kzxyVKZYQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;柳峰 贵州多米科技 创始合伙人兼CTO&lt;/span&gt;&lt;/center&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;出品专题：微信开发&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;个人介绍：&lt;/strong&gt;刘运强，网名柳峰，计算机硕士研究生，畅销书《微信公众平台应用开发：方法、技巧与案例》作者，CSDN博客专家，CSDN学院讲师，贵州派盛教育首席讲师。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;杨芳贤 IBOS&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjVqpRlkA20hpicOibQo6EBO08fZicFKrZ671ZKpicZjKNNIp4wou8ABic4bp2W2Ssj90Y7KoF8CjNGdSqg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;杨芳贤 IBOS 创始人/产品经理&lt;/span&gt;&lt;/center&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;出品专题：微信开发&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;个人介绍：&lt;/strong&gt;微信企业号核心伙伴，中国移动办公专家顾问团成员。2014年微信开发者大会分享《企业微信大战略之企业号篇》得到业界广泛关注，现专注IBOS-酷办公（开源的企业协同管理平台）与微信公众号、企业号融合应用的研究。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;史海峰 当当网&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjVqpRlkA20hpicOibQo6EBO08pb3an430iarz9WThPWfDR5UTHqoJq7UIqEgRnH7RdlDd9TN8q7Y3OKA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;史海峰 当当网 架构部负责人&lt;/span&gt;&lt;/center&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;出品专题：架构演进&lt;/strong&gt; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;个人介绍：&lt;/strong&gt;
 2001年毕业于北京化工大学计算机科学与技术专业，曾在神州数码、亚信联创长期从事电信行业业务支撑系统集成工作，参与中国移动、中国联通多个项目，具有丰富的大型业务系统研发实施经验。
 
2012年加入当当，负责总体架构规划、技术规范制定和技术预研推广，善于把握复杂业务需求，提出创新性解决方案，参与了近年当当多个重点项目的方案设计，在项目中对系统架构进行持续改造优化。负责技术委员会组织管理工作，发掘最佳实践、推动技术革新，组织内外部技术交流。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;金官丁 热璞科技&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjVqpRlkA20hpicOibQo6EBO08GmHbM5JSnwibxOuU7TklFfQiaqCrn7Sh3UUmjetoIojjmIbGLUMVLM8w/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;金官丁 热璞科技 CTO&lt;/span&gt;&lt;/center&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;出品专题：高吞吐数据库系统设计要领&lt;/strong&gt; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;个人介绍：&lt;/strong&gt;曾在阿里巴巴负责开源分布式数据库架构探索与实践，阿里系第一个专职MySQL DBA，后离开加入风靡全球创业团队开心农场。现创办热璞科技担任CTO一职，负责分布式数据库产品HotDB的产品规划及去IOE解决方案。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;杜玉杰 华为&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjVqpRlkA20hpicOibQo6EBO08GcialgqhV5UDCRI5CUf4W7a0fyxuMFCJc4tRUUprG9iannibyiaytcokqQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;杜玉杰 华为 华为开源软件能力中心、华为开源战略管理核心团队（OSCT）专家成员&lt;/span&gt;&lt;/center&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;出品专题：自动化运维与容器实践&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;个人介绍：&lt;/strong&gt;开源布道师，Growth
 Hacker，曾组织和发起过首届开源云OpenStack上海峰会以及2012 COSUG开发者大会，联合CSDN共同组织了OpenStack亚太峰会：2012 OpenStack亚太技术峰会上海站纵览 ，当选OpenStack基金会董事：OpenStack基金会和董事们的那些事。目前就职于华为开源软件能力中心、华为开源战略管理核心团队（OSCT）专家成员，15年负责华为容器生态技术团队推动成立了OCI和CNCF基金会，并荣获P&amp;amp;S战略与业务发展体系最佳业务发展与产业竞合奖 。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;陈举锋 阿里巴巴&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjVqpRlkA20hpicOibQo6EBO08Y9yjM380PicibsNg2S7CREKBiciclfaOxEeqzGMRvW6E053KnpHSk3y1jg/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;陈举锋 阿里巴巴 高级无线技术专家&lt;/span&gt;&lt;/center&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;出品专题：移动直播&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;个人介绍：&lt;/strong&gt;花名丰火，阿里巴巴高级无线技术专家，多年无线客户端开发经验，曾负责iPhone版QQ客户端架构，2015年加入手机淘宝团队，目前负责淘宝直播的研发。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;卢亿雷 Admaster&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjVqpRlkA20hpicOibQo6EBO08nzf5sJUlibGdgzxl5nYVRvNmkU3eQp9bbdbUa74lyfvEUZLRLL1MPicA/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;卢亿雷 Admaster 技术副总裁&lt;/span&gt;&lt;/center&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;出品专题：个性化推荐&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;个人介绍：&lt;/strong&gt;
 AdMaster技术副总裁兼总架构师，大数据资深专家，CCF大数据专委委员，北京航空航天大学特聘教授。主要负责数据的采集、清洗、存储、挖掘等整个数据流过程，关注Hadoop/HBase/Storm/Spark/ElasticSearch。有超过10年云计算、云存储、大数据经验。曾在联想、百度、Carbonite工作，并拥有多篇大数据相关的专利和论文。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;SDCC 2016·北京站将与你见面的12个热门技术专题&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;电商架构&lt;/strong&gt; &lt;br/&gt;双11异常火爆，不管是销售数字，还是用户体验，这次全民购物狂潮再次刷新了过去的所有记录。而在这一切背后，需要稳定高效的系统架构设计来提供有力支持。本专题揭示了国内各大知名电商架构设计的最佳技术实践。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;架构师进阶之路&lt;/strong&gt; &lt;br/&gt;怎样学习才能成长为一名合格的架构师，或者说一名合格的架构师应该有怎样的技术知识体系，这不仅是一个刚刚踏入职场的初级程序员也是工作三五年之后开始迷茫的老程序员经常会问到的问题。本专题内容来自CTO、首席架构师等眼中的架构师，他们将给你最全面最权威的回答。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;前端&lt;/strong&gt; &lt;br/&gt;随着新一代前端技术的发展，给前端开发者带来巨大的创新应用实践机会，本专题是为HTML5、CSS3、JavaScript等前端技术的互联网开发者所举办的，内容涵盖网络游戏、电商、旅游、媒体、社交、技术服务等多种互联网业态的技术经验分享，将会涉及各种WEB前端开发技术。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;高可用架构&lt;/strong&gt; &lt;br/&gt;理论结合实践，案例式讲述，深入剖析架构设计的高可用性，快速提升设计和架构能力，让大家系统性的掌握一线互联网公司高可用架构设计的方法论，并应用于实际工作中。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;基于Spark的大数据系统设计&lt;/strong&gt; &lt;br/&gt;Spark是目前热门的大数据分布式编程框架之一，现已成为Apache顶级项目，受到业界的广泛关注和使用。本专场主要讨论的话题有：利用基于Spark的大数据系统设计来促进信息时代的智能化，有效结合Spark和其他热门大数据工具并加以利用；应用目前的Spark技术实现大数据在各行业的全面渗透；以及通过实际案例和场景来探讨Spark与大数据的互动创新。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;微信开发&lt;/strong&gt; &lt;br/&gt;微信仍以迅猛势头火速发展，并已跨入海外市场，服务着全球亿万用户。作为技术开发者，除了时刻关注领域技术发展外，更应紧盯、深挖掘该行业所蕴藏的巨大商机。目前微信开发成为SDCC大会的重要分论坛之一，2014年北京和深圳两场微信开发者大会、2015 SDCC微信开发专题论坛，吸引了不少领域技术专家参与分享，受到了广大微信开发者的一致好评。2016年，SDCC微信开发论坛将持续精彩，携手更多技术高手、创业精英，共研技术难点，碰撞创新点子。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;架构演进&lt;/strong&gt; &lt;br/&gt;本专题涵盖各类互联网后台、移动、直播等热门架构的演进过程，在架构变迁中遇到的痛点和解决方案，从而带给参会者以启发。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;高吞吐数据库系统设计要领&lt;/strong&gt; &lt;br/&gt;本专题将邀请国内外的数据库专家，共同探讨MySQL、NoSQL、Oracle、缓存技术、云端数据库、智能数据平台等领域的前瞻性热点话题与技术，尤其是在高数据量情况下实现高吞吐数据库的设计。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;自动化运维与容器实践&lt;/strong&gt; &lt;br/&gt;DevOps并非你想的那么简单，如今，您经常听周围的人谈论DevOps，但真正理解并能执行的人极少。其实，采纳DevOps的文化壁垒非常高，这是一个值得探索的漫长过程。DevOps论坛邀请国内DevOps行业顶级专家，和大家共同探讨DevOps具体应用场景、如何在企业实施DevOps、DevOps实际案例、DevOps如何加速企业创新等热点话题。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;移动视频直播技术&lt;/strong&gt; &lt;br/&gt;移动直播技术属于今年最热的前沿领域，在移动直播技术专场邀请到多位直播技术专家深度阐述直播连麦技术；在热门时段大主播高峰值情景下，如何优化直播礼物系统？面对延迟、卡顿等诸多难题，全互动直播技术的最佳解决方案；基于第三方CDN，我们该如何实现直播质量监控。更多精彩的直播技术，尽在本专题。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;个性化推荐&lt;/strong&gt; &lt;br/&gt;大数据算法是大数据得以有效应用的基础，能够在保证推荐准确性的同时增加推荐的多样性，满足用户多种需求，还能够实现实时反馈，强化推荐算法。本专场主要讨论的话题有：利用大数据算法来实现组织的运营能力；通过推荐算法分析有效打通不同算法间的固有壁垒；应用目前的大数据算法来提升企业IT效率；以及通过实际案例和场景来探讨推荐算法的应用分析能力。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a target="_blank" style="font-size: 14px; text-decoration: underline;"&gt;&lt;span&gt;SDCC 2016中国软件开发者大会&lt;/span&gt;&lt;/a&gt;&lt;span&gt;秉承干货实料（案例）的内容原则，本次大会共设置了12大专题、近百位的演讲嘉宾，10月21日前仍是&lt;strong&gt;五折&lt;/strong&gt;购票，最低1400元，想请点击阅读原文&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjVqpRlkA20hpicOibQo6EBO08cCpAfNoyuao3wX5zbrVPA8dia9bbgKd6gkSMysWh99U4hsic5GAzKLXQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;</description>
      <pubDate>Fri, 14 Oct 2016 17:27:10 +0800</pubDate>
    </item>
    <item>
      <title>活动丨2016易观A10数据创新峰会引领大数据实时分析技术新风向</title>
      <link>http://www.iwgc.cn/link/3069653</link>
      <description>&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjVqpRlkA20hpicOibQo6EBO08FkfmmpBGVMXoJV8JWic6eOWeedDeRBflwmAQCMy4X9HhZbnH41kt02g/0?wx_fmt=jpeg"/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;随着我国大数据技术的迅猛发展，其作为战略新兴产业发展制高点的意义愈加明显，而如何紧紧抓住互联网每次裂变的发展契机，科学利用大数据新技术为社会经济发展服务则成为当前大数据平台重点关注的热点问题。令人期待的是，即将举行的&lt;/span&gt;2016&lt;span&gt;易观&lt;/span&gt;A10&lt;span&gt;数据创新峰会，将会创新性地为国际大数据实时分析技术发展指明新方向，从而更加着力的推动大数据与互联网和实体经济深度融合发展。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;作为国内一年一度备受瞩目的大数据盛典，易观&lt;/span&gt;A10&lt;span&gt;数据创新峰会以创新的承办理念和积极的行业探讨精神已走过八个春秋。如今，&lt;/span&gt;A10&lt;span&gt;峰会早已成为中国互联网大数据领域最具影响力的“华山论剑”。与往年峰会相比，本届&lt;/span&gt;2016&lt;span&gt;易观&lt;/span&gt;A10&lt;span&gt;数据创新峰会不仅汇集了当前最具行业权威的大咖专家，更因将探讨新形势下大数据实时分析技术新动向而更加备受关注。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;“怎样提升企业由数据到信息的转化率，如何将数据更加有目的，有层次的转化为价值，从而为企业提速将是本届峰会的亮点之一”在谈及&lt;/span&gt;2016&lt;span&gt;易观&lt;/span&gt;A10&lt;span&gt;数据创新峰会即将举办的意义时，基于&lt;/span&gt;CDH&lt;span&gt;的大数据查电讯技术实践大中华区总经理凌琦在接受采访时表示，在过去的一年当中，互联网与传统行业的结合前所未有的紧密，互联网正以前所未有的速度渗透至各行各业，而此次峰会将会为这种行业发展态势增加驱动力，从而让大数据真正成为新能源，以此促进企业全面精细化运营。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;而对于此峰会的筹备和举行，易观更是投入了极大的热情。作为中国互联网市场领先的大数据分析公司，易观自成立以来，以“快而准”的大数据手段帮助企业创造出更具前沿性的革新产品，并通过数字用户资产的持续运营，助企业实现了增收节支，提效和避险。如今的易观已成为拥有易观千帆，易观方舟，易观博阅等数据品牌的规模“航母”。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;而为了将此次&lt;/span&gt;2016&lt;span&gt;易观&lt;/span&gt;A10&lt;span&gt;数据创新峰会，办成史上最具影响力的国际大数据平台技术新动向顶级论坛，易观更是邀请到了&lt;/span&gt;Cloudera&amp;nbsp;&lt;span&gt;大中华区总经理&lt;/span&gt;&amp;nbsp;&lt;span&gt;凌琦、&lt;/span&gt;Alluxio&lt;span&gt;创始人兼&lt;/span&gt;CEO&amp;nbsp;&lt;span&gt;李浩源、&lt;/span&gt;Kyligence&amp;nbsp;&lt;span&gt;联合创始人兼&lt;/span&gt;CEO&amp;nbsp;&lt;span&gt;韩卿、&lt;/span&gt;Pivotal Greenplum&lt;span&gt;研发总经理&lt;/span&gt;&amp;nbsp;&lt;span&gt;姚延栋等各方权威到场演说，一场大数据产业的“华山论剑”呼之欲出。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;| 活动流程 |&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;a class="f_pictureImg" style="cursor: default; display: inline-block; width: 580px; text-align: center;"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/wvkocF2MXjVqpRlkA20hpicOibQo6EBO08fMqib4xI1Pg9j7iadjHRqVCalheb9TISbuvhtdRLTFP9YX1nq0A5ANfg/0?wx_fmt=gif"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;a class="f_pictureImg" style="cursor: default; display: inline-block; width: 580px; text-align: center;"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/wvkocF2MXjVqpRlkA20hpicOibQo6EBO08ZlJaAVcG9dTs0f3nlEnUnSA9Zpbya78H1QHCnjpfZRvDKSsdsCUkeQ/0?wx_fmt=jpeg"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;| 活动时间地点 |&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;活动时间：10月28日AM9:00---10月28日PM21:00&lt;br/&gt;活动地点：北京·北辰洲际酒店&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;关于活动报名，请点击阅读原文查看官网：http://www.analysys.cn/view/special/A10/#A10-conference&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Fri, 14 Oct 2016 17:27:10 +0800</pubDate>
    </item>
    <item>
      <title>Kubernetes是解药还是毒药？</title>
      <link>http://www.iwgc.cn/link/3069654</link>
      <description>&lt;p&gt;&lt;span&gt;三年前Docker的诞生，给IT行业带来了巨大的革新，云计算模式有了新的尝试方式，应用交付变得异常便捷。也是借助这样的优势，不论在开发者市场、还是在运维人员心中，Docker均占据了一个无法撼动的位置。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujLBa1fFNZA70jAT3tm0J7ZSFqldBMCDkTy90IgmquDtB3By1Mt3tnTbTUdB7jsWbYpURyZkmicpicA/0?wx_fmt=jpeg"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;除了Docker，在容器世界中，另一个明星项目当属Kubernetes。Kubernetes和Docker有相似，也存在不小的差异，它的主要目的是完成分布式容器化应用的管理。Kubernetes诞生之初，掐住Docker编排弱的七寸，一举也赢得不小的容器编排市场。然而，在Docker原生支持编排，Kubernetes快速发展的今天，不妨听下对Kubernetes的一些冷思考。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;Borg 和 Kubernetes&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;说到Kubenetes的源头，相信所有人第一个想到的,一定会是那家屹立于当今全球互联网技术巅峰的公司——Google。如果追究地更久，那一定会发现，Google这十几年间内部的一个分布式管理平台，出镜率高得离奇，那就是“Borg”。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;业界对于Borg的敬意，犹如一江春水，笔者亦如此。说到这种敬意的源头，不得不承认出自两个方面，第一是来源于Google公布的论文，第二则来源于Google出走员工对其的赞美之词。至今，我依然记得，有一次饭间，人工智能领域某位从Google出走的业界权威，兴叹：没有强大的分布式操作系统，人工智能几乎肯定会遇到瓶颈，而出走后，始终怀念当年Google内部的Borg。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;开源的意图&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有Google在背后背书，在容器生态刚起步的时候，哪怕Kubernetes仍然存在诸多问题，但是质疑它依然需要一定的勇气。当Docker依然处于完善容器runtime之时，Kubernetes完全成为容器化分布式应用编排领域的一面旗帜。Docker作为一家商业化公司，染指商业化似乎天经地义，然而反观Google，开源 Kubernetes 究竟意欲如何呢？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujLBa1fFNZA70jAT3tm0J7ZTszyXpUq3QfB6ANibCSplotuuuVo4ib3jY0XOmoeR3q93k6F09EsUSbQ/0?wx_fmt=jpeg"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这是一个充满想象空间的话题。不过反观20年的软件发展史，或许我们可以有所头绪。Microsoft从操作系统起家，Google在搜索领域一家独大，而近来另一家名为Amazon的公司却依靠云计算业务迅速后来居上，并似乎依然有不小的潜力。在这里，相信细心的朋友一定会注意到近年来发展迅猛的“云计算”。谈及云计算，如果为Google粗略一想，不难得出矛盾：Google坐拥内部如此强大的Borg系统，却依然在公有云业务上和AWS相差甚远。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Docker的诞生与盛行，相信也为Google带来了契机。这三年来，Gartner以及IT界巨头纷纷对容器技术持乐观态度，甚至预言未来的云计算，将会全部运行在容器之上，容器将成为云计算的基石。Google的云计算业务拥有GAE、GCE等，然而谈及效果，外界对其肯定的声音甚是微弱。那么问题来了，未来五年、甚至十年的容器公有云，Google会坐视不管吗？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我相信，“公有云”战略上，Google会是屡败屡战！借着Docker的兴起，借着容器这阵东风，借着Borg的积淀，“卷土重来”未可知！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;Google 的公有云战略&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;看公有云市场，头把交椅被Amazon稳稳坐定。不过，幸运的是，扯上容器，AWS似乎并不占有优势，甚至还会与其自身的EC2等产品冲突。而Google则是号称多年前，即将内部业务全部通过容器封装，在技术与运营经验存在得天独厚的优势，即 Borg，如今的关键在于如何培育生态，以及如何从Docker这家公司手中抢占用户。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;开源Kubernetes是第一步，就在今年，另一件大事应该是Kubernetes成为CNCF基金会项目，看似更加开放，发展将会更健康。然而，其背后仿佛也透露着Google并不关心Kubernetes是否绝对掌握在自己手中，反倒是适当的放权，会更易于建立一个好的开发者生态，原因很简单，因为Google有Borg。需要清楚的是：虽然对Kubernetes的掌控权力弱化，但是Google在项目中从事的主要工作一直很清晰——定义Kubernetes的API。API是大多数项目的生命力，可开放也可封闭，也有可能成为领域的标准。十年前Borg那套无法在外界落地的API，如果Google趁着这一波容器风波，通过几年的时间，统一Kubernetes与Borg的API，一旦外界用户逐渐习惯Google通过Kubernetes对外开源的这一套容器管理API，那么Google是否会在未来的云计算领域与AWS分庭抗礼，绝对是一个充满想象空间的话题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;回到公有云，既然未来有可能统一容器管理的API，那么Google有必要维护Borg以及Kubernetes两套容器管理平台吗？统一的API，没人关心底层平台的实现具体如何，那成熟的自然会成为首选，毫无疑问是Borg，也就是未来Google的公有云很有可能是通过Borg来支撑。毕竟，Borg是久经检验，其软硬件结合能力足够强大，不过是个闭源的产品。既然涉及公有云，涉及商业，我们换个角度来看，倘若开源的Kubernetes足够成熟，足够支撑大规模用户场景，那么未来Google的公有云问世，又怎么会有企业愿意将业务从稳定成熟的Kubernetes环境中，迁移到Google的公有云上呢？这样，Kubernetes的稳定成熟势必会成为一个悖论。 基于这样的原因，笔者也了解过类似BAT、eBay级别的大公司，然而在这些技术性公司强大专业运维团队维护的同时，依然无法很好的帮助现有业务适应Kubernetes，另外其分布式系统规模带来的复杂度和欠佳的稳定性，同样印证了以上观点。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;Kubernetes 阵营&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Kubernetes upstream社区这一年来一直有这样的一个说法：如今的Kubernetes越来越像当年的OpenStack，群雄并起。Kubernetes项目的创始人Brendan Burns出走微软时，也对Kubernetes当前运营的复杂以及混乱颇有微词。既然Google逐渐放权Kubernetes，生态阵营中，Google精力专注于API的规范制定上，那么Kubernetes阵营中还有哪些成员，都在做些什么呢？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujLBa1fFNZA70jAT3tm0J7ZrHZ6OVdHgYIf4XYUpoq1cbSkKrL9oLDib7BmgmibOsHrbsvp65rhESuQ/0?wx_fmt=gif"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;排除Google，其他的知名组织还包括：开源老兵红帽(RedHat)，创业新锐CoreOS，以及像华为这样国内优秀企业。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;说到RedHat，这一自始至终投身企业级市场做服务的巨头，看其近年来云业务的发展，不难发现其第二代PaaS时代，OpenShift栽过不小的跟头。后来索性宣布抛弃原有的老路，新版本OpenShift全面拥抱Kubernetes，几乎可以断定，其初衷偏离其擅长的私有市场领域，可能性不大，毕竟成熟的容器公有云问世之前，企业市场依然诱人。另外，在Kubernetes中容器runtime这一众厂商政治斗争最为激烈的领域，RedHat没有理由回避。不管是Docker，还是runC，还是rkt，还是runV，都没有RedHat巨大的操作系统发行版市场份额的优势，同时在Kubernete内部controller的丰富性方面，RedHat同样是不遗余力地在贡献，很容易联想到其在未来企业级市场上的技术布局。因此RedHat在Kubernetes中的影响，一直将偏向其自身既有优势，当然这也无可厚非。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;CoreOS是一家极具创新精神的创业公司，其etcd、CoreOS发行版、flannel以及fleet等开源项目均被业界津津乐道，目前他们也把绝大部分的精力投入Kubernetes，甚至对类似于rkt，CoreOS等开源项目都很少维护。记得etcd的作者曾经说过，etcd将会在未来更好的服务Kubernetes，同时CoreOS也在容器runtime的支持上投入大量的精力，还包括Kubernetes的性能优化等。毕竟，如果看到OpenStack领域，存在Mirantis这样体量的创业公司，谁都会遐想容器生态中是否会有复制。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当然，除了以上三大阵营之外，参与的组织还有很多。不过不可否认的是：开放意味着参与，参与即存在各自立场，立场难免涉及“政治”。不过话又说回来，如何从Docker公司手中，抢得足够的用户群体，都会是Kubernetes阵营面对商业化时，需要思考的严峻话题。何况，容器编排目前已经以一种超乎想象的简单方式，集成进入docker自身。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;总结&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Kubernetes项目在容器生态中依然扮演着举足轻重的角色，其起源、发展、开放的历程，都值得容器生态的每一个参与者玩味。如果Kubernetes是google走向容器公有云的一颗棋子的话，那么在企业级市场中，是毒药还是解药，同样会是一个值得深思的话题。不过，不可否认的是，容器生态中，虽然没有Google，红帽等公司这样大的体量，Docker公司作为新锐，依然是容器世界的翘楚。当然，如果要上升到云计算的高度，也许行业还得征求一下Amazon以及Microsoft的态度，他们可从未说过，未来容器世界他们会作壁上观。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAuiaBCibnicg87kue5JEYw7TTYF2l1Sfflft5pXMySicibQmEk8NXYrK7JmdMXpLG3FpgAVXCsp1XJ4hqJQ/0?wx_fmt=jpeg"/&gt;&lt;/p&gt;</description>
      <pubDate>Fri, 14 Oct 2016 17:27:10 +0800</pubDate>
    </item>
    <item>
      <title>从概念到底层技术，区块链一站式分析和汇总（附知识图谱）</title>
      <link>http://www.iwgc.cn/link/3038619</link>
      <description>&lt;p&gt;&lt;span&gt;区块链作为一种架构设计的实现，与等基础语言或平台的知识库差别较大。区块链是加密货币背后的技术，是当下与VR虚拟现实等比肩的热门技术之一，本身不是新技术，类似Ajax，可以说它是一种技术架构，所以我们从架构设计的角度谈谈区块链的技术实现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;无论你擅长什么编程语言，都能够参考这种设计去实现一款区块链产品。与此同时，梳理与之相关的知识图谱和体系，帮助大家系统的去学习研究。文末，推荐了一些精选内容，供大家阅读。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section label="Copyright © 2016 playhudong All Rights Reserved." style="
width:100%;
margin:1em auto;
text-align: center;" donone="shifuMouseDownPayStyle(&amp;#39;shifu_t_044&amp;#39;)"&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section style="
margin-left: 0.5em;
display: inline-block;"&gt;&lt;p&gt;区块链是什么&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;区块链来自于比特币等加密货币的实现，目前这项技术已经逐步运用在各个领域。我们可以使用谷歌地球的例子做类比：ajax不是新技术，但组合后成就了产品谷歌地球。区块链与加密解密技术、P2P网络等组合在一起，诞生了比特币。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;技术人员，特别是Web开发工程师，学习了解ajax技术最早是被谷歌地球酷炫的效果所吸引。而现在，历史再一次重演，很多人被比特币的疯狂发展所吸引，进而开始研究其背后的技术——区块链。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;区块链作为比特币背后的技术，无需中心服务器，可实现各类存储数据公开、透明、可追溯。原本是比特币等加密货币存储数据的一种独特方式，是一种自引用的数据结构，用来存储大量交易信息，每条记录从后向前有序链接起来，具备公开透明、无法篡改、方便追溯的特点。实际上，这种特性也直接体现了整个比特币的特点，因此使用区块链来概括加密货币背后的技术实现是非常直观和恰当的。区块链是一项技术，加密货币是其开发实现的一类产品（含有代币，也有不含代币的区块链产品），不能等同或混淆。与加密货币相比，区块链这个名字抛开了代币的概念，更加形象化、技术化，更适合作为一门技术去研究。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以，目前当大家单独说到区块链的时候，就是指的区块链技术，是实现了数据公开、透明、可追溯的产品的架构设计方法，算作广义的区块链。而当在具体产品中谈到区块链的时候，可以指类似比特币的数据存储方式，或许是数据库设计，或许是文件形式的设计，这算作狭义的区块链。广义的区块链技术，必须包含点对点网络设计、加密技术应用、分布式算法的实现、数据存储技术的使用等4个方面，其他的可能涉及到分布式存储、机器学习、VR、物联网、大数据等。狭义的区块链仅仅涉及到数据存储技术，数据库或文件操作等。本文的区块链，指的是广义的区块链。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section label="Copyright © 2016 playhudong All Rights Reserved." style="
width:100%;
margin:1em auto;
text-align: center;" donone="shifuMouseDownPayStyle(&amp;#39;shifu_t_044&amp;#39;)"&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section style="
margin-left: 0.5em;
display: inline-block;"&gt;&lt;p&gt;区块链架构&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;从架构设计上来说，区块链可以简单的分为三个层次，协议层、扩展层和应用层。其中，协议层又可以分为存储层和网络层，它们相互独立但又不可分割。如图：&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujtib69z0U3bTeHRmLicFwmrMqrNeibVTTTv1vMWib0F5nWxkeFB6DyzneeTibMqlian6pjJGT3zMQzibc1w/0?wx_fmt=png"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;协议层&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;指代最底层的技术。这个层次通常是一个完整的区块链产品，类似于我们电脑的操作系统，它维护着网络节点，仅提供Api供调用。通常官方会提供简单的客户端（通称为钱包），这个客户端钱包功能也很简单，只能建立地址、验证签名、转账支付、查看余额等。这个层次是一切的基础，构建了网络环境、搭建了交易通道、制定了节点奖励规则，至于你要交易什么，想干什么，它一概不过问，也过问不了。典型的例子，自然是比特币，还有各种二代币，比如莱特币等，本书介绍的亿书币也是。这个层次，是现阶段开发者聚集的地方，这说明加密货币仍在起步当中。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;协议层主要包括网络编程、分布式算法、加密签名、数据存储技术等4个方面，其中网络编程能力是大家选择编程语言的主要考虑因素，因为分布式算法基本上属于业务逻辑上的实现，什么语言都可以做到，加密签名技术是直接简单的使用（可以看加密解密文章，不建议自由发挥，没有过多的编码逻辑），数据库技术也主要在使用层面，只有点对点网络的实现和并发处理才是开发的难点，所以对于那些网络编程能力强，对并发处理简单的语言，人们就特别偏爱。因此，Nodejs开发区块链应用，逐渐变得更加流行，Go语言也在逐渐兴起。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上面的架构设计图里，我把这个层面进一步分成了存储层和网络层。数据存储可以相对独立，选择自由度大一些，可以单独来讨论。选择的原则无非是性能和易用性。我们知道，系统的整体性能，主要取决于网络或数据存储的I/O性能，网络I/O优化空间不大，但是本地数据存储的I/O是可以优化的。比如，比特币选择的是谷歌的LevelDB，据说这个数据库读写性能很好，但是很多功能需要开发者自己实现。目前，困扰业界的一个重大问题是，加密货币交易处理量远不如现在中心化的支付系统（银行等），除了I/O，需要全方位的突破。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;分布式算法、加密签名等都要在实现点对点网络的过程中加以使用，所以自然是网络层的事情，也是编码的重点和难点，《Nodejs开发加密货币》全书分享的基本上就是这部分的内容。当然，也有把点对点网络的实现单独分开的，把节点查找、数据传输和验证等逻辑独立出来，而把共识算法、加密签名、数据存储等操作放在一起组成核心层。无论怎么组合，这两个部分都是最核心、最底层的部分，都是协议层的内容。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;扩展层&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这个层面类似于电脑的驱动程序，是为了让区块链产品更加实用。目前有两类，一是各类交易市场，是法币兑换加密货币的重要渠道，实现简单，来钱快，成本低，但风险也大。二是针对某个方向的扩展实现，特别值得一提的就是大家听得最多的“智能合约”的概念，这是典型的扩展层面的应用开发。所谓“智能合约”就是“可编程合约”，或者叫做“合约智能化”，其中的“智能”是执行上的智能，也就是说达到某个条件，合约自动执行，比如自动转移证券、自动付款等，目前还没有比较成型的产品，但不可否认，这将是区块链技术重要的发展方向。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;扩展层使用的技术就没有什么限制了，可以包括很多，上面提到的分布式存储、机器学习、VR、物联网、大数据等等，都可以使用。编程语言的选择上，可以更加自由，因为可以与协议层完全分离，编程语言也可以与协议层使用的开发语言不相同。在开发上，除了在交易时与协议层进行交互之外，其他时候尽量不要与协议层的开发混在一起。这个层面与应用层更加接近，也可以理解为B/S架构的产品中的服务端（Server）。这样不仅在架构设计上更加科学，让区块链数据更小，网络更独立，同时也可以保证扩展层开发不受约束。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;从这个层面来看，区块链可以架构开发任何类型的产品，不仅仅是用在金融行业。在未来，随着底层协议的更加完善，任何需要第三方支付的产品都可以方便的使用区块链技术；任何需要确权、征信和追溯的信息，都可以借助区块链来实现。我个人觉得，这个目标应该很快就能实现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;应用层&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这个层面类似于电脑中的各种软件程序，是普通人可以真正直接使用的产品，也可以理解为B/S架构的产品中的浏览器端（Browser）。这个层面的应用，目前几乎是空白。市场亟待出现这样的应用，引爆市场，形成真正的扩张之势，让区块链技术尽快服务于大众。大家使用的各类轻钱包（客户端），应该算作应用层最简单、最典型的应用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;限于当前区块链技术的发展，比如亿书只能从协议层出发，把目标指向应用层，同时为第三方开发者提供扩展层的强大支持。这样做既可以避免贪多，又可以避免无法落地，是真正理性的开发路线。因为纯粹的开发协议层或扩展层，无法真正理解和验证应用层，会脱离实际，让第三方开发者很难使用。如果仅仅考虑应用层，市面上又找不到真正牢固、易用的协议层或扩展层的产品。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;➤&lt;/span&gt;编程实现&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;很多小伙伴，习惯结合自己的技术背景，来理解上面的架构设计。这里，结合具体的编程语言，简单介绍几款产品，仅供参考。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;（1）C/C++&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这两个语言是无法逾越的，任何开发遇到瓶颈，基本上都会找到它们，自然应该排在第一位要介绍的。同时，区块链技术的鼻祖，比特币（协议层）就是用C++语言开发的，而且目前为止，没有比比特币更加成功的区块链产品。所以，无论你使用什么语言开发，在正式进入这个行业的过程中，都应该先研究研究比特币。比特币官方客户端钱包用的Qt，第三方钱包有Python语言开发的，特别是第三方整理的开发库（Api包）很多是Nodejs设计的。比特币的架构，与上面的架构设计基本相同，另外，因为共识算法采用的是工作量证明机制（PoW:Proof of work)，还有一些特殊的挖矿的过程。其他竞争币都是直接来自比特币的分支，所以编程语言相同，具体的技术选型和技术实现上可能有所改进，比如：莱特币，使用了其他的加密算法。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;官方网站：&lt;span&gt;https://bitcoin.org&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;源码库：&lt;span&gt;https://github.com/bitcoin&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;C语言知识库：&lt;span&gt;http://lib.csdn.net/base/c&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;（2）Nodejs/Javascript&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Nodejs平台强大的网络编程能力，以及js脚本语言的简单快捷，在区块链领域自然少不了它的身影。亿书便是这样一个区块链产品，亿书币是它的协议层，使用了著名的express开发框架，基于http协议开发而成。同时，它采用了授权股权证明机制（DPoS），算法上的改进，让它在处理交易时更加轻量，处理能力大大提升。它提供了强大的协作机制，为数字出版、版权保护提供了便利；扩展了侧链功能，可以基于它开发任何去中心化的应用，从而为专业作者、博客爱好者和开发者提供很多方便。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;《Nodejs开发加密货币》这本书完整分享了它的源码，从区块链基础概念到代码实现，从基本原理到开发设计思路，都做了比较详细的探索，目前为止，从协议层面深入代码讲解区块链技术实现的书籍极少，这算作一本。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;官方网站：&lt;span&gt;http://ebookchain.org&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;源码库：&lt;span&gt;https://github.com/Ebookcoin&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Node.js知识库：&lt;span&gt;http://lib.csdn.net/base/nodejs&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;（3）Python&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果是Python语言爱好者，我建议研究研究以太坊（Ethereum）的Python实现。尽管因为The Dao事件闹得沸沸扬扬，但从技术实现的角度来说，仍然值得参考学习。以太坊官方定位为一种开发管理分布式应用的平台，主攻方向就是“智能合约”，并为其定制了一种编程语言Solidity。以太坊的核心是以太坊虚拟机（EVM），允许用户按照自己的意愿创建操作。以太坊给出了Go、Java、Python等多语言的实现。其中以python为基础的实现主要包括三个部分：Pyethapp是客户端部分；pyethereum是核心库，实现了区块链、以太坊模拟机和挖矿等功能；pydevp2p是点对点网络库，实现了节点发现、合约代码传输、加密签名等功能，这三者组合在一起就是完整的区块链实现，后面两个核心库共同组成了协议层。另外，go-ethereum是go语言的完整实现；Ethereum(J) 是纯Java实现，它作为可以嵌入任何Java/Scala项目的库提供。客户端方面，还有Rust、Ruby、Javascript等语言的实现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;官方网站：&lt;span&gt;https://ethereum.org&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;源码库：&lt;span&gt;https://github.com/ethereum/pyethapp&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Python知识库：&lt;span&gt;http://lib.csdn.net/base/python&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;（4）Go&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在多核时代，Go语言备受喜爱，它可以让你用同步方式轻松实现高并发，特别是在分布式系统、网络编程等领域，应用非常广。在区块链开发领域，也有很多使用Go语言的项目。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其中，由linux基金会主导的超级账本（HyperLeger），版本库的名字叫Fabric，就是其中一个。该项目试图为新一代的事务应用创建一种开放的分布式账本标准，支持许可式区块链（这种方式可能无法再现比特币那种强大的网络效应）。Fabric的开发环境建立在VirtualBox虚拟机上，部署环境可以自建网络，也可以直接部署在BlueMix上，部署方式可docker化，支持用Go和JavaScript开发智能合约。它采用PBFT分布式算法，网络编程方面用gRPC来做P2P通讯，使用 Protocol Buffer来序列化要传递的数据结构。在架构设计上，Fabric可能与比特币等区块链产品有所不同，但是上述基本组成部分还是不可或缺的。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;官方网站：&lt;span&gt;https://www.hyperledger.org&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;源码库：&lt;span&gt;https://github.com/hyperledger&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Go知识库： &lt;span&gt;http://lib.csdn.net/base/go&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其他编程语言，比如：C#等，也有具体实例，这里就不再列举。针对不同的编程语言，在具体的编码或架构设计上可能有很大差别，但是协议层所使用的技术并没有太大的变化。网络编程是重点和难点，多数没有现成的框架可用，都是使用编程语言自身提供的库来设计开发，所以比较底层，非常考验开发者的编码功底。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section label="Copyright © 2016 playhudong All Rights Reserved." style="
width:100%;
margin:1em auto;
text-align: center;" donone="shifuMouseDownPayStyle(&amp;#39;shifu_t_044&amp;#39;)"&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section style="
margin-left: 0.5em;
display: inline-block;"&gt;&lt;p&gt;区块链知识图谱&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_png/Pn4Sm0RsAujtib69z0U3bTeHRmLicFwmrM0B3oal5sxhicYsPJpSMAzJfAW6bialNoicBJAn2bBh3CSesUQ0JlMRhwA/0?wx_fmt=gif"/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我把与区块链相关的知识内容分为下面5个方面：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;（1）基础知识&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;区块链是新技术，与之相关的是其背后大量的新概念、新理论。这些知识，虽然不直接体现在编码里，但却是理解区块链，掌握区块链技术的基本知识。所以，理当成为区块链技术不可或缺的一部分。这部分从基本概念入手，到工作原理的描述，就能够把区块链基础知识全部覆盖。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;（2）技术实现&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;区块链是一项技术，但从上面的分析可以看出，它应该是一种架构应用，架构的实现理当是我们知识库的核心。正如大家看到的，任何一款区块链产品，协议层必须包括点对点网络、加密签名、数据存储、分布式算法等4个部分，应用层也必然要提供钱包、客户端浏览器等基础应用。所以，把这部分独立出来，也是合情合理。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在扩展层的部分，区块链技术可以对接各种应用，比如：金融、物联网、网络安全、版权保护、电子商务等等，现有的很多技术都可以用在这里。只不过，如何与区块链结合，如何实现跨行业使用，自然是这部分内容研究的课题。所以，这里所罗列或涉及到的技术，理应归为技术实现的一个重要部分。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;（4）开发环境&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;区块链是多项技术的组合，有其自身的复杂性，个别应用对开发环境依赖较大，开发工具与环境搭建，是让开发者快速上手的重要内容。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;（5）项目实践&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;据说，短短数年，全球区块链产品已经有几千个，其中不乏创新应用。有些优秀的开源产品和项目实践，是最好的学习研究资料。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以上，我们把区块链技术基础架构描述了一下，需要再次强调的是，这仅仅是一种实现方式，绝非所有的区块链产品都是如此，我们也期待更多创新出现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section label="Copyright © 2016 playhudong All Rights Reserved." style="
width:100%;
margin:1em auto;
text-align: center;" donone="shifuMouseDownPayStyle(&amp;#39;shifu_t_044&amp;#39;)"&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section style="
margin-left: 0.5em;
display: inline-block;"&gt;&lt;p&gt;编者说&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;编程实现罗列了几种编程语言与其实现的典型产品，因为协议层技术较为底层，并没有太多现成的框架需要介绍或讨论。这些产品都是开源产品，大家可以结合自己的技术背景，进一步查看对应的产品源码，很快就能了解其中的奥妙。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我在考虑这个知识体系的过程中，考虑过使用比特币、竞争币、智能合约、数字资产、智能资产等具体领域的实现作为分类方法，但又怕限制了思维。随着区块链的发展，这个图谱将不停的修改下去。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在这里，呼吁一下，希望读到这篇文章的小伙伴提供您的宝贵意见，让我们把这个关于区块链的知识分类图谱做得更加科学合理，使用更加方便。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;section label="Copyright © 2016 playhudong All Rights Reserved." style="
width:100%;
margin:1em auto;
text-align: center;" donone="shifuMouseDownPayStyle(&amp;#39;shifu_t_044&amp;#39;)"&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section style="
margin-left: 0.5em;
display: inline-block;"&gt;&lt;p&gt;知识库推荐阅读&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: disc;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;什么是区块链共识&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;区块链主流开源技术体系&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;拜占庭共识&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;区块链主流开源技术体系&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;更多内容请访问&lt;span&gt;区块链知识库&lt;/span&gt;，&lt;/span&gt;&lt;span&gt;如果有更精彩的区块链内容，请留言给我们。&lt;/span&gt;&lt;span&gt;加微信yuzhong125，注明“公司-职位“参与区块链讨论。&lt;/span&gt;&lt;/p&gt;&lt;section label="Copyright © 2015 playhudong All Rights Reserved." style="
margin:1em auto;
border-style: none;" donone="shifuMouseDownCard(&amp;#39;shifu_c_005&amp;#39;)"&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;p&gt;作者简介：朱志文，亿书创始人，CSDN区块链知识库特邀编辑。中国区块链俱乐部主创者和发起人，比特币的忠实粉丝，区块链技术的布道者，代表作《Nodejs开发加密货币》。个人博客：http://blog.csdn.net/imfly&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAuiaBCibnicg87kue5JEYw7TTYF2l1Sfflft5pXMySicibQmEk8NXYrK7JmdMXpLG3FpgAVXCsp1XJ4hqJQ/0?wx_fmt=jpeg"/&gt;&lt;br/&gt;&lt;/p&gt;</description>
      <pubDate>Wed, 12 Oct 2016 18:00:36 +0800</pubDate>
    </item>
    <item>
      <title>年终技术盛会筹备中 SDCC 2016正公开征集演讲嘉宾</title>
      <link>http://www.iwgc.cn/link/3038620</link>
      <description>&lt;p&gt;&lt;span&gt;2016年，&lt;span&gt;&lt;strong&gt;SDCC（中国软件开发者大会）&lt;/strong&gt;&lt;/span&gt;相继走进了上海、深圳、成都、杭州各地。11月18日-20日将在北京完美收观，届时年度最受欢迎的企业、讲师将在这里齐聚一堂，约百位讲师将围绕电商架构、编程语言、前端开发、微信开发、视频直播、推荐算法等方面，总结分享过去一年自己感触最深、最具参考价值的实践探索，并畅想未来，把脉市场发展先机。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;除了Keynote环节外，大会还开设了电商架构、架构师进阶之路、高可用架构、基于Spark的大数据系统设计、架构演进、前端开发、微信开发、编程语言、高吞吐数据库系统设计要领、自动化运维与容器实践、移动视频直播技术、推荐算法12个技术论坛。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;大会组委会已邀请到多位技术专家担任各论坛出品人，负责演讲嘉宾邀请及议题审核：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;张立刚，1号店架构部技术总监&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;陈超，七牛技术总监&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;史海峰，当当网架构部负责人&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;杜玉杰，开源布道师&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;卢亿雷，Admaster技术副总裁&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;周裕波，w3ctech发起人&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;柳峰，贵州多米科技创始合伙人兼CTO、国内微信公众平台应用开发先驱之一、CSDN学院讲师&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;周彦伟，去哪儿网数据库总监&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;目前已确认演讲嘉宾有：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Joe Armstrong，Erlang设计者&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;蒋定宇，Stackla前端团队Leader&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;袁聪，QQ音乐&amp;amp;全民K歌高级工程师&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;黄鼎恒，饿了么Node Team负责人&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;陈鸿，未来应用创始人&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;……&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;来自BAT、京东等知名企业及秒拍、花椒、YY、今日头条、斗鱼TV、IBOS等各大新秀企业的更多演讲嘉宾正在邀请确认中。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;同时，各个技术论坛也正公开征集演讲嘉宾。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;征集形式与具体要求请见下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;span&gt;演讲形式&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;演讲时长：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;45分钟，包括5分钟的提问环节。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;演讲内容选择标准：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;实战：议题选择应围绕当前的技术难点、热点，个人/所在企业已在该领域有深入实践，借此机会分享给更多同行。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;深度：需有深度，不要泛泛而谈。最好结合具体实例，深入浅出，让听众从中有所悟、有所得，可借鉴至具体工作中最佳。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;不广告：珍爱生命，拒绝广告。请不要在演讲过程中穿插任何形式的企业、产品广告。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;技术背景：演讲人在演讲内容所涉及的技术领域有一定的从业经验并有所成就。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;span&gt;演讲嘉宾福利&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;可免费参加大会所有课程；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;结识大会其他技术大牛，并有面对面交流的机会；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;外地讲师由大会组委会承担差旅与住宿费用；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;获得被CSDN及其他各大受邀媒体采访报道机会。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;span&gt;注意事项&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在大会日程完全确定之前，可自由提交演讲议题；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;收到申请提交后，我们将在10个工作日内完成审核，并将审核结果通过邮件回复您；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;审核通过的演讲人将收到大会组委会发出正式邀请函，演讲机会以收到邀请函为准。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;span&gt;线上申请方法&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;访问：演讲嘉宾申请界面（http://sdcc.csdn.net/cview/reg/?project_id=3151&amp;amp;identy_id=1746）；&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;按表单填写完整信息，提交即可。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本技术大会共开设有12个专题论坛，您可以根据自己所善长的领域，在“申请场次”一项，选择自己想在哪个技术论坛上进行演讲分享。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;section&gt;&lt;/section&gt;&lt;span&gt;各大技术论坛简要介绍&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;电商架构&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;双11异常火爆，不管是销售数字，还是用户体验，这次全民购物狂潮再次刷新了过去的所有记录。而在这一切背后，需要稳定高效的系统架构设计来提供有力支持。本专题揭示了国内各大知名电商架构设计的最佳技术实践。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;编程语言&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;语言哲学家维特根斯坦曾说：“语言的界限就是我与世界的界限”。当你新学会一门编程语言，便有可能领略由这门语言构建起的软件世界。本专题中，Rust、Julia、Go、Erlang、PHP、Java等最受关注的编程语言设计者或资深实践者不仅将讲述他们对系统编程、科学计算等领域的观察，旧思想的精华融入新思想的历程，还将分享他们对程序设计的深邃思考。辅以深入浅出的实践经验分享，让你能在最短的时间领略这些编程语言的精巧设计，并且有能力开始新的探索。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;架构师进阶之路&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;怎样学习才能成长为一名合格的架构师，或者说一名合格的架构师应该有怎样的技术知识体系，这不仅是一个刚刚踏入职场的初级程序员也是工作三五年之后开始迷茫的老程序员经常会问到的问题。本专题内容来自CTO、首席架构师等眼中的架构师，他们将给你最全面最权威的回答。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;前端&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;随着新一代前端技术的发展，给前端开发者带来巨大的创新应用实践机会，本专题是为HTML5、CSS3、JavaScript等前端技术的互联网开发者所举办的，内容涵盖网络游戏、电商、旅游、媒体、社交、技术服务等多种互联网业态的技术经验分享，将会涉及各种WEB前端开发技术。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;高可用架构&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;理论结合实践，案例式讲述，深入剖析架构设计的高可用性，快速提升设计和架构能力，让大家系统性的掌握一线互联网公司高可用架构设计的方法论，并应用于实际工作中。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;基于Spark的大数据系统设计&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Spark是目前热门的大数据分布式编程框架之一，现已成为Apache顶级项目，受到业界的广泛关注和使用。本专场主要讨论的话题有：利用基于Spark的大数据系统设计来促进信息时代的智能化，有效结合Spark和其他热门大数据工具并加以利用；应用目前的Spark技术实现大数据在各行业的全面渗透；以及通过实际案例和场景来探讨Spark与大数据的互动创新。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;微信开发&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;微信仍以迅猛势头火速发展，并已跨入海外市场，服务着全球亿万用户。作为技术开发者，除了时刻关注领域技术发展外，更应紧盯、深挖掘该行业所蕴藏的巨大商机。目前微信开发成为SDCC大会的重要分论坛之一，2014年北京和深圳两场微信开发者大会、2015 SDCC微信开发专题论坛，吸引了不少领域技术专家参与分享，受到了广大微信开发者的一致好评。2016年，SDCC微信开发论坛将持续精彩，携手更多技术高手、创业精英，共研技术难点，碰撞创新点子。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;架构演进&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;本专题涵盖各类互联网后台、移动、直播等热门架构的演进过程，在架构变迁中遇到的痛点和解决方案，从而带给参会者以启发。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;高吞吐数据库系统设计要领&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;本专题将邀请国内外的数据库专家，共同探讨MySQL、NoSQL、Oracle、缓存技术、云端数据库、智能数据平台等领域的前瞻性热点话题与技术，尤其是在高数据量情况下实现高吞吐数据库的设计。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;自动化运维与容器实践&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;DevOps并非你想的那么简单，如今，您经常听周围的人谈论DevOps，但真正理解并能执行的人极少。其实，采纳DevOps的文化壁垒非常高，这是一个值得探索的漫长过程。DevOps论坛邀请国内DevOps行业顶级专家，和大家共同探讨DevOps具体应用场景、如何在企业实施DevOps、DevOps实际案例、DevOps如何加速企业创新等热点话题。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;移动视频直播技术&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;移动直播技术属于今年最热的前沿领域，在移动直播技术专场邀请到多位直播技术专家深度阐述直播连麦技术；在热门时段大主播高峰值情景下，如何优化直播礼物系统？面对延迟、卡顿等诸多难题，全互动直播技术的最佳解决方案；基于第三方CDN，我们该如何实现直播质量监控。更多精彩的直播技术，尽在本专题。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2" style="width: 528.188px; line-height: 25.6px; white-space: normal;"&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;推荐算法&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=" list-paddingleft-2" style="list-style-type: circle;"&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;大数据算法是大数据得以有效应用的基础，能够在保证推荐准确性的同时增加推荐的多样性，满足用户多种需求，还能够实现实时反馈，强化推荐算法。本专场主要讨论的话题有：利用大数据算法来实现组织的运营能力；通过推荐算法分析有效打通不同算法间的固有壁垒；应用目前的大数据算法来提升企业IT效率；以及通过实际案例和场景来探讨推荐算法的应用分析能力。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Pn4Sm0RsAujtib69z0U3bTeHRmLicFwmrMdZS2qn7uGmFtkhfyKUA77lfPt8mnWExia59CrEWBDvk8gRgtLIaDrzg/0?wx_fmt=jpeg"/&gt;&lt;/span&gt;&lt;/p&gt;</description>
      <pubDate>Wed, 12 Oct 2016 18:00:36 +0800</pubDate>
    </item>
    <item>
      <title>Hugo：一个快速、现代的静态网页引擎</title>
      <link>http://www.iwgc.cn/link/3038622</link>
      <description>&lt;p&gt;&lt;span&gt;Hugo是一个制作静态页面的工具，非常灵活，可以以多种形式工作，是制作博客、文档、个人履历等非常合适的工具。Hugo激发了创造力，让建造网页变得充满乐趣。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;“&lt;/span&gt;&lt;span&gt;一次编写，到处运行&lt;/span&gt;&lt;span&gt;”&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Hugo可能是你用过的最容易安装的软件——只要下载打开就可以了！Hugo并不依赖任何权限、数据库、运行库、解释器或外部库。使用Hugo编写的网站可以运行在S3，Github Pages，Dropbox或其它任何静态网页托管上。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;“&lt;/span&gt;&lt;span&gt;强大的性能&lt;/span&gt;&lt;span&gt;”&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Hugo为速度和性能而生。我们付出很大的精力来尽可能地减少编译时间。大多数编译只要毫秒级的时间就可以完成！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;“&lt;/span&gt;&lt;span&gt;灵活&lt;/span&gt;&lt;span&gt;”&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Hugo可以灵活地适应你的任务。你可以使用任何你喜欢的方式组织URL，通过自定义的index页面和分类组织内容。使用任何形式定义你自己的元数据，例如YAML、TOML或JSON。最棒的是，Hugo不需要任何配置文件就可以处理这些差异。Hugo就是好。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;“&lt;/span&gt;&lt;span&gt;讨论&lt;/span&gt;&lt;span&gt;”&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;sfifs说：我喜欢Hugo最大的原因是：几乎所有其它的引擎都要求我安装完整的Ruby或JavaScript开发环境，才能预览我的博客，而Hugo就不需要。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;eberkund说：为什么我要从jekyll换到Hugo呢？现在已经有无数的网站生成工具了，而且它们几乎都有差不多的特性。有没有两者都用过的人来解释一下，这些工具究竟有什么不同？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;andmarios说：对我来说，最重要的是他们的静态库如何。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我确实用过Jekyll，但是对于一个会运行很多年的网站来说，照顾一个ruby app是我不想插手的事。也许我的服务器和我的桌面端的Ruby版本不同，也许一些Ruby Gems已经在我的发行版安装了，但不是我想要的，这就得重新手动安装它们，每次Gem提供的功能出了什么问题，我就得手动重新安装一下，还得SSH到服务器再重装。有时候由于发行版的原因，一些Gem还不能装。也许jekyll哪天发了新版本，用了最新Ruby特性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Hugo在这方面有很多优势，比如内置服务器、实时载入和在本地测试时方便的链接转换等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;/section&gt;&lt;p&gt;原文：Hugo: A fast and modern static website engine&amp;nbsp;&lt;/p&gt;&lt;p&gt;作者：Hugo官网 翻译：赖信涛 责编：仲培艺&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2016年11月18日-20日，由CSDN重磅打造的&lt;span&gt;&lt;strong&gt;年终技术盛会SDCC 2016中国软件开发者大会&lt;/strong&gt;&lt;/span&gt;将在北京举行，大会秉承干货实料（案例）的内容原则，本次大会共设置了12大专题、近百位的演讲嘉宾，并邀请业内顶尖的CTO、架构师和技术专家，与参会嘉宾共同探讨电商架构、高可用架构、编程语言、架构师进阶、微信开发、前端、平台架构演进、基于Spark的大数据系统设计、自动化运维与容器实践、高吞吐数据库系统设计要领、移动视频直播技术等。10月14日仍是&lt;strong&gt;&lt;span&gt;五折抢票&lt;/span&gt;&lt;/strong&gt;，最低1400元，注册参会：&lt;span&gt;http://sdcc.csdn.net/m/zone/sdcc_2016/index#canhui&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;</description>
      <pubDate>Wed, 12 Oct 2016 18:00:36 +0800</pubDate>
    </item>
    <item>
      <title>6个原因说服你选择PostgreSQL 9.6</title>
      <link>http://www.iwgc.cn/link/3027814</link>
      <description>&lt;p&gt;原文请点击最下方阅读原文按钮，作者 Damien Clochard，本文译者：小次郎@飞象&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;PostgreSQL9.6&lt;span&gt;在前些日子发布了&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;社区为该版本的重大更新付诸良多&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;发布日志一如既往的长&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;我挑选了&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;&lt;span&gt;个重要的更新， 这些或许能够帮助你更好的使用&lt;/span&gt;&lt;span&gt;PostgreSQL&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style="margin-left: 0px; text-indent: 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;并行&lt;/span&gt;:&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;并行应该是这个版本中最大的卖点&lt;/span&gt;:&lt;span&gt;这个期待良久的功能， 将会出现在用户的许多场景中， 在&lt;/span&gt;&lt;span&gt;PostgreSQL&lt;/span&gt;&lt;span&gt;之前的版本中， 即便拥有很多的空闲处理器&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;数据库的单个查询只能利用单个&lt;/span&gt;&lt;span&gt;cpu&lt;/span&gt;&lt;span&gt;的计算能力。 这个限制现在没有了&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;许多场景下的查询现在可以利用并行特性&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span&gt;顺序扫描&lt;/span&gt;&lt;span&gt;,join,&lt;/span&gt;&lt;span&gt;聚合计算&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;这些都可以利用并行的多核处理器。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style="margin-left: 0px; text-indent: 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;更好的锁监控&lt;/span&gt;:&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;pg_stat_activity&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;span&gt;视图提供了更加详细的等待信息，&lt;/span&gt; &lt;span&gt;当一个进程正在等待一个锁，你会看到锁的类型，以及将你的查询阻塞的等待事件的详细信息。&lt;/span&gt; &lt;span&gt;另外增加了&lt;/span&gt;pg_blocking_pids()&lt;span&gt;函数， 你就会知道哪些进程阻塞这个给定的服务器进程。 这些监控都能够过帮助&lt;/span&gt;&lt;span&gt;DBA&lt;/span&gt;&lt;span&gt;了解一个特定事件触发的锁等待了多长时间， 从而找到系统瓶颈&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style="margin-left: 0px; text-indent: 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;多个同步服务器&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;前面版本的同步流复制中至多可以拥有一个同步节点，&lt;/span&gt; PostgreSQL9.6&lt;span&gt;允许配置多个同步节点，用户可以设置一个或多个节点来同步数据， 并通过确保所有节点的确认信息提高了事务的可靠性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style="margin-left: 0px; text-indent: 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;防止膨胀&lt;/span&gt;:&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;截止现在，一个长时间的报表输出&lt;/span&gt;, &lt;span&gt;或者一个一个游标的查询结果输出信息都会阻塞失效行的清理， 数据库中这些经常改动的表会膨胀，会触发数据库的性能问题&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;导致存储空间的大量使用。 该版本中添加了 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;old_snapshot_threshold&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;span&gt;参数允许集群清理事务结束无效的行&lt;/span&gt;, &lt;span&gt;所有的快照都可以看到该记录已经到达了一定的年纪&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style="margin-left: 0px; text-indent: 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;PostgreSQL FDW&lt;span&gt;优化&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;PostgreSQL&lt;span&gt;现在拥有超过&lt;/span&gt;&lt;span&gt;80&lt;/span&gt;&lt;span&gt;多种外部表封装&lt;/span&gt;&lt;span&gt;(FDW), &lt;/span&gt;&lt;span&gt;可以用来访问几乎大多数的远程数据源， 在&lt;/span&gt;&lt;span&gt;9.6&lt;/span&gt;&lt;span&gt;版本中&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span&gt;postgres_fdw&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;span&gt;引入了很多的改进，&lt;/span&gt; &lt;span&gt;这些改进包括控制拉取数据量的参数&lt;/span&gt;&lt;/span&gt;&lt;span&gt;fetch_size&lt;/span&gt;&lt;span&gt;, &lt;span&gt;下推操作&lt;/span&gt;&lt;span&gt;(join, sorts)&lt;/span&gt;&lt;span&gt;到远程&lt;/span&gt;&lt;span&gt;PostgreSQL&lt;/span&gt;&lt;span&gt;实例， 如果你想对多个数据库的数据做聚合技术，这些都便于你的操作&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style="margin-left: 0px; text-indent: 0px;"&gt;&lt;span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;远程作用&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;PostgreSQL9.6 &lt;span&gt;中新增加了一种复制模式&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;叫做 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;remote_apply&lt;/span&gt;&lt;span&gt;, Master&lt;span&gt;节点等待事务作用到远端节点，而不仅仅是写入磁盘， 这会比通常的复制模式慢一些&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;但不会慢很多， 它会确保所有的&lt;/span&gt;&lt;span&gt;“&lt;/span&gt;&lt;span&gt;提交数据&lt;/span&gt;&lt;span&gt;”&lt;/span&gt;&lt;span&gt;在&lt;/span&gt;&lt;span&gt;slave &lt;/span&gt;&lt;span&gt;节点已经生效&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;如果你想让你的只读查询分布到多个节点的话，这就是为你准备的&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;筛选出其中&lt;/span&gt;6&lt;span&gt;项是一个艰难的选择， 因为在此版本中， 还存在许多其他方面的改进&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;比如有&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span&gt;短语全文检索， &lt;/span&gt;&lt;/span&gt;&lt;span&gt;pg_visibility&lt;/span&gt;&lt;span&gt;&lt;span&gt;拓展模块&lt;/span&gt;, frozen &lt;span&gt;页面更好的空间回收&lt;/span&gt;&lt;span&gt;(VACUUM)&lt;/span&gt;&lt;span&gt;机制&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;部分索引&lt;/span&gt;&lt;span&gt;(partial indexes)&lt;/span&gt;&lt;span&gt;只扫描索引部分&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;命令进度的报告&lt;/span&gt;&lt;span&gt;… PostgreSQL &lt;/span&gt;&lt;span&gt;一如既往，拥有很多的性能提升&lt;/span&gt;&lt;span&gt;!&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;对于这个版本的详细信息，可以从这个维基页面开始&lt;/span&gt;:&lt;/span&gt; https://wiki.postgresql.org/wiki/NewIn96&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;a target="_blank" data_ue_src="http://"&gt;&lt;img src="https://images.weserv.nl/?url=mmbiz.qpic.cn/mmbiz_jpg/Jcm9aJTGPBQVZtcfT7HBtPuBeV2yYuFBhicm1LfG4LEls9GmtfBBvmaEkyJqZF5tUII3rnZWJ8lGbUSQ1ibnu5kA/0?wx_fmt=jpeg"/&gt;&lt;br/&gt;&lt;/a&gt;&lt;/p&gt;</description>
      <pubDate>Tue, 11 Oct 2016 20:45:39 +0800</pubDate>
    </item>
  </channel>
</rss>
